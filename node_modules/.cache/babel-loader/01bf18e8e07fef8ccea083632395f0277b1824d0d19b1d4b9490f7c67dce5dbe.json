{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${isSelected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAddChild(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemoveNode(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected === child\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const addNodeRecursively = (nodes, parentNode, childName) => {\n      if (nodes.id === parentNode.id) {\n        const newChild = {\n          id: `node-${Math.random()}`,\n          // Ideally, use a better unique ID generation strategy\n          name: childName,\n          children: []\n        };\n        return {\n          ...nodes,\n          children: [...nodes.children, newChild]\n        };\n      } else if (nodes.children) {\n        return {\n          ...nodes,\n          children: nodes.children.map(child => addNodeRecursively(child, parentNode, childName))\n        };\n      }\n      return nodes;\n    };\n    setNodes(currentNodes => addNodeRecursively(currentNodes, parentNode, childName));\n  };\n  const onRemoveNode = nodeId => {\n    const removeNodeRecursively = (nodes, nodeId) => {\n      return {\n        ...nodes,\n        children: nodes.children.filter(child => child.id !== nodeId).map(child => removeNodeRecursively(child, nodeId))\n      };\n    };\n    setNodes(currentNodes => removeNodeRecursively(currentNodes, nodeId));\n  };\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode,\n        isSelected: selectedHolon === nodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", selectedHolon.description || 'No description available.']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a holon to see details.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N66WkNuQdpmQI9RDYNnLtkATaqE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","map","child","_c","App","_s","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","childName","prompt","addNodeRecursively","newChild","Math","random","currentNodes","nodeId","removeNodeRecursively","filter","lineWidth","lineColor","lineBorderRadius","description","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${isSelected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAddChild(node); }}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemoveNode(node.id); }}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon key={child.id} node={child} onAddChild={onAddChild} onRemoveNode={onRemoveNode} onSelectNode={onSelectNode} isSelected={isSelected === child} />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    children: [],\n  });\n\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const addNodeRecursively = (nodes, parentNode, childName) => {\n      if (nodes.id === parentNode.id) {\n        const newChild = {\n          id: `node-${Math.random()}`, // Ideally, use a better unique ID generation strategy\n          name: childName,\n          children: [],\n        };\n        return { ...nodes, children: [...nodes.children, newChild] };\n      } else if (nodes.children) {\n        return { ...nodes, children: nodes.children.map(child => addNodeRecursively(child, parentNode, childName)) };\n      }\n      return nodes;\n    };\n\n    setNodes(currentNodes => addNodeRecursively(currentNodes, parentNode, childName));\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNodeRecursively = (nodes, nodeId) => {\n      return { ...nodes, children: nodes.children.filter(child => child.id !== nodeId).map(child => removeNodeRecursively(child, nodeId)) };\n    };\n\n    setNodes(currentNodes => removeNodeRecursively(currentNodes, nodeId));\n  };\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon node={nodes} onAddChild={onAddChild} onRemoveNode={onRemoveNode} onSelectNode={onSelectNode} isSelected={selectedHolon === nodes} />\n      </Tree>\n      {selectedHolon ? (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p>Name: {selectedHolon.name}</p>\n          <p>Description: {selectedHolon.description || 'No description available.'}</p>\n        </div>\n      ) : (\n        <p>Select a holon to see details.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}