{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree as OrgTree, TreeNode } from 'react-organizational-chart'; // Importing from react-organizational-chart\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'; // Make sure to import your CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(OrgTree, {\n    label:\n    /*#__PURE__*/\n    /* Changed to OrgTree */\n    _jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTimes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) /* Changed to OrgTree */;\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'Description for Stakeholder node.',\n      children: []\n    }, {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Description for Infrastructure node.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [newNodeName, setNewNodeName] = useState('');\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNewNodeName('');\n  };\n  const handleAddNode = () => {\n    setShowModal(true);\n  };\n  const handleAddNodeConfirm = () => {\n    onAddChild(selectedHolon, true);\n    handleModalClose();\n  };\n  const onAddChild = (parentNode, isRoot = false) => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = newNodeName;\n    if (!nodeName) return;\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [parentNode]\n      };\n      setNodes(newParent);\n    }\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(OrgTree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: setSelectedHolon,\n          isSelected: isSelected,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: showModal ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Add Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: handleModalClose,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter Node Name\",\n              value: newNodeName,\n              onChange: e => setNewNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: handleModalClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleAddNodeConfirm,\n              children: \"Add Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lRJ8wuVnTmb23UvGdDkxHL1d7x8=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","OrgTree","TreeNode","FontAwesomeIcon","faPlus","faTimes","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","newNodeName","setNewNodeName","handleModalClose","handleAddNode","handleAddNodeConfirm","parentNode","isRoot","relationshipType","prompt","nodeName","toLowerCase","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newParent","nodeId","removeNode","nodeIdToRemove","filter","rootName","newRoot","console","log","lineWidth","lineColor","lineBorderRadius","style","display","type","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree as OrgTree, TreeNode } from 'react-organizational-chart'; // Importing from react-organizational-chart\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css'; // Make sure to import your CSS file\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <OrgTree label={ /* Changed to OrgTree */\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\n            <FontAwesomeIcon icon={faPlus} /> {/* Add Font Awesome icon for add button */}\n          </button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\n              <FontAwesomeIcon icon={faTimes} /> {/* Add Font Awesome icon for remove button */}\n            </button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n          addNewRoot={addNewRoot}\n        />\n      ))}\n    </OrgTree> /* Changed to OrgTree */\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'stakeholder',\n        name: 'Stakeholder',\n        description: 'Description for Stakeholder node.',\n        children: []\n      },\n      {\n        id: 'infrastructure',\n        name: 'Infrastructure',\n        description: 'Description for Infrastructure node.',\n        children: []\n      }\n    ]\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [newNodeName, setNewNodeName] = useState('');\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNewNodeName('');\n  };\n\n  const handleAddNode = () => {\n    setShowModal(true);\n  };\n\n  const handleAddNodeConfirm = () => {\n    onAddChild(selectedHolon, true);\n    handleModalClose();\n  };\n\n  const onAddChild = (parentNode, isRoot = false) => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = newNodeName;\n\n    if (!nodeName) return;\n\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [parentNode]\n      };\n\n      setNodes(newParent);\n    }\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <OrgTree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={setSelectedHolon}\n            isSelected={isSelected}\n            addNewRoot={addNewRoot}\n          />\n        </OrgTree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n      {/* Bootstrap Modal for Adding Node */}\n      <div className=\"modal\" style={{ display: showModal ? 'block' : 'none' }}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Add Node</h5>\n              <button type=\"button\" className=\"close\" onClick={handleModalClose}>\n                <span>&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter Node Name\"\n                value={newNodeName}\n                onChange={(e) => setNewNodeName(e.target.value)}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={handleModalClose}>Close</button>\n              <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddNodeConfirm}>Add Node</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* End Bootstrap Modal */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}