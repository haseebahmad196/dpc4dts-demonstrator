{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, onRemoveNode),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {/* your nodes structure */};\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState(\"\");\n  const handleModalClose = () => setShowModal(false);\n  const handleModalShow = node => {\n    setSelectedHolon(node);\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    handleModalShow(parentNode);\n  };\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  const handleSubmit = input => {\n    handleModalClose();\n    if (input === '1') {\n      // Add child node\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: `New Child Node`,\n        children: []\n      };\n      const newNodes = {\n        ...nodes\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (input === '2') {\n      // Add as a new root node\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: `New Parent Node`,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onSelectNode: onSelectNode,\n          isSelected: node => selectedHolon && node.id === selectedHolon.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            color: '#007bff'\n          },\n          children: \"If you want to add a child node press 1, and if you want to add a parent node press 2.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => handleSubmit('1'),\n          children: \"Press 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => handleSubmit('2'),\n          children: \"Press 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GYJ0gZXJ3v8E+EYmjQW5sm4HXkY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","relationshipType","setRelationshipType","handleModalClose","handleModalShow","parentNode","handleSubmit","input","newChild","Math","random","newNodes","addNode","parentId","push","forEach","newParent","lineWidth","lineColor","lineBorderRadius","show","onHide","Header","closeButton","Title","Body","style","textAlign","color","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, onRemoveNode)}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon\n          key={child.id}\n          node={child}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = { /* your nodes structure */ };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState(\"\");\n\n  const handleModalClose = () => setShowModal(false);\n  const handleModalShow = (node) => {\n    setSelectedHolon(node);\n    setShowModal(true);\n  };\n\n  const onAddChild = (parentNode) => {\n    handleModalShow(parentNode);\n  };\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const handleSubmit = (input) => {\n    handleModalClose();\n    if (input === '1') { // Add child node\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: `New Child Node`,\n        children: []\n      };\n      const newNodes = { ...nodes };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (input === '2') { // Add as a new root node\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: `New Parent Node`,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onSelectNode={onSelectNode}\n            isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\n          />\n        </Tree>\n      </div>\n      <Modal show={showModal} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Node</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p style={{ textAlign: 'center', color: '#007bff' }}>\n            If you want to add a child node press 1, and if you want to add a parent node press 2.\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={() => handleSubmit('1')}>Press 1</Button>\n          <Button variant=\"primary\" onClick={() => handleSubmit('2')}>Press 2</Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}