{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = prompt('Enter the name of the node:');\n    if (!nodeName) return;\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\" && parentNode.id === 'root') {\n      const newRoot = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        description: 'New Root Description',\n        // You can customize this description if needed\n        children: [parentNode]\n      };\n      setNodes(newRoot);\n    }\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: isSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","relationshipType","prompt","nodeName","toLowerCase","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newRoot","nodeId","removeNode","nodeIdToRemove","filter","console","log","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = prompt('Enter the name of the node:');\n\n    if (!nodeName) return;\n\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\" && parentNode.id === 'root') {\n      const newRoot = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        description: 'New Root Description', // You can customize this description if needed\n        children: [parentNode]\n      };\n\n      setNodes(newRoot);\n    }\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={onSelectNode}\n            isSelected={isSelected}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}