{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Button from 'react-bootstrap/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Alert;\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected,\n  setSelectedHolonIds,\n  hoveredHolonId,\n  setHoveredHolonId,\n  showAddSign,\n  setShowAddSign,\n  showRegulationLine,\n  toggleAddMessage,\n  handleAddClick,\n  originNode,\n  targetNode,\n  setTargetNode,\n  connections\n}) => {\n  const handleNodeClick = () => {\n    onSelectNode(node);\n    setShowAddSign(true);\n    toggleAddMessage(false);\n  };\n  const handleMouseEnter = () => {\n    setHoveredHolonId(node.id);\n  };\n  const handleMouseLeave = () => {\n    setHoveredHolonId(null);\n  };\n  const selected = isSelected(node);\n  const isHovered = hoveredHolonId === node.id && !selected;\n  const isTarget = targetNode && targetNode.id === node.id;\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''} ${isTarget ? 'target' : ''}`,\n      onClick: handleNodeClick,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), showAddSign && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          onClick: e => handleAddClick(e, node),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      setSelectedHolonIds: setSelectedHolonIds,\n      hoveredHolonId: hoveredHolonId,\n      setHoveredHolonId: setHoveredHolonId,\n      showAddSign: showAddSign,\n      setShowAddSign: setShowAddSign,\n      showRegulationLine: showRegulationLine,\n      toggleAddMessage: toggleAddMessage,\n      handleAddClick: handleAddClick,\n      originNode: originNode,\n      targetNode: targetNode,\n      setTargetNode: setTargetNode,\n      connections: connections\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)), showRegulationLine && node.id === 'Information System' && /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"50%\",\n      y1: \"50%\",\n      x2: \"50%\",\n      y2: \"100%\",\n      className: \"regulation-channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), connections.map(conn => conn.from.id === node.id || conn.to.id === node.id ? /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"50%\",\n      y1: \"50%\",\n      x2: \"50%\",\n      y2: \"100%\",\n      className: \"regulation-channel\"\n    }, conn.from.id + conn.to.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this) : null)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_c2 = Holon;\nconst CommunicationPage = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'Refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolonIds, setSelectedHolonIds] = useState([]);\n  const [hoveredHolonId, setHoveredHolonId] = useState(null);\n  const [showAddSign, setShowAddSign] = useState(true);\n  const [showRegulationLine, setShowRegulationLine] = useState(false);\n  const [showAddMessage, setShowAddMessage] = useState(false);\n  const [originNode, setOriginNode] = useState(null);\n  const [targetNode, setTargetNode] = useState(null);\n  const [connections, setConnections] = useState([]);\n  const toggleAddMessage = value => {\n    setShowAddMessage(value);\n  };\n  const handleSelectNode = node => {\n    setSelectedHolonIds([node.id]);\n    setShowAddSign(true);\n  };\n  const isSelected = node => selectedHolonIds.includes(node.id);\n  const handleAddClick = (e, node) => {\n    e.stopPropagation();\n    if (!originNode) {\n      setOriginNode(node);\n      setShowAddSign(false);\n      toggleAddMessage(true);\n    } else {\n      setConnections([...connections, {\n        from: originNode,\n        to: node\n      }]);\n      setOriginNode(null);\n      toggleAddMessage(false);\n      setShowAddSign(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        lineStyle: \"dashed\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onSelectNode: handleSelectNode,\n          isSelected: isSelected,\n          setSelectedHolonIds: setSelectedHolonIds,\n          hoveredHolonId: hoveredHolonId,\n          setHoveredHolonId: setHoveredHolonId,\n          showAddSign: showAddSign,\n          setShowAddSign: setShowAddSign,\n          showRegulationLine: showRegulationLine,\n          toggleAddMessage: toggleAddMessage,\n          handleAddClick: handleAddClick,\n          originNode: originNode,\n          targetNode: targetNode,\n          setTargetNode: setTargetNode,\n          connections: connections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), showAddMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Click another holon to add an information flow.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(CommunicationPage, \"2MuVWm+JizHINY771rEhVVgj8fw=\");\n_c3 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Holon\");\n$RefreshReg$(_c3, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Button","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","Alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Holon","node","onSelectNode","isSelected","setSelectedHolonIds","hoveredHolonId","setHoveredHolonId","showAddSign","setShowAddSign","showRegulationLine","toggleAddMessage","handleAddClick","originNode","targetNode","setTargetNode","connections","handleNodeClick","handleMouseEnter","id","handleMouseLeave","selected","isHovered","isTarget","label","onClick","onMouseEnter","onMouseLeave","name","variant","size","e","icon","map","child","x1","y1","x2","y2","conn","from","to","_c2","CommunicationPage","_s","initialNodes","description","nodes","setNodes","selectedHolonIds","setShowRegulationLine","showAddMessage","setShowAddMessage","setOriginNode","setConnections","value","handleSelectNode","includes","stopPropagation","lineWidth","lineColor","lineBorderRadius","lineStyle","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Alert = ({ message }) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Holon = ({\r\n    node,\r\n    onSelectNode,\r\n    isSelected,\r\n    setSelectedHolonIds,\r\n    hoveredHolonId,\r\n    setHoveredHolonId,\r\n    showAddSign,\r\n    setShowAddSign,\r\n    showRegulationLine,\r\n    toggleAddMessage,\r\n    handleAddClick,\r\n    originNode,\r\n    targetNode,\r\n    setTargetNode,\r\n    connections\r\n}) => {\r\n    const handleNodeClick = () => {\r\n        onSelectNode(node);\r\n        setShowAddSign(true);\r\n        toggleAddMessage(false);\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n        setHoveredHolonId(node.id);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoveredHolonId(null);\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n    const isHovered = hoveredHolonId === node.id && !selected;\r\n    const isTarget = targetNode && targetNode.id === node.id;\r\n\r\n    return (\r\n        <TreeNode\r\n            label={\r\n                <div\r\n                    className={`tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''} ${isTarget ? 'target' : ''}`}\r\n                    onClick={handleNodeClick}\r\n                    onMouseEnter={handleMouseEnter}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <div className=\"name\">{node.name}</div>\r\n                    {showAddSign && (\r\n                        <div className=\"buttons\">\r\n                            <Button variant=\"primary\" size=\"sm\" onClick={(e) => handleAddClick(e, node)}>\r\n                                <FontAwesomeIcon icon={faPlus} />\r\n                            </Button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        >\r\n            {node.children &&\r\n                node.children.map((child) => (\r\n                    <Holon\r\n                        key={child.id}\r\n                        node={child}\r\n                        onSelectNode={onSelectNode}\r\n                        isSelected={isSelected}\r\n                        setSelectedHolonIds={setSelectedHolonIds}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        showAddSign={showAddSign}\r\n                        setShowAddSign={setShowAddSign}\r\n                        showRegulationLine={showRegulationLine}\r\n                        toggleAddMessage={toggleAddMessage}\r\n                        handleAddClick={handleAddClick}\r\n                        originNode={originNode}\r\n                        targetNode={targetNode}\r\n                        setTargetNode={setTargetNode}\r\n                        connections={connections}\r\n                    />\r\n                ))}\r\n            {showRegulationLine && node.id === 'Information System' && (\r\n                <line x1=\"50%\" y1=\"50%\" x2=\"50%\" y2=\"100%\" className=\"regulation-channel\" />\r\n            )}\r\n            {connections.map(conn => conn.from.id === node.id || conn.to.id === node.id ? (\r\n                <line key={conn.from.id + conn.to.id} x1=\"50%\" y1=\"50%\" x2=\"50%\" y2=\"100%\" className=\"regulation-channel\" />\r\n            ) : null)}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n    const initialNodes = {\r\n        id: 'root',\r\n        name: 'Information System',\r\n        description: 'An organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\r\n        children: [\r\n            {\r\n                id: 'Stakeholder',\r\n                name: 'Stakeholder',\r\n                description: 'Refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes.',\r\n                children: [],\r\n            },\r\n            {\r\n                id: 'Infrastructure',\r\n                name: 'Infrastructure',\r\n                description: 'Refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system.',\r\n                children: [],\r\n            }\r\n        ],\r\n    };\r\n\r\n    const [nodes, setNodes] = useState(initialNodes);\r\n    const [selectedHolonIds, setSelectedHolonIds] = useState([]);\r\n    const [hoveredHolonId, setHoveredHolonId] = useState(null);\r\n    const [showAddSign, setShowAddSign] = useState(true);\r\n    const [showRegulationLine, setShowRegulationLine] = useState(false);\r\n    const [showAddMessage, setShowAddMessage] = useState(false);\r\n    const [originNode, setOriginNode] = useState(null);\r\n    const [targetNode, setTargetNode] = useState(null);\r\n    const [connections, setConnections] = useState([]);\r\n\r\n    const toggleAddMessage = (value) => {\r\n        setShowAddMessage(value);\r\n    };\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedHolonIds([node.id]);\r\n        setShowAddSign(true);\r\n    };\r\n\r\n    const isSelected = (node) => selectedHolonIds.includes(node.id);\r\n\r\n    const handleAddClick = (e, node) => {\r\n        e.stopPropagation();\r\n        if (!originNode) {\r\n            setOriginNode(node);\r\n            setShowAddSign(false);\r\n            toggleAddMessage(true);\r\n        } else {\r\n            setConnections([...connections, { from: originNode, to: node }]);\r\n            setOriginNode(null);\r\n            toggleAddMessage(false);\r\n            setShowAddSign(true);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"content-area\">\r\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                    <Holon\r\n                        node={nodes}\r\n                        onSelectNode={handleSelectNode}\r\n                        isSelected={isSelected}\r\n                        setSelectedHolonIds={setSelectedHolonIds}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        showAddSign={showAddSign}\r\n                        setShowAddSign={setShowAddSign}\r\n                        showRegulationLine={showRegulationLine}\r\n                        toggleAddMessage={toggleAddMessage}\r\n                        handleAddClick={handleAddClick}\r\n                        originNode={originNode}\r\n                        targetNode={targetNode}\r\n                        setTargetNode={setTargetNode}\r\n                        connections={connections}\r\n                    />\r\n                </Tree>\r\n            </div>\r\n            {showAddMessage && <Alert message=\"Click another holon to add an information flow.\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}