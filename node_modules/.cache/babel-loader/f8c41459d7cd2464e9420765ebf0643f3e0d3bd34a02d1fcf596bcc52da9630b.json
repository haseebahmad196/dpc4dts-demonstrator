{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, MarkerType } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNode, setDestinationNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Modified function to enable information flow\n  const startInformationFlow = useCallback(() => {\n    // Reset all node styles first\n    setNodes(nds => nds.map(n => ({\n      ...n,\n      style: {\n        ...n.style,\n        border: undefined\n      }\n    })));\n    setSourceNode(null);\n    setDestinationNode(null);\n    setEnableInformationFlow(true);\n  }, [setNodes]);\n  const handleNodeClick = useCallback((event, nodeData) => {\n    if (!enableInformationFlow) return;\n    const clickedNode = nodes.find(n => n.id === nodeData.id) || nodeData;\n    if (!sourceNode) {\n      // Set source node on first click\n      setSourceNode(clickedNode);\n      setNodes(nds => nds.map(n => ({\n        ...n,\n        style: {\n          ...n.style,\n          border: n.id === clickedNode.id ? \"2px solid blue\" : undefined\n        }\n      })));\n    } else if (sourceNode.id !== clickedNode.id && !destinationNode) {\n      // Set destination node on second click (if different from source)\n      setDestinationNode(clickedNode);\n      setNodes(nds => nds.map(n => ({\n        ...n,\n        style: {\n          ...n.style,\n          border: n.id === clickedNode.id ? \"2px solid green\" : n.id === sourceNode.id ? \"2px solid blue\" : undefined\n        }\n      })));\n    }\n  }, [enableInformationFlow, nodes, sourceNode, destinationNode, setNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      width: \"98vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-8\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: startInformationFlow,\n          children: \"Add Information Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        },\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"6TC0XeDDw0j3Y3kmJx1agfzigKo=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","MarkerType","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sourceNode","setSourceNode","destinationNode","setDestinationNode","selectedNode","setSelectedNode","enableInformationFlow","setEnableInformationFlow","onConnect","params","eds","startInformationFlow","nds","map","n","style","border","undefined","handleNodeClick","event","nodeData","clickedNode","find","id","className","display","height","width","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fitView","onNodeClick","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNode, setDestinationNode] = useState(null);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Modified function to enable information flow\r\n  const startInformationFlow = useCallback(() => {\r\n    // Reset all node styles first\r\n    setNodes((nds) =>\r\n      nds.map((n) => ({\r\n        ...n,\r\n        style: { ...n.style, border: undefined }\r\n      }))\r\n    );\r\n    setSourceNode(null);\r\n    setDestinationNode(null);\r\n    setEnableInformationFlow(true);\r\n  }, [setNodes]);\r\n\r\n  const handleNodeClick = useCallback(\r\n    (event, nodeData) => {\r\n      if (!enableInformationFlow) return;\r\n\r\n      const clickedNode = nodes.find((n) => n.id === nodeData.id) || nodeData;\r\n\r\n      if (!sourceNode) {\r\n        // Set source node on first click\r\n        setSourceNode(clickedNode);\r\n        setNodes((nds) =>\r\n          nds.map((n) => ({\r\n            ...n,\r\n            style: {\r\n              ...n.style,\r\n              border: n.id === clickedNode.id ? \"2px solid blue\" : undefined\r\n            }\r\n          }))\r\n        );\r\n      } else if (sourceNode.id !== clickedNode.id && !destinationNode) {\r\n        // Set destination node on second click (if different from source)\r\n        setDestinationNode(clickedNode);\r\n        setNodes((nds) =>\r\n          nds.map((n) => ({\r\n            ...n,\r\n            style: {\r\n              ...n.style,\r\n              border: n.id === clickedNode.id \r\n                ? \"2px solid green\" \r\n                : n.id === sourceNode.id \r\n                ? \"2px solid blue\" \r\n                : undefined\r\n            }\r\n          }))\r\n        );\r\n      }\r\n    },\r\n    [enableInformationFlow, nodes, sourceNode, destinationNode, setNodes]\r\n  );\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{ display: \"flex\", height: \"100vh\", width: \"98vw\" }}>\r\n      <div className=\"col-8\" style={{ height: \"100%\" }}>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <button className={\"btn btn-success\"} onClick={startInformationFlow}>\r\n            Add Information Flow\r\n          </button>\r\n        </div>\r\n\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          style={{ width: \"100%\", height: \"90%\" }}\r\n          onNodeClick={handleNodeClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,IACdC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,UAAU,QACL,WAAW;AAClB,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAC7C,OAAO,cAAc;AACrB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAEJ;AACd,CAAC;AAED,MAAMK,cAAc,GAAG;EAAEC,OAAO,EAAE;AAAI,CAAC;AAEvCP,KAAK,CAACQ,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGjB,aAAa,CAACa,KAAK,CAACE,KAAK,CAAC;EACnE,MAAM,CAACG,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGnB,aAAa,CAACY,KAAK,CAACK,KAAK,CAAC;EACnE,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC4B,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC8B,qBAAqB,EAAEC,wBAAwB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAEzE,MAAMgC,SAAS,GAAGjC,WAAW,CAC1BkC,MAAM,IAAKX,QAAQ,CAAEY,GAAG,IAAKhC,OAAO,CAAC+B,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAACZ,QAAQ,CACX,CAAC;;EAED;EACA,MAAMa,oBAAoB,GAAGpC,WAAW,CAAC,MAAM;IAC7C;IACAoB,QAAQ,CAAEiB,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,KAAM;MACd,GAAGA,CAAC;MACJC,KAAK,EAAE;QAAE,GAAGD,CAAC,CAACC,KAAK;QAAEC,MAAM,EAAEC;MAAU;IACzC,CAAC,CAAC,CACJ,CAAC;IACDhB,aAAa,CAAC,IAAI,CAAC;IACnBE,kBAAkB,CAAC,IAAI,CAAC;IACxBI,wBAAwB,CAAC,IAAI,CAAC;EAChC,CAAC,EAAE,CAACZ,QAAQ,CAAC,CAAC;EAEd,MAAMuB,eAAe,GAAG3C,WAAW,CACjC,CAAC4C,KAAK,EAAEC,QAAQ,KAAK;IACnB,IAAI,CAACd,qBAAqB,EAAE;IAE5B,MAAMe,WAAW,GAAG3B,KAAK,CAAC4B,IAAI,CAAER,CAAC,IAAKA,CAAC,CAACS,EAAE,KAAKH,QAAQ,CAACG,EAAE,CAAC,IAAIH,QAAQ;IAEvE,IAAI,CAACpB,UAAU,EAAE;MACf;MACAC,aAAa,CAACoB,WAAW,CAAC;MAC1B1B,QAAQ,CAAEiB,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,KAAM;QACd,GAAGA,CAAC;QACJC,KAAK,EAAE;UACL,GAAGD,CAAC,CAACC,KAAK;UACVC,MAAM,EAAEF,CAAC,CAACS,EAAE,KAAKF,WAAW,CAACE,EAAE,GAAG,gBAAgB,GAAGN;QACvD;MACF,CAAC,CAAC,CACJ,CAAC;IACH,CAAC,MAAM,IAAIjB,UAAU,CAACuB,EAAE,KAAKF,WAAW,CAACE,EAAE,IAAI,CAACrB,eAAe,EAAE;MAC/D;MACAC,kBAAkB,CAACkB,WAAW,CAAC;MAC/B1B,QAAQ,CAAEiB,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,KAAM;QACd,GAAGA,CAAC;QACJC,KAAK,EAAE;UACL,GAAGD,CAAC,CAACC,KAAK;UACVC,MAAM,EAAEF,CAAC,CAACS,EAAE,KAAKF,WAAW,CAACE,EAAE,GAC3B,iBAAiB,GACjBT,CAAC,CAACS,EAAE,KAAKvB,UAAU,CAACuB,EAAE,GACtB,gBAAgB,GAChBN;QACN;MACF,CAAC,CAAC,CACJ,CAAC;IACH;EACF,CAAC,EACD,CAACX,qBAAqB,EAAEZ,KAAK,EAAEM,UAAU,EAAEE,eAAe,EAAEP,QAAQ,CACtE,CAAC;EAED,oBACEV,OAAA;IAAKuC,SAAS,EAAC,iBAAiB;IAACT,KAAK,EAAE;MAAEU,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,eAC1F3C,OAAA;MAAKuC,SAAS,EAAC,OAAO;MAACT,KAAK,EAAE;QAAEW,MAAM,EAAE;MAAO,CAAE;MAAAE,QAAA,gBAC/C3C,OAAA;QAAKuC,SAAS,EAAC,wDAAwD;QAAAI,QAAA,eACrE3C,OAAA;UAAQuC,SAAS,EAAE,iBAAkB;UAACK,OAAO,EAAElB,oBAAqB;UAAAiB,QAAA,EAAC;QAErE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENhD,OAAA,CAACR,SAAS;QACRS,SAAS,EAAEA,SAAU;QACrBQ,KAAK,EAAEA,KAAM;QACbG,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,aAAc;QAC7BG,aAAa,EAAEA,aAAc;QAC7BS,SAAS,EAAEA,SAAU;QACrB0B,OAAO;QACP9C,cAAc,EAAEA,cAAe;QAC/B2B,KAAK,EAAE;UAAEY,KAAK,EAAE,MAAM;UAAED,MAAM,EAAE;QAAM,CAAE;QACxCS,WAAW,EAAEjB;MAAgB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxC,EAAA,CA1FQF,sBAAsB;EAAA,QACYZ,aAAa,EACbC,aAAa;AAAA;AAAAwD,EAAA,GAF/C7C,sBAAsB;AA4F/B,eAAeA,sBAAsB;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}