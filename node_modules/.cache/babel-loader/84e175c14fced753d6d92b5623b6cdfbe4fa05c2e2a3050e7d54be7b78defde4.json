{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport CommunicationPage from './CommunicationPage';\nimport StructurePage from './StructurePage'; // Import the StructurePage component\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const [activeStep, setActiveStep] = useState(1);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedHolon(parentNode);\n    setNodeType('child'); // Set node type to child when adding a child node\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    setSelectedHolon({\n      id: 'root',\n      name: '',\n      children: [nodes]\n    });\n    setNodeType('parent'); // Set node type to parent when adding a root node\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 1 ? 'active' : ''}`,\n        onClick: () => setActiveStep(1),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle ${activeStep === 1 ? 'active' : ''}`,\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 2 ? 'active' : ''}`,\n        onClick: () => setActiveStep(2),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle ${activeStep === 2 ? 'active' : ''}`,\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [activeStep === 1 ? /*#__PURE__*/_jsxDEV(StructurePage, {\n        nodes: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: selectedHolon,\n        addNewRoot: addNewRoot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(CommunicationPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Node Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"nodeType\",\n          value: nodeType,\n          onChange: value => handleNodeTypeSelection(value),\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"child\",\n            variant: \"outline-primary\",\n            children: \"Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"parent\",\n            variant: \"outline-primary\",\n            children: \"Parent Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), nodeType && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name for the Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Node name\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value),\n            className: \"placeholder-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          className: \"close-button\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          disabled: !nodeType,\n          className: \"save-button\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"oiRuAwLCmJjUpvDGOmF2rUgRzCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","CommunicationPage","StructurePage","Modal","Button","Form","ToggleButton","ToggleButtonGroup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","initialNodes","id","name","description","children","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","nodeType","setNodeType","nodeName","setNodeName","activeStep","setActiveStep","handleModalClose","handleModalShow","onAddChild","parentNode","onRemoveNode","nodeId","removeNode","nodeIdToRemove","filter","child","forEach","newNodes","addNewRoot","handleNodeTypeSelection","type","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSelectNode","isSelected","show","onHide","Header","closeButton","Title","Body","value","onChange","variant","Group","controlId","Label","Control","placeholder","e","target","Footer","disabled","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport CommunicationPage from './CommunicationPage';\nimport StructurePage from './StructurePage'; // Import the StructurePage component\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\n\n\nimport './styles.css';\n\nconst App = () => {\n    const initialNodes = {\n        id: 'root',\n        name: 'Information System',\n        description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n        children: [\n            {\n                id: 'Stakeholder',\n                name: 'Stakeholder',\n                description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n                children: [],\n            },\n            {\n                id: 'Infrastructure',\n                name: 'Infrastructure',\n                description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n                children: [],\n            }\n        ],\n    };\n\n    const [nodes, setNodes] = useState(initialNodes);\n    const [selectedHolon, setSelectedHolon] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [nodeType, setNodeType] = useState('');\n    const [nodeName, setNodeName] = useState('');\n    const [activeStep, setActiveStep] = useState(1);\n\n    const handleModalClose = () => {\n        setShowModal(false);\n        setNodeName('');\n    };\n\n    const handleModalShow = () => {\n        setShowModal(true);\n    };\n\n    const onAddChild = (parentNode) => {\n        setSelectedHolon(parentNode);\n        setNodeType('child'); // Set node type to child when adding a child node\n        handleModalShow();\n    };\n\n    const onRemoveNode = (nodeId) => {\n        const removeNode = (nodes, nodeIdToRemove) => {\n            if (nodes.id === nodeIdToRemove) {\n                return null;\n            }\n            nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n            nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n            return nodes;\n        };\n\n        const newNodes = removeNode({ ...nodes }, nodeId);\n        setNodes(newNodes);\n        setSelectedHolon(null);\n    };\n\n    const addNewRoot = () => {\n        setSelectedHolon({ id: 'root', name: '', children: [nodes] });\n        setNodeType('parent'); // Set node type to parent when adding a root node\n        handleModalShow();\n    };\n\n    const handleNodeTypeSelection = (type) => {\n        setNodeType(type);\n    };\n\n    const handleSubmit = () => {\n        const newNode = {\n            id: `${selectedHolon.id}-${Math.random()}`,\n            name: nodeName,\n            children: []\n        };\n        if (nodeType === 'child') {\n            const addNode = (nodes, parentId) => {\n                if (nodes.id === parentId) {\n                    nodes.children.push(newNode);\n                    return;\n                }\n                nodes.children.forEach(child => addNode(child, parentId));\n            };\n\n            const newNodes = { ...nodes };\n            addNode(newNodes, selectedHolon.id);\n            setNodes(newNodes);\n        } else if (nodeType === 'parent') {\n            const newParent = {\n                id: `root-${Math.random()}`,\n                name: nodeName,\n                children: [selectedHolon]\n            };\n            setNodes(newParent);\n        }\n        handleModalClose();\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"steps-bar\">\n                <div className={`step ${activeStep === 1 ? 'active' : ''}`} onClick={() => setActiveStep(1)}>\n                    <div className={`step-circle ${activeStep === 1 ? 'active' : ''}`}>1</div>\n                    <div className=\"step-label\">Structure</div>\n                </div>\n                <div className={`step ${activeStep === 2 ? 'active' : ''}`} onClick={() => setActiveStep(2)}>\n                    <div className={`step-circle ${activeStep === 2 ? 'active' : ''}`}>2</div>\n                    <div className=\"step-label\">Communication</div>\n                </div>\n            </div>\n            <div className=\"content-area\">\n                {activeStep === 1 ? (\n                    <StructurePage\n                        nodes={nodes}\n                        onAddChild={onAddChild}\n                        onRemoveNode={onRemoveNode}\n                        onSelectNode={setSelectedHolon}\n                        isSelected={selectedHolon}\n                        addNewRoot={addNewRoot}\n                    />\n                ) : (\n                    <CommunicationPage />\n                )}\n                <div className=\"holon-details\">\n                    <h2>Holon Details</h2>\n                    {selectedHolon ? (\n                        <>\n                            <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n                            <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n                        </>\n                    ) : (\n                        <p className='no-selection'>No Selection</p>\n                    )}\n                </div>\n            </div>\n            <Modal show={showModal} onHide={handleModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Node Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ToggleButtonGroup\n                        type=\"radio\"\n                        name=\"nodeType\"\n                        value={nodeType}\n                        onChange={(value) => handleNodeTypeSelection(value)}\n                        className=\"mb-3\"\n                    >\n                        <ToggleButton value=\"child\" variant=\"outline-primary\">Child Node</ToggleButton>\n                        <ToggleButton value=\"parent\" variant=\"outline-primary\">Parent Node</ToggleButton>\n                    </ToggleButtonGroup>\n                    {nodeType && (\n                        <Form.Group controlId=\"formNodeName\">\n                            <Form.Label>Enter the name for the Node</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} className=\"placeholder-button\" />\n                        </Form.Group>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleModalClose}className=\"close-button\">\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit} disabled={!nodeType} className=\"save-button\">\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}