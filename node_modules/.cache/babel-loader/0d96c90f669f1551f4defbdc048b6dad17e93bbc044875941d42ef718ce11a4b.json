{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1); // Track steps in the modal\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1); // Reset the modal step to the initial step\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    setSelectedHolon({\n      id: 'root',\n      name: '',\n      children: [nodes]\n    });\n    setNodeType('parent');\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: node => setSelectedHolon(node),\n          isSelected: node => selectedHolon && node.id === selectedHolon.id,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Press \\\"1\\\" for Child Node, \\\"2\\\" for Parent Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Enter the name for the \", nodeType === '1' ? 'child' : 'parent', \" node:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleNodeTypeSelection('child'),\n            children: \"Press 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleNodeTypeSelection('parent'),\n            children: \"Press 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P2tezXhB04G3zLATswtfokaGkow=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","addNewRoot","handleNodeTypeSelection","type","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","console","log","lineWidth","lineColor","lineBorderRadius","description","show","onHide","Header","closeButton","Title","Body","style","textAlign","Group","controlId","Label","Control","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon\n          key={child.id}\n          node={child}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);  // Track steps in the modal\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1);  // Reset the modal step to the initial step\n    setNodeName('');\n  };\n\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n\n  const onAddChild = (parentNode) => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const addNewRoot = () => {\n    setSelectedHolon({ id: 'root', name: '', children: [nodes] });\n    setNodeType('parent');\n    handleModalShow();\n  };\n\n  const handleNodeTypeSelection = (type) => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={(node) => setSelectedHolon(node)}\n            isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\n            addNewRoot={addNewRoot}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n      <Modal show={showModal} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalStep === 1 ? (\n            <p style={{ textAlign: 'center' }}>\n              Press \"1\" for Child Node, \"2\" for Parent Node\n            </p>\n          ) : (\n            <Form>\n              <Form.Group controlId=\"formNodeName\">\n                <Form.Label>Enter the name for the {nodeType === '1' ? 'child' : 'parent'} node:</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n              </Form.Group>\n            </Form>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          {modalStep === 1 ? (\n            <>\n              <Button variant=\"secondary\" onClick={() => handleNodeTypeSelection('child')}>Press 1</Button>\n              <Button variant=\"primary\" onClick={() => handleNodeTypeSelection('parent')}>Press 2</Button>\n            </>\n          ) : (\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Save Changes\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}