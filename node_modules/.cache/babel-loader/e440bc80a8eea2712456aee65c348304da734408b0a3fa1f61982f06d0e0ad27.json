{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TreeNode = ({\n  value,\n  children,\n  onAddNode,\n  onRemoveNode\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const handleToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddNode,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRemoveNode,\n        children: \"Remove Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), children && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleExpand,\n        children: isExpanded ? '-' : '+'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginLeft: '20px'\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(TreeNode, \"FPNvbbHVlWWR4LKxxNntSxiIS38=\");\n_c = TreeNode;\nconst Tree = () => {\n  _s2();\n  const [tree, setTree] = useState([{\n    value: 'Root',\n    children: []\n  }]);\n  const addChildNode = parentIndex => {\n    const newTree = [...tree];\n    newTree[parentIndex].children.push({\n      value: `Child ${newTree[parentIndex].children.length + 1}`,\n      children: []\n    });\n    setTree(newTree);\n  };\n  const removeChildNode = (parentIndex, childIndex) => {\n    const newTree = [...tree];\n    newTree[parentIndex].children.splice(childIndex, 1);\n    setTree(newTree);\n  };\n  const renderTreeNodes = (nodes, parentIndex) => {\n    return nodes.map((node, index) => /*#__PURE__*/_jsxDEV(TreeNode, {\n      value: node.value,\n      onAddNode: () => addChildNode(parentIndex),\n      onRemoveNode: () => removeChildNode(parentIndex, index),\n      children: node.children.length > 0 && renderTreeNodes(node.children, parentIndex + '-' + index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderTreeNodes(tree, '0')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(Tree, \"uABbJD2Dl78451F9A18Gs6hSPe8=\");\n_c2 = Tree;\nexport default Tree;\nvar _c, _c2;\n$RefreshReg$(_c, \"TreeNode\");\n$RefreshReg$(_c2, \"Tree\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TreeNode","value","children","onAddNode","onRemoveNode","_s","isExpanded","setIsExpanded","handleToggleExpand","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","marginLeft","_c","Tree","_s2","tree","setTree","addChildNode","parentIndex","newTree","push","length","removeChildNode","childIndex","splice","renderTreeNodes","nodes","map","node","index","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TreeNode = ({ value, children, onAddNode, onRemoveNode }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggleExpand = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <div>\n      <div>\n        <span>{value}</span>\n        <button onClick={onAddNode}>Add Node</button>\n        <button onClick={onRemoveNode}>Remove Node</button>\n        {children && (\n          <button onClick={handleToggleExpand}>\n            {isExpanded ? '-' : '+'}\n          </button>\n        )}\n      </div>\n      {isExpanded && <div style={{ marginLeft: '20px' }}>{children}</div>}\n    </div>\n  );\n};\n\nconst Tree = () => {\n  const [tree, setTree] = useState([\n    {\n      value: 'Root',\n      children: [],\n    },\n  ]);\n\n  const addChildNode = (parentIndex) => {\n    const newTree = [...tree];\n    newTree[parentIndex].children.push({\n      value: `Child ${newTree[parentIndex].children.length + 1}`,\n      children: [],\n    });\n    setTree(newTree);\n  };\n\n  const removeChildNode = (parentIndex, childIndex) => {\n    const newTree = [...tree];\n    newTree[parentIndex].children.splice(childIndex, 1);\n    setTree(newTree);\n  };\n\n  const renderTreeNodes = (nodes, parentIndex) => {\n    return nodes.map((node, index) => (\n      <TreeNode\n        key={index}\n        value={node.value}\n        onAddNode={() => addChildNode(parentIndex)}\n        onRemoveNode={() => removeChildNode(parentIndex, index)}\n      >\n        {node.children.length > 0 &&\n          renderTreeNodes(node.children, parentIndex + '-' + index)}\n      </TreeNode>\n    ));\n  };\n\n  return (\n    <div>\n      {renderTreeNodes(tree, '0')}\n    </div>\n  );\n};\n\nexport default Tree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}