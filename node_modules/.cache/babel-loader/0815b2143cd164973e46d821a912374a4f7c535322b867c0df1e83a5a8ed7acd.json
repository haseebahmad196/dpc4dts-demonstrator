{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelect,\n  onAdd,\n  onRemove,\n  level = 0\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      onClick: () => onSelect(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAdd(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemove(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n        node: child,\n        onSelect: onSelect,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [{\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n      children: []\n    }]\n  }]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3);\n  const selectHolon = node => {\n    setSelectedHolon(node);\n  };\n  const addChild = (node, isSibling) => {\n    const childName = prompt('Enter the name of the new node:');\n    if (!childName) return;\n    const newId = `node-${idCounter}`;\n    const newNode = {\n      id: newId,\n      name: childName,\n      description: '',\n      children: []\n    };\n    setIdCounter(idCounter + 1);\n    if (isSibling) {\n      // Find parent of the current node and add the new node as a sibling\n      const addSibling = (nodes, parentId, newNode) => {\n        return nodes.map(node => {\n          if (node.id === parentId) {\n            return {\n              ...node,\n              children: [...node.children, newNode]\n            };\n          } else if (node.children) {\n            return {\n              ...node,\n              children: addSibling(node.children, parentId, newNode)\n            };\n          }\n          return node;\n        });\n      };\n      setNodes(prevNodes => addSibling(prevNodes, node.id, newNode));\n    } else {\n      // Add the new node as a child\n      const addChildRecursively = (nodes, nodeId, newNode) => {\n        return nodes.map(node => {\n          if (node.id === nodeId) {\n            return {\n              ...node,\n              children: [...node.children, newNode]\n            };\n          } else if (node.children) {\n            return {\n              ...node,\n              children: addChildRecursively(node.children, nodeId, newNode)\n            };\n          }\n          return node;\n        });\n      };\n      setNodes(prevNodes => addChildRecursively(prevNodes, node.id, newNode));\n    }\n  };\n  const removeChild = nodeId => {\n    const removeNodeRecursively = (nodes, nodeId) => {\n      return nodes.reduce((acc, node) => {\n        if (node.id !== nodeId) {\n          if (node.children) {\n            const filteredChildren = removeNodeRecursively(node.children, nodeId);\n            acc.push({\n              ...node,\n              children: filteredChildren\n            });\n          } else {\n            acc.push(node);\n          }\n        }\n        return acc;\n      }, []);\n    };\n    setNodes(prevNodes => removeNodeRecursively(prevNodes, nodeId));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holons-container\",\n      children: nodes.map(node => /*#__PURE__*/_jsxDEV(Holon, {\n        node: node,\n        onSelect: selectHolon,\n        onAdd: addChild,\n        onRemove: removeChild\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description || 'No description provided.']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"0JEOAO3TeYO56bRqEsQnzPPcnLY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onSelect","onAdd","onRemove","level","className","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","length","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","idCounter","setIdCounter","selectHolon","addChild","isSibling","childName","prompt","newId","newNode","addSibling","parentId","prevNodes","addChildRecursively","nodeId","removeChild","removeNodeRecursively","reduce","acc","filteredChildren","push","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst Holon = ({ node, onSelect, onAdd, onRemove, level = 0 }) => {\n  return (\n    <div className=\"holon\">\n      <div className=\"holon-details\" onClick={() => onSelect(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAdd(node); }}>+</button>\n          <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemove(node.id); }}>x</button>\n        </div>\n      </div>\n      {node.children && node.children.length > 0 && (\n        <div className=\"children\">\n          {node.children.map(child => (\n            <Holon key={child.id} node={child} onSelect={onSelect} onAdd={onAdd} onRemove={onRemove} level={level + 1} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n\nconst App = () => {\n  const [nodes, setNodes] = useState([{\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [\n      {\n        id: 'stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n        children: [],\n      }\n    ],\n  }]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3);\n\n  const selectHolon = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const addChild = (node, isSibling) => {\n    const childName = prompt('Enter the name of the new node:');\n    if (!childName) return;\n    const newId = `node-${idCounter}`;\n    const newNode = {\n      id: newId,\n      name: childName,\n      description: '',\n      children: [],\n    };\n\n    setIdCounter(idCounter + 1);\n\n    if (isSibling) {\n      // Find parent of the current node and add the new node as a sibling\n      const addSibling = (nodes, parentId, newNode) => {\n        return nodes.map((node) => {\n          if (node.id === parentId) {\n            return { ...node, children: [...node.children, newNode] };\n          } else if (node.children) {\n            return { ...node, children: addSibling(node.children, parentId, newNode) };\n          }\n          return node;\n        });\n      };\n      setNodes(prevNodes => addSibling(prevNodes, node.id, newNode));\n    } else {\n      // Add the new node as a child\n      const addChildRecursively = (nodes, nodeId, newNode) => {\n        return nodes.map((node) => {\n          if (node.id === nodeId) {\n            return { ...node, children: [...node.children, newNode] };\n          } else if (node.children) {\n            return { ...node, children: addChildRecursively(node.children, nodeId, newNode) };\n          }\n          return node;\n        });\n      };\n      setNodes(prevNodes => addChildRecursively(prevNodes, node.id, newNode));\n    }\n  };\n\n  const removeChild = (nodeId) => {\n    const removeNodeRecursively = (nodes, nodeId) => {\n      return nodes.reduce((acc, node) => {\n        if (node.id !== nodeId) {\n          if (node.children) {\n            const filteredChildren = removeNodeRecursively(node.children, nodeId);\n            acc.push({ ...node, children: filteredChildren });\n          } else {\n            acc.push(node);\n          }\n        }\n        return acc;\n      }, []);\n    };\n    setNodes(prevNodes => removeNodeRecursively(prevNodes, nodeId));\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"holons-container\">\n        {nodes.map(node => (\n          <Holon key={node.id} node={node} onSelect={selectHolon} onAdd={addChild} onRemove={removeChild} />\n        ))}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description || 'No description provided.'}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}