{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\StructurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  _s();\n  const [isChildSelected, setIsChildSelected] = useState(false);\n  const [isParentSelected, setIsParentSelected] = useState(false);\n  const [newNodeName, setNewNodeName] = useState('');\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const handleAddNode = () => {\n    const modal = document.getElementById('myModal');\n    modal.style.display = 'block';\n  };\n  const handleConfirmAdd = () => {\n    const modal = document.getElementById('myModal');\n    modal.style.display = 'none';\n    if (isChildSelected) {\n      onAddChild(node, true, newNodeName);\n    } else if (isParentSelected) {\n      addNewRoot(newNodeName);\n    }\n    setNewNodeName('');\n    setIsChildSelected(false);\n    setIsParentSelected(false);\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddNode,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: () => {\n            document.getElementById('myModal').style.display = 'none';\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: isChildSelected,\n            onChange: () => {\n              setIsChildSelected(true);\n              setIsParentSelected(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), \"Child\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: isParentSelected,\n            onChange: () => {\n              setIsParentSelected(true);\n              setIsChildSelected(false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), \"Parent\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newNodeName,\n          onChange: e => setNewNodeName(e.target.value),\n          placeholder: \"Enter node name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirmAdd,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Holon, \"LxsrqhAnPDPFa1s98mhoncZ0GMo=\");\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  return /*#__PURE__*/_jsxDEV(Tree, {\n    lineWidth: \"2px\",\n    lineColor: \"blue\",\n    lineBorderRadius: \"5px\",\n    lineStyle: \"dashed\",\n    children: /*#__PURE__*/_jsxDEV(Holon, {\n      node: nodes,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: node => onSelectNode(node),\n      isSelected: node => isSelected && node.id === isSelected.id,\n      addNewRoot: addNewRoot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n_c2 = StructurePage;\nexport default StructurePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","_s","isChildSelected","setIsChildSelected","isParentSelected","setIsParentSelected","newNodeName","setNewNodeName","handleActionClick","e","action","stopPropagation","handleAddNode","modal","document","getElementById","style","display","handleConfirmAdd","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","id","map","child","type","checked","onChange","value","target","placeholder","_c","StructurePage","nodes","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/StructurePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\r\n    const [isChildSelected, setIsChildSelected] = useState(false);\r\n    const [isParentSelected, setIsParentSelected] = useState(false);\r\n    const [newNodeName, setNewNodeName] = useState('');\r\n\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const handleAddNode = () => {\r\n        const modal = document.getElementById('myModal');\r\n        modal.style.display = 'block';\r\n    };\r\n\r\n    const handleConfirmAdd = () => {\r\n        const modal = document.getElementById('myModal');\r\n        modal.style.display = 'none';\r\n        \r\n        if (isChildSelected) {\r\n            onAddChild(node, true, newNodeName);\r\n        } else if (isParentSelected) {\r\n            addNewRoot(newNodeName);\r\n        }\r\n        setNewNodeName('');\r\n        setIsChildSelected(false);\r\n        setIsParentSelected(false);\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <button className=\"add-button\" onClick={handleAddNode}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                    <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                    addNewRoot={addNewRoot}\r\n                />\r\n            ))}\r\n            <div id=\"myModal\" className=\"modal\">\r\n                <div className=\"modal-content\">\r\n                    <span className=\"close\" onClick={() => {document.getElementById('myModal').style.display = 'none';}}>&times;</span>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={isChildSelected}\r\n                            onChange={() => {\r\n                                setIsChildSelected(true);\r\n                                setIsParentSelected(false);\r\n                            }}\r\n                        />\r\n                        Child\r\n                    </label>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            checked={isParentSelected}\r\n                            onChange={() => {\r\n                                setIsParentSelected(true);\r\n                                setIsChildSelected(false);\r\n                            }}\r\n                        />\r\n                        Parent\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newNodeName}\r\n                        onChange={(e) => setNewNodeName(e.target.value)}\r\n                        placeholder=\"Enter node name\"\r\n                    />\r\n                    <button onClick={handleConfirmAdd}>Add</button>\r\n                </div>\r\n            </div>\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\r\n    return (\r\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}  lineStyle={\"dashed\"}>\r\n            <Holon\r\n                node={nodes}\r\n                onAddChild={onAddChild}\r\n                onRemoveNode={onRemoveNode}\r\n                onSelectNode={(node) => onSelectNode(node)}\r\n                isSelected={(node) => isSelected && node.id === isSelected.id}\r\n                addNewRoot={addNewRoot}\r\n            />\r\n        </Tree>\r\n    );\r\n};\r\n\r\nexport default StructurePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}