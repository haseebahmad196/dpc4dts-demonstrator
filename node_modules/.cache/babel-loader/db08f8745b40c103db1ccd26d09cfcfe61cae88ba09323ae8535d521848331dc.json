{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  activeStep,\n  onHover,\n  onHoverLeave\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const handleMouseEnter = () => {\n    if (activeStep === 2) onHover(node.id);\n  };\n  const handleMouseLeave = () => {\n    if (activeStep === 2) onHoverLeave();\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCirclePlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), activeStep === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this),\n    lineColor: node.isHovered ? 'green' : 'blue',\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      activeStep: activeStep,\n      onHover: onHover,\n      onHoverLeave: onHoverLeave\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const [activeStep, setActiveStep] = useState(1);\n  const [hoveredHolonId, setHoveredHolonId] = useState(null);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const handleStepClick = stepNumber => {\n    setActiveStep(stepNumber);\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const newNodes = addNode({\n        ...nodes\n      }, selectedHolon.id, newNode);\n      setNodes(newNodes);\n    }\n    handleModalClose();\n  };\n  const handleHover = holonId => {\n    setHoveredHolonId(holonId);\n  };\n  const handleHoverLeave = () => {\n    setHoveredHolonId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 1 ? 'active' : ''}`,\n        onClick: () => handleStepClick(1),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 2 ? 'active' : ''}`,\n        onClick: () => handleStepClick(2),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: node => setSelectedHolon(node),\n          isSelected: node => selectedHolon && node.id === selectedHolon.id,\n          activeStep: activeStep,\n          onHover: handleHover,\n          onHoverLeave: handleHoverLeave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this), activeStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Information Flows\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: nodes.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Select a button below to add the node you need\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter the name for the Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleNodeTypeSelection('child'),\n            children: \"Child-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleNodeTypeSelection('parent'),\n            children: \"Parent-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"1NZiJpfbz7Q1aCAVnOLEIesUoX0=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","FontAwesomeIcon","faCirclePlus","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","activeStep","onHover","onHoverLeave","handleActionClick","e","action","stopPropagation","selected","handleMouseEnter","id","handleMouseLeave","label","className","onClick","onMouseEnter","onMouseLeave","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","name","lineColor","isHovered","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","setActiveStep","hoveredHolonId","setHoveredHolonId","handleModalClose","handleModalShow","parentNode","nodeId","newNodes","removeNode","handleStepClick","stepNumber","handleNodeTypeSelection","type","handleSubmit","newNode","Math","random","addNode","handleHover","holonId","handleHoverLeave","lineWidth","lineBorderRadius","show","onHide","Header","closeButton","Title","Body","style","textAlign","Group","controlId","Label","Control","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, activeStep, onHover, onHoverLeave }) => {\n    const handleActionClick = (e, action) => {\n        e.stopPropagation();\n        action();\n    };\n\n    const selected = isSelected(node);\n    const handleMouseEnter = () => {\n        if (activeStep === 2) onHover(node.id);\n    };\n    const handleMouseLeave = () => {\n        if (activeStep === 2) onHoverLeave();\n    };\n\n    return (\n        <TreeNode label={\n            <div className={`tree-label ${selected ? 'selected' : ''}`}\n                 onClick={() => onSelectNode(node)}\n                 onMouseEnter={handleMouseEnter}\n                 onMouseLeave={handleMouseLeave}>\n                <div className=\"icons-container\">\n                    <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\n                        <FontAwesomeIcon icon={faCirclePlus} />\n                    </button>\n                    {activeStep === 1 && (\n                        <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\n                            <FontAwesomeIcon icon={faTrash} />\n                        </button>\n                    )}\n                </div>\n                <div className=\"name\">{node.name}</div>\n            </div>\n        } lineColor={node.isHovered ? 'green' : 'blue'}>\n            {node.children && node.children.map(child => (\n                <Holon\n                    key={child.id}\n                    node={child}\n                    onAddChild={onAddChild}\n                    onRemoveNode={onRemoveNode}\n                    onSelectNode={onSelectNode}\n                    isSelected={isSelected}\n                    activeStep={activeStep}\n                    onHover={onHover}\n                    onHoverLeave={onHoverLeave}\n                />\n            ))}\n        </TreeNode>\n    );\n};\n\nconst App = () => {\n    const [nodes, setNodes] = useState({\n        id: 'root',\n        name: 'Information System',\n        description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n        children: [\n            {\n                id: 'Stakeholder',\n                name: 'Stakeholder',\n                description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n                children: [],\n            },\n            {\n                id: 'Infrastructure',\n                name: 'Infrastructure',\n                description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n                children: [],\n            }\n        ],\n    });\n    const [selectedHolon, setSelectedHolon] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [modalStep, setModalStep] = useState(1);\n    const [nodeType, setNodeType] = useState('');\n    const [nodeName, setNodeName] = useState('');\n    const [activeStep, setActiveStep] = useState(1);\n    const [hoveredHolonId, setHoveredHolonId] = useState(null);\n\n    const handleModalClose = () => {\n        setShowModal(false);\n        setModalStep(1);\n        setNodeName('');\n    };\n\n    const handleModalShow = () => {\n        setShowModal(true);\n    };\n\n    const onAddChild = (parentNode) => {\n        setSelectedHolon(parentNode);\n        handleModalShow();\n    };\n\n    const onRemoveNode = (nodeId) => {\n        const newNodes = removeNode({ ...nodes }, nodeId);\n        setNodes(newNodes);\n        setSelectedHolon(null);\n    };\n\n    const handleStepClick = (stepNumber) => {\n        setActiveStep(stepNumber);\n    };\n\n    const handleNodeTypeSelection = (type) => {\n        setNodeType(type);\n        setModalStep(2);\n    };\n\n    const handleSubmit = () => {\n        const newNode = {\n            id: `${selectedHolon.id}-${Math.random()}`,\n            name: nodeName,\n            children: []\n        };\n        if (nodeType === 'child') {\n            const newNodes = addNode({ ...nodes }, selectedHolon.id, newNode);\n            setNodes(newNodes);\n        }\n        handleModalClose();\n    };\n\n    const handleHover = (holonId) => {\n        setHoveredHolonId(holonId);\n    };\n\n    const handleHoverLeave = () => {\n        setHoveredHolonId(null);\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"steps-bar\">\n                <div className={`step ${activeStep === 1 ? 'active' : ''}`} onClick={() => handleStepClick(1)}>\n                    <div className=\"step-circle\">1</div>\n                    <div className=\"step-label\">Structure</div>\n                </div>\n                <div className={`step ${activeStep === 2 ? 'active' : ''}`} onClick={() => handleStepClick(2)}>\n                    <div className=\"step-circle\">2</div>\n                    <div className=\"step-label\">Communication</div>\n                </div>\n            </div>\n            <div className=\"content-area\">\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n                    <Holon\n                        node={nodes}\n                        onAddChild={onAddChild}\n                        onRemoveNode={onRemoveNode}\n                        onSelectNode={(node) => setSelectedHolon(node)}\n                        isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\n                        activeStep={activeStep}\n                        onHover={handleHover}\n                        onHoverLeave={handleHoverLeave}\n                    />\n                </Tree>\n                <div className=\"holon-details\">\n                    <h2>Holon Details</h2>\n                    {selectedHolon ? (\n                        <>\n                            <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n                            <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n                            {activeStep === 2 && (\n                                <>\n                                    <h3>Information Flows</h3>\n                                    <p>{nodes.description}</p>\n                                </>\n                            )}\n                        </>\n                    ) : (\n                        <p className='no-selection'>No Selection</p>\n                    )}\n                </div>\n            </div>\n            <Modal show={showModal} onHide={handleModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {modalStep === 1 ? (\n                        <p style={{ textAlign: 'center' }}>\n                            Select a button below to add the node you need\n                        </p>\n                    ) : (\n                        <Form>\n                            <Form.Group controlId=\"formNodeName\">\n                                <Form.Label>Enter the name for the Node</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n                            </Form.Group>\n                        </Form>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    {modalStep === 1 ? (\n                        <>\n                            <Button variant=\"secondary\" onClick={() => handleNodeTypeSelection('child')}>Child-Node</Button>\n                            <Button variant=\"primary\" onClick={() => handleNodeTypeSelection('parent')}>Parent-Node</Button>\n                        </>\n                    ) : (\n                        <Button variant=\"primary\" onClick={handleSubmit}>\n                            Save Changes\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}