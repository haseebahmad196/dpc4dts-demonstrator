{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showAddNodeModal, setShowAddNodeModal] = useState(false);\n  const [newNodeName, setNewNodeName] = useState('');\n  const onAddChild = (parentNode, isRoot = false) => {\n    setShowAddNodeModal(true);\n    setSelectedHolon(parentNode);\n  };\n  const handleAddNodeConfirm = () => {\n    setShowAddNodeModal(false);\n    const relationshipType = 'child'; // Since we are always adding child nodes here\n    const nodeName = newNodeName;\n    if (!nodeName) return;\n    const newChild = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, selectedHolon.id);\n    setNodes(newNodes);\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: isSelected,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      style: {\n        display: showAddNodeModal ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Add Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              onClick: () => setShowAddNodeModal(false),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"nodeName\",\n                children: \"Node Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                id: \"nodeName\",\n                value: newNodeName,\n                onChange: e => setNewNodeName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              onClick: () => setShowAddNodeModal(false),\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: handleAddNodeConfirm,\n              children: \"Add Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"h8jOu4NFeZ1pTnzQj3g8ltTtYgA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","showAddNodeModal","setShowAddNodeModal","newNodeName","setNewNodeName","parentNode","isRoot","handleAddNodeConfirm","relationshipType","nodeName","newChild","Math","random","addNode","parentId","push","forEach","newNodes","nodeId","removeNode","nodeIdToRemove","filter","rootName","prompt","newRoot","console","log","lineWidth","lineColor","lineBorderRadius","style","display","type","htmlFor","value","onChange","target","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>+</button>\n          \n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n          addNewRoot={addNewRoot}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showAddNodeModal, setShowAddNodeModal] = useState(false);\n  const [newNodeName, setNewNodeName] = useState('');\n\n  const onAddChild = (parentNode, isRoot = false) => {\n    setShowAddNodeModal(true);\n    setSelectedHolon(parentNode);\n  };\n\n  const handleAddNodeConfirm = () => {\n    setShowAddNodeModal(false);\n    const relationshipType = 'child'; // Since we are always adding child nodes here\n    const nodeName = newNodeName;\n\n    if (!nodeName) return;\n\n    const newChild = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, selectedHolon.id);\n    setNodes(newNodes);\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={onSelectNode}\n            isSelected={isSelected}\n            addNewRoot={addNewRoot}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n      {/* Bootstrap Modal for Adding Node */}\n      <div className=\"modal\" style={{ display: showAddNodeModal ? 'block' : 'none' }}>\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title\">Add Node</h5>\n              <button type=\"button\" className=\"close\" onClick={() => setShowAddNodeModal(false)}>\n                <span>&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <div className=\"form-group\">\n                <label htmlFor=\"nodeName\">Node Name:</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"nodeName\"\n                  value={newNodeName}\n                  onChange={(e) => setNewNodeName(e.target.value)}\n                />\n              </div>\n            </div>\n            <div className=\"modal-footer\">\n              <button type=\"button\" className=\"btn btn-secondary\" onClick={() => setShowAddNodeModal(false)}>Close</button>\n              <button type=\"button\" className=\"btn btn-primary\" onClick={handleAddNodeConfirm}>Add Node</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* End Bootstrap Modal */}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}