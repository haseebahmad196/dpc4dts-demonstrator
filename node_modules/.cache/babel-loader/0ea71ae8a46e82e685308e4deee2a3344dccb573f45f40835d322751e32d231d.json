{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onAddParent,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action(node);\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: node.id === 'root' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, onAddParent),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, onAddChild),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: e => handleActionClick(e, onRemoveNode),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onAddParent: onAddParent,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const nodeName = prompt('Enter the name of the new child holon:');\n    if (!nodeName) return;\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    const addNodeAsChild = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children = [...nodes.children, newChild];\n        return true;\n      }\n      return nodes.children.some(child => addNodeAsChild(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNodeAsChild(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const onAddParent = currentNode => {\n    const nodeType = prompt('Add new node as (1) Child or (2) Parent of the Information System? Enter 1 or 2:');\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n    const newNode = {\n      id: `${currentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === '1') {\n      currentNode.children = [...currentNode.children, newNode];\n      setNodes({\n        ...nodes\n      });\n    } else if (nodeType === '2') {\n      newNode.children = [currentNode];\n      setNodes(newNode);\n    }\n  };\n  const onRemoveNode = nodeToRemove => {\n    const removeNode = (parentNode, nodeIdToRemove) => {\n      parentNode.children = parentNode.children.filter(child => child.id !== nodeIdToRemove);\n      parentNode.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n    if (nodeToRemove.id === 'root') return;\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, nodeToRemove.id);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onAddParent: onAddParent,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-name\",\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-description\",\n        children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jxsC05GNX/HYyDzVyEe6iP+wR0g=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAddChild","onAddParent","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","id","fileName","_jsxFileName","lineNumber","columnNumber","name","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","parentNode","nodeName","prompt","newChild","Math","random","addNodeAsChild","parentId","some","newNodes","currentNode","nodeType","newNode","nodeToRemove","removeNode","nodeIdToRemove","filter","forEach","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onAddParent, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action(node);\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"buttons\">\n          {node.id === 'root' ? (\n            <button className=\"add-button\" onClick={(e) => handleActionClick(e, onAddParent)}>+</button>\n          ) : (\n            <button className=\"add-button\" onClick={(e) => handleActionClick(e, onAddChild)}>+</button>\n          )}\n        </div>\n        <div className=\"name\">{node.name}</div>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={(e) => handleActionClick(e, onRemoveNode)}>x</button>\n        )}\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onAddParent={onAddParent}\n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const nodeName = prompt('Enter the name of the new child holon:');\n    if (!nodeName) return;\n\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    const addNodeAsChild = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children = [...nodes.children, newChild];\n        return true;\n      }\n      return nodes.children.some(child => addNodeAsChild(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNodeAsChild(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const onAddParent = (currentNode) => {\n    const nodeType = prompt('Add new node as (1) Child or (2) Parent of the Information System? Enter 1 or 2:');\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n\n    const newNode = {\n      id: `${currentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    if (nodeType === '1') {\n      currentNode.children = [...currentNode.children, newNode];\n      setNodes({ ...nodes });\n    } else if (nodeType === '2') {\n      newNode.children = [currentNode];\n      setNodes(newNode);\n    }\n  };\n\n  const onRemoveNode = (nodeToRemove) => {\n    const removeNode = (parentNode, nodeIdToRemove) => {\n      parentNode.children = parentNode.children.filter(child => child.id !== nodeIdToRemove);\n      parentNode.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n\n    if (nodeToRemove.id === 'root') return;\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, nodeToRemove.id);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={nodes}\n          onAddChild={onAddChild}\n          onAddParent={onAddParent}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={setSelectedHolon}\n          isSelected={isSelected}\n        />\n      </Tree>\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n          <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}