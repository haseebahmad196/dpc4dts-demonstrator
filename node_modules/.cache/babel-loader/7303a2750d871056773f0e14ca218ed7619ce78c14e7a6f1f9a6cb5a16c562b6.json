{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot,\n  isHighlighted,\n  onAddFlowStart,\n  onAddFlowEnd\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const highlighted = isHighlighted(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${highlighted ? 'highlighted' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-flow-button\",\n          onClick: e => handleActionClick(e, () => onAddFlowStart(node)),\n          children: \"Add Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot,\n      isHighlighted: isHighlighted,\n      onAddFlowStart: onAddFlowStart,\n      onAddFlowEnd: onAddFlowEnd\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [flowStart, setFlowStart] = useState(null);\n  const [flowEnd, setFlowEnd] = useState(null);\n  const [flows, setFlows] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  useEffect(() => {\n    if (flowStart && flowEnd) {\n      setFlows([...flows, {\n        from: flowStart.id,\n        to: flowEnd.id\n      }]);\n      setFlowStart(null);\n      setFlowEnd(null);\n    }\n  }, [flowStart, flowEnd, flows]);\n  const onAddFlowStart = node => {\n    setFlowStart(node);\n  };\n  const onAddFlowEnd = node => {\n    if (flowStart && node.id !== flowStart.id) {\n      setFlowEnd(node);\n    }\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  const isHighlighted = node => flowStart && node.id === flowStart.id || flowEnd && node.id === flowEnd.id;\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    setSelectedHolon({\n      id: 'root',\n      name: '',\n      children: [nodes]\n    });\n    setNodeType('parent');\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: node => setSelectedHolon(node),\n          isSelected: isSelected,\n          addNewRoot: addNewRoot,\n          isHighlighted: isHighlighted,\n          onAddFlowStart: onAddFlowStart,\n          onAddFlowEnd: onAddFlowEnd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Select a button below to add the node you need\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter the name for the Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleNodeTypeSelection('child'),\n            children: \"Child-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleNodeTypeSelection('parent'),\n            children: \"Parent-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"tXWJ02J18THNW6fcB2SZH4bF5AI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Tree","TreeNode","Modal","Button","Form","FontAwesomeIcon","faPlus","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","isHighlighted","onAddFlowStart","onAddFlowEnd","handleActionClick","e","action","stopPropagation","selected","highlighted","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","flowStart","setFlowStart","flowEnd","setFlowEnd","flows","setFlows","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","from","to","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","handleNodeTypeSelection","type","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","console","log","lineWidth","lineColor","lineBorderRadius","show","onHide","Header","closeButton","Title","Body","style","textAlign","Group","controlId","Label","Control","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot, isHighlighted, onAddFlowStart, onAddFlowEnd }) => {\n    const handleActionClick = (e, action) => {\n        e.stopPropagation();\n        action();\n    };\n\n    const selected = isSelected(node);\n    const highlighted = isHighlighted(node);\n\n    return (\n        <TreeNode label={\n            <div className={`tree-label ${selected ? 'selected' : ''} ${highlighted ? 'highlighted' : ''}`} onClick={() => onSelectNode(node)}>\n                <div className=\"name\">{node.name}</div>\n                <div className=\"buttons\">\n                    <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>\n                        <FontAwesomeIcon icon={faPlus} />\n                    </button>\n                    <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\n                        <FontAwesomeIcon icon={faTrash} />\n                    </button>\n                    <button className=\"add-flow-button\" onClick={(e) => handleActionClick(e, () => onAddFlowStart(node))}>\n                        Add Flow\n                    </button>\n                </div>\n            </div>\n        }>\n            {node.children && node.children.map(child => (\n                <Holon\n                    key={child.id}\n                    node={child}\n                    onAddChild={onAddChild}\n                    onRemoveNode={onRemoveNode}\n                    onSelectNode={onSelectNode}\n                    isSelected={isSelected}\n                    addNewRoot={addNewRoot}\n                    isHighlighted={isHighlighted}\n                    onAddFlowStart={onAddFlowStart}\n                    onAddFlowEnd={onAddFlowEnd}\n                />\n            ))}\n        </TreeNode>\n    );\n};\n\nconst App = () => {\n    const initialNodes = {\n        id: 'root',\n        name: 'Information System',\n        description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n        children: [\n            {\n                id: 'Stakeholder',\n                name: 'Stakeholder',\n                description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n                children: [],\n            },\n            {\n                id: 'Infrastructure',\n                name: 'Infrastructure',\n                description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n                children: [],\n            }\n        ],\n    };\n\n    const [nodes, setNodes] = useState(initialNodes);\n    const [selectedHolon, setSelectedHolon] = useState(null);\n    const [flowStart, setFlowStart] = useState(null);\n    const [flowEnd, setFlowEnd] = useState(null);\n    const [flows, setFlows] = useState([]);\n    const [showModal, setShowModal] = useState(false);\n    const [modalStep, setModalStep] = useState(1);\n    const [nodeType, setNodeType] = useState('');\n    const [nodeName, setNodeName] = useState('');\n\n    useEffect(() => {\n        if (flowStart && flowEnd) {\n            setFlows([...flows, { from: flowStart.id, to: flowEnd.id }]);\n            setFlowStart(null);\n            setFlowEnd(null);\n        }\n    }, [flowStart, flowEnd, flows]);\n\n    const onAddFlowStart = (node) => {\n        setFlowStart(node);\n    };\n\n    const onAddFlowEnd = (node) => {\n        if (flowStart && node.id !== flowStart.id) {\n            setFlowEnd(node);\n        }\n    };\n\n    const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n    const isHighlighted = (node) => (flowStart && node.id === flowStart.id) || (flowEnd && node.id === flowEnd.id);\n\n    const handleModalClose = () => {\n        setShowModal(false);\n        setModalStep(1);\n        setNodeName('');\n    };\n\n    const handleModalShow = () => {\n        setShowModal(true);\n    };\n\n    const onAddChild = (parentNode) => {\n        setSelectedHolon(parentNode);\n        handleModalShow();\n    };\n\n    const onRemoveNode = (nodeId) => {\n        const removeNode = (nodes, nodeIdToRemove) => {\n            if (nodes.id === nodeIdToRemove) {\n                return null;\n            }\n            nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n            nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n            return nodes;\n        };\n\n        const newNodes = removeNode({ ...nodes }, nodeId);\n        setNodes(newNodes);\n        setSelectedHolon(null);\n    };\n\n    const addNewRoot = () => {\n        setSelectedHolon({ id: 'root', name: '', children: [nodes] });\n        setNodeType('parent');\n        handleModalShow();\n    };\n\n    const handleNodeTypeSelection = (type) => {\n        setNodeType(type);\n        setModalStep(2);\n    };\n\n    const handleSubmit = () => {\n        const newNode = {\n            id: `${selectedHolon.id}-${Math.random()}`,\n            name: nodeName,\n            children: []\n        };\n        if (nodeType === 'child') {\n            const addNode = (nodes, parentId) => {\n                if (nodes.id === parentId) {\n                    nodes.children.push(newNode);\n                    return;\n                }\n                nodes.children.forEach(child => addNode(child, parentId));\n            };\n\n            const newNodes = { ...nodes };\n            addNode(newNodes, selectedHolon.id);\n            setNodes(newNodes);\n        } else if (nodeType === 'parent') {\n            const newParent = {\n                id: `root-${Math.random()}`,\n                name: nodeName,\n                children: [selectedHolon]\n            };\n            setNodes(newParent);\n        }\n        handleModalClose();\n    };\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"steps-bar\">\n                <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n                    <div className=\"step-circle\">1</div>\n                    <div className=\"step-label\">Structure</div>\n                </div>\n                <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n                    <div className=\"step-circle\">2</div>\n                    <div className=\"step-label\">Communication</div>\n                </div>\n            </div>\n            <div className=\"content-area\">\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n                    <Holon\n                        node={nodes}\n                        onAddChild={onAddChild}\n                        onRemoveNode={onRemoveNode}\n                        onSelectNode={(node) => setSelectedHolon(node)}\n                        isSelected={isSelected}\n                        addNewRoot={addNewRoot}\n                        isHighlighted={isHighlighted}\n                        onAddFlowStart={onAddFlowStart}\n                        onAddFlowEnd={onAddFlowEnd}\n                    />\n                </Tree>\n                <div className=\"holon-details\">\n                    <h2>Holon Details</h2>\n                    {selectedHolon ? (\n                        <>\n                            <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n                            <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n                        </>\n                    ) : (\n                        <p className='no-selection'>No Selection</p>\n                    )}\n                </div>\n            </div>\n            <Modal show={showModal} onHide={handleModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {modalStep === 1 ? (\n                        <p style={{ textAlign: 'center' }}>\n                            Select a button below to add the node you need\n                        </p>\n                    ) : (\n                        <Form>\n                            <Form.Group controlId=\"formNodeName\">\n                                <Form.Label>Enter the name for the Node</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n                            </Form.Group>\n                        </Form>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    {modalStep === 1 ? (\n                        <>\n                            <Button variant=\"secondary\" onClick={() => handleNodeTypeSelection('child')}>Child-Node</Button>\n                            <Button variant=\"primary\" onClick={() => handleNodeTypeSelection('parent')}>Parent-Node</Button>\n                        </>\n                    ) : (\n                        <Button variant=\"primary\" onClick={handleSubmit}>\n                            Save Changes\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}