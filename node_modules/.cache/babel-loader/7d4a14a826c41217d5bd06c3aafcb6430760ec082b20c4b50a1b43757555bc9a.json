{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children = [...nodes.children, newChild];\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n    if (nodeId === 'root') return; // Prevent root removal for safety\n\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Reset selection when a node is removed\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-name\",\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-description\",\n        children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","childName","prompt","newChild","Math","random","addNode","parentId","forEach","newNodes","nodeId","removeNode","nodeIdToRemove","filter","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n        </div>\n        <div className=\"name\">{node.name}</div>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n        )}\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n        children: [],  \n      }\n    ],\n  };\n\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children = [...nodes.children, newChild];\n        return;\n      }\n\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n\n    if (nodeId === 'root') return; // Prevent root removal for safety\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Reset selection when a node is removed\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={nodes}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={setSelectedHolon}\n          isSelected={isSelected}\n        />\n      </Tree>\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n          <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}