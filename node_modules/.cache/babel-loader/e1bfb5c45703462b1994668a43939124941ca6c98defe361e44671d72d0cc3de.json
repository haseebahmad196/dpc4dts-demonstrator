{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const handleAddNode = type => {\n    setRelationshipType(type);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setRelationshipType('');\n    setNodeName('');\n  };\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    if (!nodeName) return;\n    if (relationshipType.toLowerCase() === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (relationshipType.toLowerCase() === 'parent') {\n      onAddChild(node, false, nodeName);\n    }\n    setNodeName('');\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => handleAddNode('child')),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Add \", relationshipType, \" Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name of the node:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleConfirmModal,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Holon, \"L35Ay2mxhmzyyiJ/+6oQ6CRZnPE=\");\n_c = Holon;\nconst App = () => {\n  _s2();\n  // Sample data for the tree\n  const data = {\n    id: 'root',\n    name: 'Root Node',\n    children: [{\n      id: 'child1',\n      name: 'Child Node 1',\n      children: [{\n        id: 'grandchild1',\n        name: 'Grandchild Node 1'\n      }, {\n        id: 'grandchild2',\n        name: 'Grandchild Node 2'\n      }]\n    }, {\n      id: 'child2',\n      name: 'Child Node 2'\n    }]\n  };\n  const [treeData, setTreeData] = useState(data);\n  const handleAddChild = (parentNode, isRoot, nodeName) => {\n    const newNode = {\n      id: Date.now().toString(),\n      name: nodeName\n    };\n    if (isRoot) {\n      setTreeData({\n        ...treeData,\n        children: [...treeData.children, newNode]\n      });\n    } else {\n      const updatedTree = addChildToParent(treeData, parentNode.id, newNode);\n      setTreeData(updatedTree);\n    }\n  };\n  const addChildToParent = (parent, parentId, newNode) => {\n    if (parent.id === parentId) {\n      return {\n        ...parent,\n        children: parent.children ? [...parent.children, newNode] : [newNode]\n      };\n    }\n    if (parent.children) {\n      return {\n        ...parent,\n        children: parent.children.map(child => addChildToParent(child, parentId, newNode))\n      };\n    }\n    return parent;\n  };\n  const handleRemoveNode = nodeId => {\n    const updatedTree = removeNode(treeData, nodeId);\n    setTreeData(updatedTree);\n  };\n  const removeNode = (parent, nodeId) => {\n    if (parent.children) {\n      const updatedChildren = parent.children.filter(child => child.id !== nodeId);\n      return {\n        ...parent,\n        children: updatedChildren.map(child => removeNode(child, nodeId))\n      };\n    }\n    return parent;\n  };\n  const handleSelectNode = selectedNode => {\n    console.log('Selected Node:', selectedNode);\n  };\n  const isSelected = node => {\n    // Logic to check if node is selected\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: '2px',\n      lineColor: '#000',\n      lineBorderRadius: '10px',\n      label: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: \"Root Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 16\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: treeData,\n        onAddChild: handleAddChild,\n        onRemoveNode: handleRemoveNode,\n        onSelectNode: handleSelectNode,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"z+WNKTS8x0c80nw8ONQoBDOE63E=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","_s","showModal","setShowModal","relationshipType","setRelationshipType","nodeName","setNodeName","handleActionClick","e","action","stopPropagation","selected","handleAddNode","type","handleCloseModal","handleConfirmModal","toLowerCase","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","value","onChange","target","Footer","variant","_c","App","_s2","data","treeData","setTreeData","handleAddChild","parentNode","isRoot","newNode","Date","now","toString","updatedTree","addChildToParent","parent","parentId","handleRemoveNode","nodeId","removeNode","updatedChildren","filter","handleSelectNode","selectedNode","console","log","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  const handleAddNode = (type) => {\n    setRelationshipType(type);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setRelationshipType('');\n    setNodeName('');\n  };\n\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    if (!nodeName) return;\n\n    if (relationshipType.toLowerCase() === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (relationshipType.toLowerCase() === 'parent') {\n      onAddChild(node, false, nodeName);\n    }\n\n    setNodeName('');\n  };\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => handleAddNode('child'))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add {relationshipType} Node</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formNodeName\">\n            <Form.Label>Enter the name of the node:</Form.Label>\n            <Form.Control type=\"text\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmModal}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  // Sample data for the tree\n  const data = {\n    id: 'root',\n    name: 'Root Node',\n    children: [\n      {\n        id: 'child1',\n        name: 'Child Node 1',\n        children: [\n          {\n            id: 'grandchild1',\n            name: 'Grandchild Node 1',\n          },\n          {\n            id: 'grandchild2',\n            name: 'Grandchild Node 2',\n          },\n        ],\n      },\n      {\n        id: 'child2',\n        name: 'Child Node 2',\n      },\n    ],\n  };\n\n  const [treeData, setTreeData] = useState(data);\n\n  const handleAddChild = (parentNode, isRoot, nodeName) => {\n    const newNode = {\n      id: Date.now().toString(),\n      name: nodeName,\n    };\n\n    if (isRoot) {\n      setTreeData({\n        ...treeData,\n        children: [...treeData.children, newNode],\n      });\n    } else {\n      const updatedTree = addChildToParent(treeData, parentNode.id, newNode);\n      setTreeData(updatedTree);\n    }\n  };\n\n  const addChildToParent = (parent, parentId, newNode) => {\n    if (parent.id === parentId) {\n      return {\n        ...parent,\n        children: parent.children ? [...parent.children, newNode] : [newNode],\n      };\n    }\n\n    if (parent.children) {\n      return {\n        ...parent,\n        children: parent.children.map(child => addChildToParent(child, parentId, newNode)),\n      };\n    }\n\n    return parent;\n  };\n\n  const handleRemoveNode = (nodeId) => {\n    const updatedTree = removeNode(treeData, nodeId);\n    setTreeData(updatedTree);\n  };\n\n  const removeNode = (parent, nodeId) => {\n    if (parent.children) {\n      const updatedChildren = parent.children.filter(child => child.id !== nodeId);\n      return {\n        ...parent,\n        children: updatedChildren.map(child => removeNode(child, nodeId)),\n      };\n    }\n    return parent;\n  };\n\n  const handleSelectNode = (selectedNode) => {\n    console.log('Selected Node:', selectedNode);\n  };\n\n  const isSelected = (node) => {\n    // Logic to check if node is selected\n    return false;\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Tree\n        lineWidth={'2px'}\n        lineColor={'#000'}\n        lineBorderRadius={'10px'}\n        label={<div className=\"name\">Root Node</div>}\n      >\n        <Holon\n          node={treeData}\n          onAddChild={handleAddChild}\n          onRemoveNode={handleRemoveNode}\n          onSelectNode={handleSelectNode}\n          isSelected={isSelected}\n        />\n      </Tree>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}