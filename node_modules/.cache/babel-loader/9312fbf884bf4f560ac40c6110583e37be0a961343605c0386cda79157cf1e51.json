{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot,\n  onAddInformationFlow,\n  selectedOrigin,\n  setSelectedOrigin\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const handleNodeClick = () => {\n    if (selectedOrigin) {\n      onAddInformationFlow(selectedOrigin, node);\n      setSelectedOrigin(null);\n    } else {\n      onSelectNode(node);\n    }\n  };\n  const selected = isSelected(node);\n  const isOrigin = selectedOrigin && selectedOrigin.id === node.id;\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''}`,\n      onClick: handleNodeClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [!isOrigin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 35\n        }, this), !isOrigin && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot,\n      onAddInformationFlow: onAddInformationFlow,\n      selectedOrigin: selectedOrigin,\n      setSelectedOrigin: setSelectedOrigin\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst CommunicationPage = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Communication System',\n    children: [{\n      id: 'InformationSystem',\n      name: 'Information System',\n      children: [{\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        children: []\n      }, {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        children: []\n      }]\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const [selectedOrigin, setSelectedOrigin] = useState(null);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    setSelectedHolon({\n      id: 'root',\n      name: '',\n      children: [nodes]\n    });\n    setNodeType('parent');\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedHolon.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  const onAddInformationFlow = (origin, destination) => {\n    console.log(`Information flow added from ${origin.name} to ${destination.name}`);\n    // Perform information flow addition logic here\n  };\n  const isSelected = node => {\n    return selectedHolon && selectedHolon.id === node.id;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-view\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: node => setSelectedHolon(node),\n          isSelected: isSelected,\n          addNewRoot: addNewRoot,\n          onAddInformationFlow: onAddInformationFlow,\n          selectedOrigin: selectedOrigin,\n          setSelectedOrigin: setSelectedOrigin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"detail-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detail View\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"holon-details-name\",\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"holon-details-description\",\n          children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter the name for the Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-selection\",\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Select a button below to add the node you need\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter the name for the Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleNodeTypeSelection('child'),\n            children: \"Child-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleNodeTypeSelection('parent'),\n            children: \"Parent-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n};\n_s(CommunicationPage, \"b0kbCGMOmNYgVT6W8LPLx1KvCXA=\");\n_c2 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","FontAwesomeIcon","faPlus","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","onAddInformationFlow","selectedOrigin","setSelectedOrigin","handleActionClick","e","action","stopPropagation","handleNodeClick","selected","isOrigin","id","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","map","child","_c","CommunicationPage","_s","initialNodes","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","handleNodeTypeSelection","type","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","origin","destination","console","log","lineWidth","lineColor","lineBorderRadius","description","Group","controlId","Label","Control","placeholder","value","onChange","target","show","onHide","Header","closeButton","Title","Body","style","textAlign","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot, onAddInformationFlow, selectedOrigin, setSelectedOrigin }) => {\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const handleNodeClick = () => {\r\n        if (selectedOrigin) {\r\n            onAddInformationFlow(selectedOrigin, node);\r\n            setSelectedOrigin(null);\r\n        } else {\r\n            onSelectNode(node);\r\n        }\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n    const isOrigin = selectedOrigin && selectedOrigin.id === node.id;\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''}`} onClick={handleNodeClick}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    {!isOrigin && <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>}\r\n                    {!isOrigin && <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>}\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                    addNewRoot={addNewRoot}\r\n                    onAddInformationFlow={onAddInformationFlow}\r\n                    selectedOrigin={selectedOrigin}\r\n                    setSelectedOrigin={setSelectedOrigin}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n    const initialNodes = {\r\n        id: 'root',\r\n        name: 'Communication System',\r\n        children: [\r\n            {\r\n                id: 'InformationSystem',\r\n                name: 'Information System',\r\n                children: [\r\n                    {\r\n                        id: 'Stakeholder',\r\n                        name: 'Stakeholder',\r\n                        children: [],\r\n                    },\r\n                    {\r\n                        id: 'Infrastructure',\r\n                        name: 'Infrastructure',\r\n                        children: [],\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    };\r\n\r\n    const [nodes, setNodes] = useState(initialNodes);\r\n    const [selectedHolon, setSelectedHolon] = useState(null);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [modalStep, setModalStep] = useState(1);\r\n    const [nodeType, setNodeType] = useState('');\r\n    const [nodeName, setNodeName] = useState('');\r\n    const [selectedOrigin, setSelectedOrigin] = useState(null);\r\n\r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n        setModalStep(1);\r\n        setNodeName('');\r\n    };\r\n\r\n    const handleModalShow = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const onAddChild = (parentNode) => {\r\n        setSelectedHolon(parentNode);\r\n        handleModalShow();\r\n    };\r\n\r\n    const onRemoveNode = (nodeId) => {\r\n        const removeNode = (nodes, nodeIdToRemove) => {\r\n            if (nodes.id === nodeIdToRemove) {\r\n                return null;\r\n            }\r\n            nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\r\n            nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\r\n            return nodes;\r\n        };\r\n\r\n        const newNodes = removeNode({ ...nodes }, nodeId);\r\n        setNodes(newNodes);\r\n        setSelectedHolon(null);\r\n    };\r\n\r\n    const addNewRoot = () => {\r\n        setSelectedHolon({ id: 'root', name: '', children: [nodes] });\r\n        setNodeType('parent');\r\n        handleModalShow();\r\n    };\r\n\r\n    const handleNodeTypeSelection = (type) => {\r\n        setNodeType(type);\r\n        setModalStep(2);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const newNode = {\r\n            id: `${selectedHolon.id}-${Math.random()}`,\r\n            name: nodeName,\r\n            children: []\r\n        };\r\n        if (nodeType === 'child') {\r\n            const addNode = (nodes, parentId) => {\r\n                if (nodes.id === parentId) {\r\n                    nodes.children.push(newNode);\r\n                    return;\r\n                }\r\n                nodes.children.forEach(child => addNode(child, parentId));\r\n            };\r\n\r\n            const newNodes = { ...nodes };\r\n            addNode(newNodes, selectedHolon.id);\r\n            setNodes(newNodes);\r\n        } else if (nodeType === 'parent') {\r\n            const newParent = {\r\n                id: `root-${Math.random()}`,\r\n                name: nodeName,\r\n                children: [selectedHolon]\r\n            };\r\n            setNodes(newParent);\r\n        }\r\n        handleModalClose();\r\n    };\r\n\r\n    const onAddInformationFlow = (origin, destination) => {\r\n        console.log(`Information flow added from ${origin.name} to ${destination.name}`);\r\n        // Perform information flow addition logic here\r\n    };\r\n\r\n    const isSelected = (node) => {\r\n        return selectedHolon && selectedHolon.id === node.id;\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"canvas-view\">\r\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\r\n                    <Holon\r\n                        node={nodes}\r\n                        onAddChild={onAddChild}\r\n                        onRemoveNode={onRemoveNode}\r\n                        onSelectNode={(node) => setSelectedHolon(node)}\r\n                        isSelected={isSelected}\r\n                        addNewRoot={addNewRoot}\r\n                        onAddInformationFlow={onAddInformationFlow}\r\n                        selectedOrigin={selectedOrigin}\r\n                        setSelectedOrigin={setSelectedOrigin}\r\n                    />\r\n                </Tree>\r\n            </div>\r\n            <div className=\"detail-view\">\r\n                <h2>Detail View</h2>\r\n                {selectedHolon ? (\r\n                    <>\r\n                        <p className='holon-details-name'>Name: {selectedHolon.name}</p>\r\n                        <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\r\n                        <Form>\r\n                            <Form.Group controlId=\"formNodeName\">\r\n                                <Form.Label>Enter the name for the Node</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    </>\r\n                ) : (\r\n                    <p className='no-selection'>No Selection</p>\r\n                )}\r\n            </div>\r\n            <Modal show={showModal} onHide={handleModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {modalStep === 1 ? (\r\n                        <p style={{ textAlign: 'center' }}>\r\n                            Select a button below to add the node you need\r\n                        </p>\r\n                    ) : (\r\n                        <Form>\r\n                            <Form.Group controlId=\"formNodeName\">\r\n                                <Form.Label>Enter the name for the Node</Form.Label>\r\n                                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\r\n                            </Form.Group>\r\n                        </Form>\r\n                    )}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {modalStep === 1 ? (\r\n                        <>\r\n                            <Button variant=\"secondary\" onClick={() => handleNodeTypeSelection('child')}>Child-Node</Button>\r\n                            <Button variant=\"primary\" onClick={() => handleNodeTypeSelection('parent')}>Parent-Node</Button>\r\n                        </>\r\n                    ) : (\r\n                        <Button variant=\"primary\" onClick={handleSubmit}>\r\n                            Save Changes\r\n                        </Button>\r\n                    )}\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}