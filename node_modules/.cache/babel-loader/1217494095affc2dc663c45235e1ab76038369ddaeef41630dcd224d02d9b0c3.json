{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected,\n  selectedHolonId,\n  setSelectedHolonId\n}) => {\n  _s();\n  const [isHovered, setIsHovered] = useState(false);\n  const handleNodeClick = () => {\n    onSelectNode(node);\n  };\n  const handleAddClick = e => {\n    e.stopPropagation();\n    if (selectedHolonId === node.id) {\n      setSelectedHolonId(null); // Deselect if already selected\n    } else {\n      setSelectedHolonId(node.id); // Update the selected holon ID\n    }\n  };\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n  const selected = isSelected(node);\n  const isOrigin = selectedHolonId === node.id;\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''} ${isHovered ? 'hovered' : ''}`,\n      onClick: handleNodeClick,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      setSelectedHolonId: setSelectedHolonId,\n      selectedHolonId: selectedHolonId\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Holon, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n_c = Holon;\nexport default Holon;\nvar _c;\n$RefreshReg$(_c, \"Holon\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","Holon","node","onSelectNode","isSelected","selectedHolonId","setSelectedHolonId","_s","isHovered","setIsHovered","handleNodeClick","handleAddClick","e","stopPropagation","id","handleMouseEnter","handleMouseLeave","selected","isOrigin","label","className","onClick","onMouseEnter","onMouseLeave","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","map","child","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onSelectNode, isSelected, selectedHolonId, setSelectedHolonId }) => {\r\n    const [isHovered, setIsHovered] = useState(false);\r\n\r\n    const handleNodeClick = () => {\r\n        onSelectNode(node);\r\n    };\r\n\r\n    const handleAddClick = (e) => {\r\n        e.stopPropagation();\r\n        if (selectedHolonId === node.id) {\r\n            setSelectedHolonId(null); // Deselect if already selected\r\n        } else {\r\n            setSelectedHolonId(node.id); // Update the selected holon ID\r\n        }\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n        setIsHovered(true);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setIsHovered(false);\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n    const isOrigin = selectedHolonId === node.id;\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div\r\n                className={`tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''} ${isHovered ? 'hovered' : ''}`}\r\n                onClick={handleNodeClick}\r\n                onMouseEnter={handleMouseEnter}\r\n                onMouseLeave={handleMouseLeave}\r\n            >\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <button className=\"add-button\" onClick={handleAddClick}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                    setSelectedHolonId={setSelectedHolonId}\r\n                    selectedHolonId={selectedHolonId}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nexport default Holon;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}