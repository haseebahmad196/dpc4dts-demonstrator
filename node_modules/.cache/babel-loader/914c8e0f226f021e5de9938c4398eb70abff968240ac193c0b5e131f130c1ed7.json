{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport OrganizationalChart from 'react-organizational-chart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onAdd(node),\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onRemove(node.id),\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: []\n  });\n  const [idCounter, setIdCounter] = useState(1);\n  const addChild = parent => {\n    const childName = prompt('Enter the name of the child:');\n    const description = 'New child node';\n    if (!childName) return;\n    const newId = `node-${idCounter}`;\n    const newNode = {\n      id: newId,\n      name: childName,\n      description,\n      children: []\n    };\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        node.children = [...node.children, newNode];\n        return;\n      }\n      node.children.forEach(child => addNodeRecursively(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n    setIdCounter(idCounter + 1);\n  };\n  const removeChild = nodeId => {\n    const removeNodeRecursively = (node, removeId) => {\n      node.children = node.children.filter(child => child.id !== removeId);\n      node.children.forEach(child => removeNodeRecursively(child, removeId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNodeRecursively(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n  const renderOrganizationalChart = node => {\n    if (!node) return null;\n    return /*#__PURE__*/_jsxDEV(OrganizationalChart, {\n      lineWidth: '2px',\n      lineColor: 'blue',\n      lineBorderRadius: '5px',\n      label: /*#__PURE__*/_jsxDEV(Holon, {\n        node: node,\n        onAdd: addChild,\n        onRemove: removeChild\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this),\n      children: node.children.map(child => renderOrganizationalChart(child))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: renderOrganizationalChart(nodes)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nYovGnOlaV/EvtnhMj3C9+KEjjk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","OrganizationalChart","jsxDEV","_jsxDEV","Holon","node","onAdd","onRemove","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","_c","App","_s","nodes","setNodes","description","idCounter","setIdCounter","addChild","parent","childName","prompt","newId","newNode","addNodeRecursively","parentId","forEach","child","newNodes","removeChild","nodeId","removeNodeRecursively","removeId","filter","renderOrganizationalChart","lineWidth","lineColor","lineBorderRadius","label","map","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport OrganizationalChart from 'react-organizational-chart';\nimport './App.css';\n\nconst Holon = ({ node, onAdd, onRemove }) => {\n  return (\n    <div className=\"holon\">\n      <div className=\"name\">{node.name}</div>\n      <div className=\"buttons\">\n        <button onClick={() => onAdd(node)}>Add</button>\n        {node.id !== 'root' && <button onClick={() => onRemove(node.id)}>Remove</button>}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [],\n  });\n  const [idCounter, setIdCounter] = useState(1);\n\n  const addChild = (parent) => {\n    const childName = prompt('Enter the name of the child:');\n    const description = 'New child node';\n    if (!childName) return;\n\n    const newId = `node-${idCounter}`;\n    const newNode = { id: newId, name: childName, description, children: [] };\n\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        node.children = [...node.children, newNode];\n        return;\n      }\n      node.children.forEach(child => addNodeRecursively(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n    setIdCounter(idCounter + 1);\n  };\n\n  const removeChild = (nodeId) => {\n    const removeNodeRecursively = (node, removeId) => {\n      node.children = node.children.filter(child => child.id !== removeId);\n      node.children.forEach(child => removeNodeRecursively(child, removeId));\n    };\n\n    const newNodes = { ...nodes };\n    removeNodeRecursively(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n\n  const renderOrganizationalChart = (node) => {\n    if (!node) return null;\n    return (\n      <OrganizationalChart\n        lineWidth={'2px'}\n        lineColor={'blue'}\n        lineBorderRadius={'5px'}\n        label={<Holon node={node} onAdd={addChild} onRemove={removeChild} />}\n      >\n        {node.children.map(child => renderOrganizationalChart(child))}\n      </OrganizationalChart>\n    );\n  };\n\n  return (\n    <div className=\"app-container\">\n      {renderOrganizationalChart(nodes)}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}