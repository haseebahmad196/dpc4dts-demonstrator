{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  name,\n  onSelect,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    onClick: () => onSelect(name),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: e => {\n        e.stopPropagation();\n        onAdd(name);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"remove-button\",\n      onClick: e => {\n        e.stopPropagation();\n        onRemove(name);\n      },\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: []\n  }]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(1); // Adjusted to manage unique IDs for all nodes dynamically\n\n  const selectHolon = selectedName => {\n    // Recursive function to search for a node by name\n    const searchNode = (nodes, name) => {\n      for (let node of nodes) {\n        if (node.name === name) {\n          return node;\n        }\n        if (node.children.length > 0) {\n          const found = searchNode(node.children, name);\n          if (found) return found;\n        }\n      }\n      return null; // Return null if the node is not found\n    };\n\n    // Use the search function to find the node\n    const holon = searchNode(nodes, selectedName);\n    if (holon) {\n      setSelectedHolon(holon); // Update the state with the found node\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holons-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n  const addChild = parentName => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n    const newId = `node-${idCounter}`; // Use a counter to ensure unique IDs\n    setIdCounter(idCounter + 1); // Increment the counter for the next use\n\n    setNodes(prevNodes => {\n      const updatedNodes = addNodeRecursively([...prevNodes], parentName, childName, newId);\n      return updatedNodes;\n    });\n  };\n  const addNodeRecursively = (nodes, parentName, childName, newId) => {\n    return nodes.map(node => {\n      if (node.name === parentName) {\n        const newNode = {\n          id: newId,\n          name: childName,\n          description: '',\n          children: []\n        };\n        return {\n          ...node,\n          children: [...node.children, newNode]\n        };\n      } else if (node.children.length) {\n        return {\n          ...node,\n          children: addNodeRecursively(node.children, parentName, childName, newId)\n        };\n      }\n      return node;\n    });\n  };\n  const removeChild = nodeName => {\n    setNodes(prevNodes => removeNodeRecursively([...prevNodes], nodeName));\n  };\n  const removeNodeRecursively = (nodes, nodeName) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== nodeName) {\n        const filteredChildren = removeNodeRecursively(node.children, nodeName);\n        acc.push({\n          ...node,\n          children: filteredChildren\n        });\n        return acc;\n      }\n      return acc; // If the node is the one to remove, don't add it to the accumulator\n    }, []);\n  };\n  const findNode = (nodes, name) => nodes.find(node => node.name === name || findNode(node.children, name));\n\n  // Render nodes and their children recursively\n  const renderNodes = nodes => nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Holon, {\n      name: node.name,\n      onSelect: selectHolon,\n      onAdd: addChild,\n      onRemove: removeChild\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: renderNodes(node.children)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, node.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holons-container\",\n      children: renderNodes(nodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IS19g7sbv+0rOod2+fAvv8l6u3w=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","name","onSelect","onAdd","onRemove","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","_c","App","_s","nodes","setNodes","id","description","selectedHolon","setSelectedHolon","idCounter","setIdCounter","selectHolon","selectedName","searchNode","node","length","found","holon","addChild","parentName","childName","prompt","trim","alert","newId","prevNodes","updatedNodes","addNodeRecursively","map","newNode","removeChild","nodeName","removeNodeRecursively","reduce","acc","filteredChildren","push","findNode","find","renderNodes","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst Holon = ({ name, onSelect, onAdd, onRemove }) => {\n  return (\n    <div className=\"holon\" onClick={() => onSelect(name)}>\n      <div className=\"name\">{name}</div>\n      <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAdd(name); }}>+</button>\n      <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemove(name); }}>x</button>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState([\n    {\n      id: 'root',\n      name: 'Information System',\n      description: 'An Information System is a set of components for collecting, storing, and processing data.',\n      children: [],\n    }\n  ]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(1); // Adjusted to manage unique IDs for all nodes dynamically\n\n  const selectHolon = (selectedName) => {\n    // Recursive function to search for a node by name\n    const searchNode = (nodes, name) => {\n      for (let node of nodes) {\n        if (node.name === name) {\n          return node;\n        }\n        if (node.children.length > 0) {\n          const found = searchNode(node.children, name);\n          if (found) return found;\n        }\n      }\n      return null; // Return null if the node is not found\n    };\n  \n    // Use the search function to find the node\n    const holon = searchNode(nodes, selectedName);\n    if (holon) {\n      setSelectedHolon(holon); // Update the state with the found node\n    }\n  };\n  return (\n    <div className=\"app-container\">\n      <div className=\"holons-container\">\n        {/* Holons rendering logic */}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description || \"No description available.\"}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n    \n\n  const addChild = (parentName) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n\n    const newId = `node-${idCounter}`; // Use a counter to ensure unique IDs\n    setIdCounter(idCounter + 1); // Increment the counter for the next use\n\n    setNodes((prevNodes) => {\n      const updatedNodes = addNodeRecursively([...prevNodes], parentName, childName, newId);\n      return updatedNodes;\n    });\n  };\n\n  const addNodeRecursively = (nodes, parentName, childName, newId) => {\n    return nodes.map(node => {\n      if (node.name === parentName) {\n        const newNode = {\n          id: newId,\n          name: childName,\n          description: '',\n          children: []\n        };\n        return { ...node, children: [...node.children, newNode] };\n      } else if (node.children.length) {\n        return { ...node, children: addNodeRecursively(node.children, parentName, childName, newId) };\n      }\n      return node;\n    });\n  };\n\n  const removeChild = (nodeName) => {\n    setNodes(prevNodes => removeNodeRecursively([...prevNodes], nodeName));\n  };\n\n  const removeNodeRecursively = (nodes, nodeName) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== nodeName) {\n        const filteredChildren = removeNodeRecursively(node.children, nodeName);\n        acc.push({ ...node, children: filteredChildren });\n        return acc;\n      }\n      return acc; // If the node is the one to remove, don't add it to the accumulator\n    }, []);\n  };\n\n  const findNode = (nodes, name) => nodes.find(node => node.name === name || findNode(node.children, name));\n\n  // Render nodes and their children recursively\n  const renderNodes = (nodes) => nodes.map(node => (\n    <div key={node.id}>\n      <Holon\n        name={node.name}\n        onSelect={selectHolon}\n        onAdd={addChild}\n        onRemove={removeChild}\n      />\n      {node.children.length > 0 && (\n        <div className=\"children\">\n          {renderNodes(node.children)}\n        </div>\n      )}\n    </div>\n  ));\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"holons-container\">\n        {renderNodes(nodes)}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrD,oBACEP,OAAA;IAAKQ,SAAS,EAAC,OAAO;IAACC,OAAO,EAAEA,CAAA,KAAMJ,QAAQ,CAACD,IAAI,CAAE;IAAAM,QAAA,gBACnDV,OAAA;MAAKQ,SAAS,EAAC,MAAM;MAAAE,QAAA,EAAEN;IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAClCd,OAAA;MAAQQ,SAAS,EAAC,YAAY;MAACC,OAAO,EAAGM,CAAC,IAAK;QAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;QAAEV,KAAK,CAACF,IAAI,CAAC;MAAE,CAAE;MAAAM,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChGd,OAAA;MAAQQ,SAAS,EAAC,eAAe;MAACC,OAAO,EAAGM,CAAC,IAAK;QAAEA,CAAC,CAACC,eAAe,CAAC,CAAC;QAAET,QAAQ,CAACH,IAAI,CAAC;MAAE,CAAE;MAAAM,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnG,CAAC;AAEV,CAAC;AAACG,EAAA,GARId,KAAK;AAUX,MAAMe,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,CACjC;IACEwB,EAAE,EAAE,MAAM;IACVlB,IAAI,EAAE,oBAAoB;IAC1BmB,WAAW,EAAE,4FAA4F;IACzGb,QAAQ,EAAE;EACZ,CAAC,CACF,CAAC;EACF,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC4B,SAAS,EAAEC,YAAY,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C,MAAM8B,WAAW,GAAIC,YAAY,IAAK;IACpC;IACA,MAAMC,UAAU,GAAGA,CAACV,KAAK,EAAEhB,IAAI,KAAK;MAClC,KAAK,IAAI2B,IAAI,IAAIX,KAAK,EAAE;QACtB,IAAIW,IAAI,CAAC3B,IAAI,KAAKA,IAAI,EAAE;UACtB,OAAO2B,IAAI;QACb;QACA,IAAIA,IAAI,CAACrB,QAAQ,CAACsB,MAAM,GAAG,CAAC,EAAE;UAC5B,MAAMC,KAAK,GAAGH,UAAU,CAACC,IAAI,CAACrB,QAAQ,EAAEN,IAAI,CAAC;UAC7C,IAAI6B,KAAK,EAAE,OAAOA,KAAK;QACzB;MACF;MACA,OAAO,IAAI,CAAC,CAAC;IACf,CAAC;;IAED;IACA,MAAMC,KAAK,GAAGJ,UAAU,CAACV,KAAK,EAAES,YAAY,CAAC;IAC7C,IAAIK,KAAK,EAAE;MACTT,gBAAgB,CAACS,KAAK,CAAC,CAAC,CAAC;IAC3B;EACF,CAAC;EACD,oBACElC,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAE,QAAA,gBAC5BV,OAAA;MAAKQ,SAAS,EAAC;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAE,QAAA,EAC3Bc,aAAa,gBACZxB,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBd,OAAA;UAAAU,QAAA,GAAG,QAAM,EAACc,aAAa,CAACpB,IAAI;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCd,OAAA;UAAAU,QAAA,GAAG,eAAa,EAACc,aAAa,CAACD,WAAW,IAAI,2BAA2B;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAC9E,CAAC,gBAEHd,OAAA;QAAAU,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACrC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;EAIR,MAAMqB,QAAQ,GAAIC,UAAU,IAAK;IAC/B,MAAMC,SAAS,GAAGC,MAAM,CAAC,8BAA8B,CAAC;IACxD,IAAI,CAACD,SAAS,IAAIA,SAAS,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzCC,KAAK,CAAC,0CAA0C,CAAC;MACjD;IACF;IAEA,MAAMC,KAAK,GAAI,QAAOf,SAAU,EAAC,CAAC,CAAC;IACnCC,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE7BL,QAAQ,CAAEqB,SAAS,IAAK;MACtB,MAAMC,YAAY,GAAGC,kBAAkB,CAAC,CAAC,GAAGF,SAAS,CAAC,EAAEN,UAAU,EAAEC,SAAS,EAAEI,KAAK,CAAC;MACrF,OAAOE,YAAY;IACrB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAACxB,KAAK,EAAEgB,UAAU,EAAEC,SAAS,EAAEI,KAAK,KAAK;IAClE,OAAOrB,KAAK,CAACyB,GAAG,CAACd,IAAI,IAAI;MACvB,IAAIA,IAAI,CAAC3B,IAAI,KAAKgC,UAAU,EAAE;QAC5B,MAAMU,OAAO,GAAG;UACdxB,EAAE,EAAEmB,KAAK;UACTrC,IAAI,EAAEiC,SAAS;UACfd,WAAW,EAAE,EAAE;UACfb,QAAQ,EAAE;QACZ,CAAC;QACD,OAAO;UAAE,GAAGqB,IAAI;UAAErB,QAAQ,EAAE,CAAC,GAAGqB,IAAI,CAACrB,QAAQ,EAAEoC,OAAO;QAAE,CAAC;MAC3D,CAAC,MAAM,IAAIf,IAAI,CAACrB,QAAQ,CAACsB,MAAM,EAAE;QAC/B,OAAO;UAAE,GAAGD,IAAI;UAAErB,QAAQ,EAAEkC,kBAAkB,CAACb,IAAI,CAACrB,QAAQ,EAAE0B,UAAU,EAAEC,SAAS,EAAEI,KAAK;QAAE,CAAC;MAC/F;MACA,OAAOV,IAAI;IACb,CAAC,CAAC;EACJ,CAAC;EAED,MAAMgB,WAAW,GAAIC,QAAQ,IAAK;IAChC3B,QAAQ,CAACqB,SAAS,IAAIO,qBAAqB,CAAC,CAAC,GAAGP,SAAS,CAAC,EAAEM,QAAQ,CAAC,CAAC;EACxE,CAAC;EAED,MAAMC,qBAAqB,GAAGA,CAAC7B,KAAK,EAAE4B,QAAQ,KAAK;IACjD,OAAO5B,KAAK,CAAC8B,MAAM,CAAC,CAACC,GAAG,EAAEpB,IAAI,KAAK;MACjC,IAAIA,IAAI,CAAC3B,IAAI,KAAK4C,QAAQ,EAAE;QAC1B,MAAMI,gBAAgB,GAAGH,qBAAqB,CAAClB,IAAI,CAACrB,QAAQ,EAAEsC,QAAQ,CAAC;QACvEG,GAAG,CAACE,IAAI,CAAC;UAAE,GAAGtB,IAAI;UAAErB,QAAQ,EAAE0C;QAAiB,CAAC,CAAC;QACjD,OAAOD,GAAG;MACZ;MACA,OAAOA,GAAG,CAAC,CAAC;IACd,CAAC,EAAE,EAAE,CAAC;EACR,CAAC;EAED,MAAMG,QAAQ,GAAGA,CAAClC,KAAK,EAAEhB,IAAI,KAAKgB,KAAK,CAACmC,IAAI,CAACxB,IAAI,IAAIA,IAAI,CAAC3B,IAAI,KAAKA,IAAI,IAAIkD,QAAQ,CAACvB,IAAI,CAACrB,QAAQ,EAAEN,IAAI,CAAC,CAAC;;EAEzG;EACA,MAAMoD,WAAW,GAAIpC,KAAK,IAAKA,KAAK,CAACyB,GAAG,CAACd,IAAI,iBAC3C/B,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACG,KAAK;MACJC,IAAI,EAAE2B,IAAI,CAAC3B,IAAK;MAChBC,QAAQ,EAAEuB,WAAY;MACtBtB,KAAK,EAAE6B,QAAS;MAChB5B,QAAQ,EAAEwC;IAAY;MAAApC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACDiB,IAAI,CAACrB,QAAQ,CAACsB,MAAM,GAAG,CAAC,iBACvBhC,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAE,QAAA,EACtB8C,WAAW,CAACzB,IAAI,CAACrB,QAAQ;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACN;EAAA,GAXOiB,IAAI,CAACT,EAAE;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAYZ,CACN,CAAC;EAEF,oBACEd,OAAA;IAAKQ,SAAS,EAAC,eAAe;IAAAE,QAAA,gBAC5BV,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAE,QAAA,EAC9B8C,WAAW,CAACpC,KAAK;IAAC;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAE,QAAA,EAC3Bc,aAAa,gBACZxB,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBd,OAAA;UAAAU,QAAA,GAAG,QAAM,EAACc,aAAa,CAACpB,IAAI;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCd,OAAA;UAAAU,QAAA,GAAG,eAAa,EAACc,aAAa,CAACD,WAAW;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAC/C,CAAC,gBAEHd,OAAA;QAAAU,QAAA,EAAG;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACrC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,CA1IID,GAAG;AAAAuC,GAAA,GAAHvC,GAAG;AA4IT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAwC,GAAA;AAAAC,YAAA,CAAAzC,EAAA;AAAAyC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}