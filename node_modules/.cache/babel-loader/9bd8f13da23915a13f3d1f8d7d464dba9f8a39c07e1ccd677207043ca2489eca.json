{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\n// API utility functions for interacting with the backend\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fetchNodes = async () => {\n  const response = await fetch('/nodes');\n  return response.json();\n};\nconst addNode = async node => {\n  const response = await fetch('/nodes', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(node)\n  });\n  return response.json();\n};\nconst removeNode = async id => {\n  await fetch(`/nodes/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n// Holon component representing each node in the tree\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n// Main App component\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState(null);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n\n  // Fetch nodes from the backend when component mounts\n  useEffect(() => {\n    fetchNodes().then(setNodes);\n  }, []);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = async parentNode => {\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const onRemoveNode = async nodeId => {\n    await removeNode(nodeId);\n    await fetchNodes().then(setNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    setSelectedHolon({\n      id: 'root',\n      name: '',\n      children: [nodes]\n    });\n    setNodeType('parent');\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n    setModalStep(2);\n  };\n  const handleSubmit = async () => {\n    const newNode = {\n      name: nodeName,\n      parentId: nodeType === 'child' ? selectedHolon.id : null,\n      children: []\n    };\n    await addNode(newNode);\n    await fetchNodes().then(setNodes);\n    handleModalClose();\n  };\n  if (!nodes) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: node => setSelectedHolon(node),\n          isSelected: node => selectedHolon && node.id === selectedHolon.id,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: \"Select a button below to add the node you need\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Enter the name for the Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: modalStep === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleNodeTypeSelection('child'),\n            children: \"Child-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleNodeTypeSelection('parent'),\n            children: \"Parent-Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"3PLiYNW7UZigufg/P30lfF/Yg+s=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchNodes","response","fetch","json","addNode","node","method","headers","body","JSON","stringify","removeNode","id","Holon","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","child","_c","App","_s","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","then","handleModalClose","handleModalShow","parentNode","nodeId","handleNodeTypeSelection","type","handleSubmit","newNode","parentId","console","log","lineWidth","lineColor","lineBorderRadius","description","show","onHide","Header","closeButton","Title","Body","style","textAlign","Group","controlId","Label","Control","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\n// API utility functions for interacting with the backend\nconst fetchNodes = async () => {\n  const response = await fetch('/nodes');\n  return response.json();\n};\n\nconst addNode = async (node) => {\n  const response = await fetch('/nodes', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(node)\n  });\n  return response.json();\n};\n\nconst removeNode = async (id) => {\n  await fetch(`/nodes/${id}`, {\n    method: 'DELETE'\n  });\n};\n\n// Holon component representing each node in the tree\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n    const handleActionClick = (e, action) => {\n        e.stopPropagation();\n        action();\n    };\n\n    const selected = isSelected(node);\n\n    return (\n        <TreeNode label={\n            <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n                <div className=\"name\">{node.name}</div>\n                <div className=\"buttons\">\n                    <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>+</button>\n                    <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n                </div>\n            </div>\n        }>\n            {node.children && node.children.map(child => (\n                <Holon\n                    key={child.id}\n                    node={child}\n                    onAddChild={onAddChild}\n                    onRemoveNode={onRemoveNode}\n                    onSelectNode={onSelectNode}\n                    isSelected={isSelected}\n                    addNewRoot={addNewRoot}\n                />\n            ))}\n        </TreeNode>\n    );\n};\n\n// Main App component\nconst App = () => {\n    const [nodes, setNodes] = useState(null);\n    const [selectedHolon, setSelectedHolon] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [modalStep, setModalStep] = useState(1);\n    const [nodeType, setNodeType] = useState('');\n    const [nodeName, setNodeName] = useState('');\n\n    // Fetch nodes from the backend when component mounts\n    useEffect(() => {\n      fetchNodes().then(setNodes);\n    }, []);\n\n    const handleModalClose = () => {\n        setShowModal(false);\n        setModalStep(1);\n        setNodeName('');\n    };\n\n    const handleModalShow = () => {\n        setShowModal(true);\n    };\n\n    const onAddChild = async (parentNode) => {\n        setSelectedHolon(parentNode);\n        handleModalShow();\n    };\n\n    const onRemoveNode = async (nodeId) => {\n        await removeNode(nodeId);\n        await fetchNodes().then(setNodes);\n        setSelectedHolon(null);\n    };\n\n    const addNewRoot = () => {\n        setSelectedHolon({ id: 'root', name: '', children: [nodes] });\n        setNodeType('parent');\n        handleModalShow();\n    };\n\n    const handleNodeTypeSelection = (type) => {\n        setNodeType(type);\n        setModalStep(2);\n    };\n\n    const handleSubmit = async () => {\n        const newNode = {\n            name: nodeName,\n            parentId: nodeType === 'child' ? selectedHolon.id : null,\n            children: []\n        };\n        await addNode(newNode);\n        await fetchNodes().then(setNodes);\n        handleModalClose();\n    };\n\n    if (!nodes) return <div>Loading...</div>;\n\n    return (\n        <div className=\"app-container\">\n            <div className=\"steps-bar\">\n                <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n                    <div className=\"step-circle\">1</div>\n                    <div className=\"step-label\">Structure</div>\n                </div>\n                <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n                    <div className=\"step-circle\">2</div>\n                    <div className=\"step-label\">Communication</div>\n                </div>\n            </div>\n            <div className=\"content-area\">\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n                    <Holon\n                        node={nodes}\n                        onAddChild={onAddChild}\n                        onRemoveNode={onRemoveNode}\n                        onSelectNode={(node) => setSelectedHolon(node)}\n                        isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\n                        addNewRoot={addNewRoot}\n                    />\n                </Tree>\n                <div className=\"holon-details\">\n                    <h2>Holon Details</h2>\n                    {selectedHolon ? (\n                        <>\n                            <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n                            <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n                        </>\n                    ) : (\n                        <p className='no-selection'>No Selection</p>\n                    )}\n                </div>\n            </div>\n            <Modal show={showModal} onHide={handleModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{modalStep === 1 ? 'Select Node Type' : 'Enter Node Name'}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {modalStep === 1 ? (\n                        <p style={{ textAlign: 'center' }}>\n                            Select a button below to add the node you need\n                        </p>\n                    ) : (\n                        <Form>\n                            <Form.Group controlId=\"formNodeName\">\n                                <Form.Label>Enter the name for the Node</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n                            </Form.Group>\n                        </Form>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    {modalStep === 1 ? (\n                        <>\n                            <Button variant=\"secondary\" onClick={() => handleNodeTypeSelection('child')}>Child-Node</Button>\n                            <Button variant=\"primary\" onClick={() => handleNodeTypeSelection('parent')}>Parent-Node</Button>\n                        </>\n                    ) : (\n                        <Button variant=\"primary\" onClick={handleSubmit}>\n                            Save Changes\n                        </Button>\n                    )}\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}