{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected,\n  setSelectedHolon\n}) => {\n  _s();\n  const [isOrigin, setIsOrigin] = useState(false);\n  const handleNodeClick = () => {\n    setSelectedHolon(node);\n    onSelectNode(node);\n  };\n  const handleAddClick = e => {\n    e.stopPropagation();\n    setSelectedHolon(node);\n    setIsOrigin(true);\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''}`,\n      onClick: handleNodeClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddClick,\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      setSelectedHolon: setSelectedHolon\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Holon, \"llJGoOCB3RFg8v0TRnVZk/1mnPg=\");\n_c = Holon;\nconst CommunicationPage = () => {\n  _s2();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const handleSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        lineStyle: \"dashed\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: initialNodes,\n          onSelectNode: handleSelectNode,\n          isSelected: node => selectedHolon && node.id === selectedHolon.id,\n          setSelectedHolon: setSelectedHolon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s2(CommunicationPage, \"Nn7nM7EeqgW4tP0X7ChwiziNFiM=\");\n_c2 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","FontAwesomeIcon","faPlus","jsxDEV","_jsxDEV","Holon","node","onSelectNode","isSelected","setSelectedHolon","_s","isOrigin","setIsOrigin","handleNodeClick","handleAddClick","e","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","map","child","id","_c","CommunicationPage","_s2","initialNodes","description","selectedHolon","handleSelectNode","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onSelectNode, isSelected, setSelectedHolon }) => {\r\n    const [isOrigin, setIsOrigin] = useState(false);\r\n\r\n    const handleNodeClick = () => {\r\n        setSelectedHolon(node);\r\n        onSelectNode(node);\r\n    };\r\n\r\n    const handleAddClick = (e) => {\r\n        e.stopPropagation();\r\n        setSelectedHolon(node);\r\n        setIsOrigin(true);\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''} ${isOrigin ? 'origin' : ''}`} onClick={handleNodeClick}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <button className=\"add-button\" onClick={handleAddClick}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                    setSelectedHolon={setSelectedHolon}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n    const initialNodes = {\r\n        id: 'root',\r\n        name: 'Information System',\r\n        description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\r\n        children: [\r\n            {\r\n                id: 'Stakeholder',\r\n                name: 'Stakeholder',\r\n                description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\r\n                children: [],\r\n            },\r\n            {\r\n                id: 'Infrastructure',\r\n                name: 'Infrastructure',\r\n                description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\r\n                children: [],\r\n            }\r\n        ],\r\n    };\r\n\r\n    const [selectedHolon, setSelectedHolon] = useState(null);\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedHolon(node);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"content-area\">\r\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                    <Holon\r\n                        node={initialNodes}\r\n                        onSelectNode={handleSelectNode}\r\n                        isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\r\n                        setSelectedHolon={setSelectedHolon}\r\n                    />\r\n                </Tree>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,QAAQ,QAAQ,4BAA4B;AAC3D,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAC1D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,YAAY;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMkB,eAAe,GAAGA,CAAA,KAAM;IAC1BJ,gBAAgB,CAACH,IAAI,CAAC;IACtBC,YAAY,CAACD,IAAI,CAAC;EACtB,CAAC;EAED,MAAMQ,cAAc,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,eAAe,CAAC,CAAC;IACnBP,gBAAgB,CAACH,IAAI,CAAC;IACtBM,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMK,QAAQ,GAAGT,UAAU,CAACF,IAAI,CAAC;EAEjC,oBACIF,OAAA,CAACP,QAAQ;IAACqB,KAAK,eACXd,OAAA;MAAKe,SAAS,EAAG,cAAaF,QAAQ,GAAG,UAAU,GAAG,EAAG,IAAGN,QAAQ,GAAG,QAAQ,GAAG,EAAG,EAAE;MAACS,OAAO,EAAEP,eAAgB;MAAAQ,QAAA,gBAC7GjB,OAAA;QAAKe,SAAS,EAAC,MAAM;QAAAE,QAAA,EAAEf,IAAI,CAACgB;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCtB,OAAA;QAAKe,SAAS,EAAC,SAAS;QAAAE,QAAA,eACpBjB,OAAA;UAAQe,SAAS,EAAC,YAAY;UAACC,OAAO,EAAEN,cAAe;UAAAO,QAAA,eACnDjB,OAAA,CAACH,eAAe;YAAC0B,IAAI,EAAEzB;UAAO;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;IAAAL,QAAA,EACIf,IAAI,CAACe,QAAQ,IAAIf,IAAI,CAACe,QAAQ,CAACO,GAAG,CAACC,KAAK,iBACrCzB,OAAA,CAACC,KAAK;MAEFC,IAAI,EAAEuB,KAAM;MACZtB,YAAY,EAAEA,YAAa;MAC3BC,UAAU,EAAEA,UAAW;MACvBC,gBAAgB,EAAEA;IAAiB,GAJ9BoB,KAAK,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKhB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEnB,CAAC;AAAChB,EAAA,CAtCIL,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAwCX,MAAM2B,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC5B,MAAMC,YAAY,GAAG;IACjBJ,EAAE,EAAE,MAAM;IACVR,IAAI,EAAE,oBAAoB;IAC1Ba,WAAW,EAAE,yMAAyM;IACtNd,QAAQ,EAAE,CACN;MACIS,EAAE,EAAE,aAAa;MACjBR,IAAI,EAAE,aAAa;MACnBa,WAAW,EAAE,0WAA0W;MACvXd,QAAQ,EAAE;IACd,CAAC,EACD;MACIS,EAAE,EAAE,gBAAgB;MACpBR,IAAI,EAAE,gBAAgB;MACtBa,WAAW,EAAE,kcAAkc;MAC/cd,QAAQ,EAAE;IACd,CAAC;EAET,CAAC;EAED,MAAM,CAACe,aAAa,EAAE3B,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM0C,gBAAgB,GAAI/B,IAAI,IAAK;IAC/BG,gBAAgB,CAACH,IAAI,CAAC;EAC1B,CAAC;EAED,oBACIF,OAAA;IAAKe,SAAS,EAAC,eAAe;IAAAE,QAAA,eAC1BjB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAE,QAAA,eACzBjB,OAAA,CAACR,IAAI;QAAC0C,SAAS,EAAE,KAAM;QAACC,SAAS,EAAE,MAAO;QAACC,gBAAgB,EAAE,KAAM;QAACC,SAAS,EAAE,QAAS;QAAApB,QAAA,eACpFjB,OAAA,CAACC,KAAK;UACFC,IAAI,EAAE4B,YAAa;UACnB3B,YAAY,EAAE8B,gBAAiB;UAC/B7B,UAAU,EAAGF,IAAI,IAAK8B,aAAa,IAAI9B,IAAI,CAACwB,EAAE,KAAKM,aAAa,CAACN,EAAG;UACpErB,gBAAgB,EAAEA;QAAiB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACO,GAAA,CAzCID,iBAAiB;AAAAU,GAAA,GAAjBV,iBAAiB;AA2CvB,eAAeA,iBAAiB;AAAC,IAAAD,EAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAZ,EAAA;AAAAY,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}