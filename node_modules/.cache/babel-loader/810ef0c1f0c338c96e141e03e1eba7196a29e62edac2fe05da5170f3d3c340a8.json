{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\InfraStructureReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNode from \"./CustomNode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNode\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction InfrastructureReactFlow(props) {\n  _s();\n  const [operationType, setOperationType] = useState(\"addChild\");\n  const [parentNodeId, setParentNodeId] = useState(\"\");\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const onConnect = useCallback(params => props.setEdges(eds => addEdge(params, eds)), [props.setEdges]);\n  const handleNodeClick = (event, node) => {\n    setSelectedNode(node);\n  };\n  const handleAddNodeClick = () => {\n    setIsModalOpen(true);\n  };\n  const handleAddNode = () => {\n    if (!parentNodeId || !newNodeLabel) return;\n    const newNodeId = `node-${props.nodes.length + 1}`;\n    const newNode = {\n      id: newNodeId,\n      type: \"customNode\",\n      data: {\n        label: newNodeLabel,\n        onAdd: handleAddNodeClick,\n        onDelete: handleDeleteNodeClick\n      },\n      position: {\n        x: Math.random() * 400,\n        y: Math.random() * 400\n      }\n    };\n    props.setNodes(nds => nds.concat(newNode));\n    if (operationType === \"addChild\") {\n      props.setEdges(eds => eds.concat({\n        id: `e-${parentNodeId}-${newNodeId}`,\n        source: parentNodeId,\n        target: newNodeId\n      }));\n    } else if (operationType === \"addParent\") {\n      props.setEdges(eds => eds.concat({\n        id: `e-${newNodeId}-${parentNodeId}`,\n        source: newNodeId,\n        target: parentNodeId\n      }));\n    }\n    setParentNodeId(\"\");\n    setNewNodeLabel(\"\");\n    setIsModalOpen(false);\n  };\n  const handleDeleteNodeClick = nodeId => {\n    props.setNodes(nds => nds.filter(node => node.id !== nodeId));\n    props.setEdges(eds => eds.filter(edge => edge.source !== nodeId && edge.target !== nodeId));\n  };\n  const handleDeleteEdgeClick = edgeId => {\n    props.setEdges(eds => eds.filter(edge => edge.id !== edgeId));\n  };\n  const getNodeWithoutParent = () => {\n    const childNodes = new Set(props.edges.map(edge => edge.target));\n    return props.nodes.filter(node => !childNodes.has(node.id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10\",\n      style: {\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: props.nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            onAdd: handleAddNodeClick,\n            onDelete: handleDeleteNodeClick\n          }\n        })),\n        edges: props.edges,\n        onNodesChange: props.onNodesChange,\n        onEdgesChange: props.onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        },\n        onNodeClick: handleNodeClick,\n        edgesUpdatable: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-4\",\n      style: {\n        padding: \"10px\",\n        borderLeft: \"1px solid #ccc\"\n      },\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeName1\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nodeName1\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            onChange: e => props.setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                label: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"nodeDescription\",\n            className: \"form-control\",\n            placeholder: \"An example description...\",\n            value: selectedNode.data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      style: {\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n        },\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"450px\",\n          height: \"auto\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title my-2\",\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"operationTypeSelect\",\n            children: \"Operation Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"operationTypeSelect\",\n            className: \"form-control\",\n            value: operationType,\n            onChange: e => setOperationType(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"addChild\",\n              children: \"Add Child Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"addParent\",\n              children: \"Add Parent Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"parentNodeSelect\",\n            children: operationType === \"addChild\" ? \"Parent Node\" : \"Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"parentNodeSelect\",\n            className: \"form-control\",\n            value: parentNodeId,\n            onChange: e => setParentNodeId(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Node\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), props.nodes.map(node => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: node.id,\n              children: node.data.label\n            }, node.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newNodeLabel1\",\n            children: \"New Node Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newNodeLabel1\",\n            className: \"form-control\",\n            placeholder: \"New Node Label\",\n            value: newNodeLabel,\n            onChange: e => setNewNodeLabel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary mx-2\",\n          onClick: handleAddNode,\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary mx-2\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(InfrastructureReactFlow, \"Krx+7UDHEoE8ifYHcMpOryVzgmw=\");\n_c = InfrastructureReactFlow;\nexport default InfrastructureReactFlow;\nvar _c;\n$RefreshReg$(_c, \"InfrastructureReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","Modal","CustomNode","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","customNode","fitViewOptions","padding","setAppElement","InfrastructureReactFlow","props","_s","operationType","setOperationType","parentNodeId","setParentNodeId","newNodeLabel","setNewNodeLabel","selectedNode","setSelectedNode","isModalOpen","setIsModalOpen","onConnect","params","setEdges","eds","handleNodeClick","event","node","handleAddNodeClick","handleAddNode","newNodeId","nodes","length","newNode","id","type","data","label","onAdd","onDelete","handleDeleteNodeClick","position","x","Math","random","y","setNodes","nds","concat","source","target","nodeId","filter","edge","handleDeleteEdgeClick","edgeId","getNodeWithoutParent","childNodes","Set","edges","map","has","className","style","display","height","children","onNodesChange","onEdgesChange","fitView","width","onNodeClick","edgesUpdatable","fileName","_jsxFileName","lineNumber","columnNumber","borderLeft","htmlFor","value","onChange","e","placeholder","description","isOpen","onRequestClose","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","onClick","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/InfraStructureReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNode from \"./CustomNode\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNode,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction InfrastructureReactFlow(props) {\r\n  const [operationType, setOperationType] = useState(\"addChild\");\r\n  const [parentNodeId, setParentNodeId] = useState(\"\");\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => props.setEdges((eds) => addEdge(params, eds)),\r\n    [props.setEdges]\r\n  );\r\n\r\n  const handleNodeClick = (event, node) => {\r\n    setSelectedNode(node);\r\n  };\r\n\r\n  const handleAddNodeClick = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleAddNode = () => {\r\n    if (!parentNodeId || !newNodeLabel) return;\r\n\r\n    const newNodeId = `node-${props.nodes.length + 1}`;\r\n    const newNode = {\r\n      id: newNodeId,\r\n      type: \"customNode\",\r\n      data: {\r\n        label: newNodeLabel,\r\n        onAdd: handleAddNodeClick,\r\n        onDelete: handleDeleteNodeClick,\r\n      },\r\n      position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n    };\r\n\r\n    props.setNodes((nds) => nds.concat(newNode));\r\n\r\n    if (operationType === \"addChild\") {\r\n      props.setEdges((eds) =>\r\n        eds.concat({\r\n          id: `e-${parentNodeId}-${newNodeId}`,\r\n          source: parentNodeId,\r\n          target: newNodeId,\r\n        })\r\n      );\r\n    } else if (operationType === \"addParent\") {\r\n      props.setEdges((eds) =>\r\n        eds.concat({\r\n          id: `e-${newNodeId}-${parentNodeId}`,\r\n          source: newNodeId,\r\n          target: parentNodeId,\r\n        })\r\n      );\r\n    }\r\n\r\n    setParentNodeId(\"\");\r\n    setNewNodeLabel(\"\");\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteNodeClick = (nodeId) => {\r\n    props.setNodes((nds) => nds.filter((node) => node.id !== nodeId));\r\n    props.setEdges((eds) =>\r\n      eds.filter((edge) => edge.source !== nodeId && edge.target !== nodeId)\r\n    );\r\n  };\r\n\r\n  const handleDeleteEdgeClick = (edgeId) => {\r\n    props.setEdges((eds) => eds.filter((edge) => edge.id !== edgeId));\r\n  };\r\n\r\n  const getNodeWithoutParent = () => {\r\n    const childNodes = new Set(props.edges.map((edge) => edge.target));\r\n    return props.nodes.filter((node) => !childNodes.has(node.id));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\" }}\r\n    >\r\n      <div className=\"col-10\" style={{ height: \"100%\" }}>\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={props.nodes.map((node) => ({\r\n            ...node,\r\n            data: {\r\n              ...node.data,\r\n              onAdd: handleAddNodeClick,\r\n              onDelete: handleDeleteNodeClick,\r\n            },\r\n          }))}\r\n          edges={props.edges}\r\n          onNodesChange={props.onNodesChange}\r\n          onEdgesChange={props.onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          style={{ width: \"100%\", height: \"90%\" }}\r\n          onNodeClick={handleNodeClick}\r\n          edgesUpdatable={false}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"col-4\"\r\n        style={{ padding: \"10px\", borderLeft: \"1px solid #ccc\" }}\r\n      >\r\n        {selectedNode ? (\r\n          <>\r\n            <h3>Holon Details</h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nodeName1\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nodeName1\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                onChange={(e) =>\r\n                  props.setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, label: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nodeDescription\">Description</label>\r\n              <textarea\r\n                id=\"nodeDescription\"\r\n                className=\"form-control\"\r\n                placeholder=\"An example description...\"\r\n                value={selectedNode.data.description}\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>No Selection</div>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        isOpen={isModalOpen}\r\n        onRequestClose={() => setIsModalOpen(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n          content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"450px\",\r\n            height: \"auto\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title my-2\">Add Node</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"operationTypeSelect\">Operation Type</label>\r\n            <select\r\n              id=\"operationTypeSelect\"\r\n              className=\"form-control\"\r\n              value={operationType}\r\n              onChange={(e) => setOperationType(e.target.value)}\r\n            >\r\n              <option value=\"addChild\">Add Child Node</option>\r\n              <option value=\"addParent\">Add Parent Node</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"parentNodeSelect\">\r\n              {operationType === \"addChild\" ? \"Parent Node\" : \"Child Node\"}\r\n            </label>\r\n            <select\r\n              id=\"parentNodeSelect\"\r\n              className=\"form-control\"\r\n              value={parentNodeId}\r\n              onChange={(e) => setParentNodeId(e.target.value)}\r\n            >\r\n              <option value=\"\">Select Node</option>\r\n              {props.nodes.map((node) => (\r\n                <option key={node.id} value={node.id}>\r\n                  {node.data.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newNodeLabel1\">New Node Label</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newNodeLabel1\"\r\n              className=\"form-control\"\r\n              placeholder=\"New Node Label\"\r\n              value={newNodeLabel}\r\n              onChange={(e) => setNewNodeLabel(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2\"\r\n            onClick={handleAddNode}\r\n          >\r\n            Add Node\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary mx-2\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfrastructureReactFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}