{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst initNodes = [{\n  id: \"1a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 1\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}, {\n  id: \"2a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 2\"\n  },\n  position: {\n    x: 100,\n    y: 120\n  }\n}, {\n  id: \"3a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 3\"\n  },\n  position: {\n    x: 400,\n    y: 120\n  }\n}];\nconst initEdges = [{\n  id: \"e1-2\",\n  source: \"1a\",\n  target: \"2a\"\n}, {\n  id: \"e1-3\",\n  source: \"1a\",\n  target: \"3a\"\n}];\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [parentNodeId, setParentNodeId] = useState(\"\");\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNode, setDestinationNode] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const findPath = (sourceId, targetId) => {\n    const visited = new Set();\n    const queue = [[sourceId]];\n    while (queue.length > 0) {\n      const path = queue.shift();\n      const node = path[path.length - 1];\n      if (node === targetId) {\n        return path;\n      }\n      if (!visited.has(node)) {\n        visited.add(node);\n        edges.filter(edge => edge.source === node || edge.target === node).forEach(edge => {\n          const nextNode = edge.source === node ? edge.target : edge.source;\n          queue.push([...path, nextNode]);\n        });\n      }\n    }\n    return [];\n  };\n  const handleNodeClick = id => {\n    let node = nodes.find(element => element.id == id);\n    console.log(id);\n    console.log(props.nodes);\n    if (!sourceNode) {\n      setSelectedNode(null);\n      setSourceNode(node);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n));\n    } else if (!destinationNode) {\n      setDestinationNode(node);\n      setSelectedNode(node);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid green\"\n        }\n      } : n));\n      const path = findPath(sourceNode.id, node.id);\n      setEdges(eds => eds.map(edge => {\n        const isInPath = path.includes(edge.source) && path.includes(edge.target);\n        return {\n          ...edge,\n          animated: isInPath,\n          style: {\n            stroke: isInPath ? \"green\" : \"black\"\n          }\n        };\n      }));\n    } else {\n      setSourceNode(node);\n      setDestinationNode(null);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : {\n        ...n,\n        style: {\n          border: \"none\"\n        }\n      }));\n      setEdges(eds => eds.map(edge => ({\n        ...edge,\n        animated: false,\n        style: {\n          stroke: \"black\"\n        }\n      })));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            nodeClicked: handleNodeClick\n          }\n        })),\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        }\n        // onNodeClick={handleNodeClick}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      style: {\n        padding: \"10px\",\n        borderLeft: \"1px solid #ccc\"\n      },\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameofNode\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nameofNode\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                label: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"nodeDescription\",\n            className: \"form-control\",\n            placeholder: \"An example description...\",\n            value: selectedNode.data.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeInfoFlows\",\n            children: \"Information Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nodeInfoFlows\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newNodeLabel\",\n            children: \"New Node Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newNodeLabel\",\n            className: \"form-control\",\n            placeholder: \"New Node Label\",\n            value: newNodeLabel,\n            onChange: e => setNewNodeLabel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"gjr/HHK75mLRGk++DTJ2mfRjH+0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","customNode","initNodes","id","type","data","label","position","x","y","initEdges","source","target","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","parentNodeId","setParentNodeId","newNodeLabel","setNewNodeLabel","selectedNode","setSelectedNode","isModalOpen","setIsModalOpen","sourceNode","setSourceNode","destinationNode","setDestinationNode","onConnect","params","eds","findPath","sourceId","targetId","visited","Set","queue","length","path","shift","node","has","add","filter","edge","forEach","nextNode","push","handleNodeClick","find","element","console","log","nds","map","n","style","border","isInPath","includes","animated","stroke","className","display","height","children","fileName","_jsxFileName","lineNumber","columnNumber","nodeClicked","fitView","width","borderLeft","htmlFor","value","onChange","e","placeholder","description","readOnly","isOpen","onRequestClose","onClick","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst initNodes = [\r\n  {\r\n    id: \"1a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 1\" },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n  {\r\n    id: \"2a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 2\" },\r\n    position: { x: 100, y: 120 },\r\n  },\r\n  {\r\n    id: \"3a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 3\" },\r\n    position: { x: 400, y: 120 },\r\n  },\r\n];\r\n\r\nconst initEdges = [\r\n  { id: \"e1-2\", source: \"1a\", target: \"2a\" },\r\n  { id: \"e1-3\", source: \"1a\", target: \"3a\" },\r\n];\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [parentNodeId, setParentNodeId] = useState(\"\");\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNode, setDestinationNode] = useState(null);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const findPath = (sourceId, targetId) => {\r\n    const visited = new Set();\r\n    const queue = [[sourceId]];\r\n\r\n    while (queue.length > 0) {\r\n      const path = queue.shift();\r\n      const node = path[path.length - 1];\r\n\r\n      if (node === targetId) {\r\n        return path;\r\n      }\r\n\r\n      if (!visited.has(node)) {\r\n        visited.add(node);\r\n        edges\r\n          .filter((edge) => edge.source === node || edge.target === node)\r\n          .forEach((edge) => {\r\n            const nextNode = edge.source === node ? edge.target : edge.source;\r\n            queue.push([...path, nextNode]);\r\n          });\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const handleNodeClick = (id) => {\r\n    let node = nodes.find((element) => element.id == id);\r\n    console.log(id);\r\n    console.log(props.nodes);\r\n    if (!sourceNode) {\r\n      setSelectedNode(null);\r\n      setSourceNode(node);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n        )\r\n      );\r\n    } else if (!destinationNode) {\r\n      setDestinationNode(node);\r\n      setSelectedNode(node);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid green\" } } : n\r\n        )\r\n      );\r\n      const path = findPath(sourceNode.id, node.id);\r\n      setEdges((eds) =>\r\n        eds.map((edge) => {\r\n          const isInPath =\r\n            path.includes(edge.source) && path.includes(edge.target);\r\n          return {\r\n            ...edge,\r\n            animated: isInPath,\r\n            style: { stroke: isInPath ? \"green\" : \"black\" },\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      setSourceNode(node);\r\n      setDestinationNode(null);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id\r\n            ? { ...n, style: { border: \"2px solid blue\" } }\r\n            : { ...n, style: { border: \"none\" } }\r\n        )\r\n      );\r\n      setEdges((eds) =>\r\n        eds.map((edge) => ({\r\n          ...edge,\r\n          animated: false,\r\n          style: { stroke: \"black\" },\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\" }}\r\n    >\r\n      <div className=\"col-9\" style={{ height: \"100%\" }}>\r\n        <div className=\"mb-3\">\r\n          <h3>Add Node</h3>\r\n        </div>\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes.map((node) => ({\r\n            ...node,\r\n            data: {\r\n              ...node.data,\r\n              nodeClicked: handleNodeClick,\r\n            },\r\n          }))}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          style={{ width: \"100%\", height: \"90%\" }}\r\n          // onNodeClick={handleNodeClick}\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"col-3\"\r\n        style={{ padding: \"10px\", borderLeft: \"1px solid #ccc\" }}\r\n      >\r\n        {selectedNode ? (\r\n          <>\r\n            <h3>Holon Details</h3>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nameofNode\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nameofNode\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, label: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nodeDescription\">Description</label>\r\n              <textarea\r\n                id=\"nodeDescription\"\r\n                className=\"form-control\"\r\n                placeholder=\"An example description...\"\r\n                value={selectedNode.data.description}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nodeInfoFlows\">Information Flows</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nodeInfoFlows\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                readOnly\r\n              />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div>No Selection</div>\r\n        )}\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">Add Node</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"newNodeLabel\">New Node Label</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newNodeLabel\"\r\n              className=\"form-control\"\r\n              placeholder=\"New Node Label\"\r\n              value={newNodeLabel}\r\n              onChange={(e) => setNewNodeLabel(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,IAAIC,OAAO,EAAEC,aAAa,EAAEC,aAAa,QAAQ,WAAW;AAC5E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAC7C,OAAO,cAAc;AACrB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAEN;AACd,CAAC;AAED,MAAMO,SAAS,GAAG,CAChB;EACEC,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC;EACzBC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAE;AAC3B,CAAC,EACD;EACEN,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC;EACzBC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAC7B,CAAC,EACD;EACEN,EAAE,EAAE,IAAI;EACRC,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAS,CAAC;EACzBC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI;AAC7B,CAAC,CACF;AAED,MAAMC,SAAS,GAAG,CAChB;EAAEP,EAAE,EAAE,MAAM;EAAEQ,MAAM,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,EAC1C;EAAET,EAAE,EAAE,MAAM;EAAEQ,MAAM,EAAE,IAAI;EAAEC,MAAM,EAAE;AAAK,CAAC,CAC3C;AAED,MAAMC,cAAc,GAAG;EAAEC,OAAO,EAAE;AAAI,CAAC;AAEvCpB,KAAK,CAACqB,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG7B,aAAa,CAACyB,KAAK,CAACE,KAAK,CAAC;EACnE,MAAM,CAACG,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAG/B,aAAa,CAACwB,KAAK,CAACK,KAAK,CAAC;EACnE,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACsC,YAAY,EAAEC,eAAe,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAG7C,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC8C,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMgD,SAAS,GAAGjD,WAAW,CAC1BkD,MAAM,IAAKf,QAAQ,CAAEgB,GAAG,IAAKhD,OAAO,CAAC+C,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAAChB,QAAQ,CACX,CAAC;EAED,MAAMiB,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACvC,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzB,MAAMC,KAAK,GAAG,CAAC,CAACJ,QAAQ,CAAC,CAAC;IAE1B,OAAOI,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC;MAC1B,MAAMC,IAAI,GAAGF,IAAI,CAACA,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;MAElC,IAAIG,IAAI,KAAKP,QAAQ,EAAE;QACrB,OAAOK,IAAI;MACb;MAEA,IAAI,CAACJ,OAAO,CAACO,GAAG,CAACD,IAAI,CAAC,EAAE;QACtBN,OAAO,CAACQ,GAAG,CAACF,IAAI,CAAC;QACjB3B,KAAK,CACF8B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAAC1C,MAAM,KAAKsC,IAAI,IAAII,IAAI,CAACzC,MAAM,KAAKqC,IAAI,CAAC,CAC9DK,OAAO,CAAED,IAAI,IAAK;UACjB,MAAME,QAAQ,GAAGF,IAAI,CAAC1C,MAAM,KAAKsC,IAAI,GAAGI,IAAI,CAACzC,MAAM,GAAGyC,IAAI,CAAC1C,MAAM;UACjEkC,KAAK,CAACW,IAAI,CAAC,CAAC,GAAGT,IAAI,EAAEQ,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC;MACN;IACF;IACA,OAAO,EAAE;EACX,CAAC;EAED,MAAME,eAAe,GAAItD,EAAE,IAAK;IAC9B,IAAI8C,IAAI,GAAG9B,KAAK,CAACuC,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACxD,EAAE,IAAIA,EAAE,CAAC;IACpDyD,OAAO,CAACC,GAAG,CAAC1D,EAAE,CAAC;IACfyD,OAAO,CAACC,GAAG,CAAC5C,KAAK,CAACE,KAAK,CAAC;IACxB,IAAI,CAACc,UAAU,EAAE;MACfH,eAAe,CAAC,IAAI,CAAC;MACrBI,aAAa,CAACe,IAAI,CAAC;MACnB7B,QAAQ,CAAE0C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRA,CAAC,CAAC7D,EAAE,KAAK8C,IAAI,CAAC9C,EAAE,GAAG;QAAE,GAAG6D,CAAC;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAiB;MAAE,CAAC,GAAGF,CACrE,CACF,CAAC;IACH,CAAC,MAAM,IAAI,CAAC7B,eAAe,EAAE;MAC3BC,kBAAkB,CAACa,IAAI,CAAC;MACxBnB,eAAe,CAACmB,IAAI,CAAC;MACrB7B,QAAQ,CAAE0C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRA,CAAC,CAAC7D,EAAE,KAAK8C,IAAI,CAAC9C,EAAE,GAAG;QAAE,GAAG6D,CAAC;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAkB;MAAE,CAAC,GAAGF,CACtE,CACF,CAAC;MACD,MAAMjB,IAAI,GAAGP,QAAQ,CAACP,UAAU,CAAC9B,EAAE,EAAE8C,IAAI,CAAC9C,EAAE,CAAC;MAC7CoB,QAAQ,CAAEgB,GAAG,IACXA,GAAG,CAACwB,GAAG,CAAEV,IAAI,IAAK;QAChB,MAAMc,QAAQ,GACZpB,IAAI,CAACqB,QAAQ,CAACf,IAAI,CAAC1C,MAAM,CAAC,IAAIoC,IAAI,CAACqB,QAAQ,CAACf,IAAI,CAACzC,MAAM,CAAC;QAC1D,OAAO;UACL,GAAGyC,IAAI;UACPgB,QAAQ,EAAEF,QAAQ;UAClBF,KAAK,EAAE;YAAEK,MAAM,EAAEH,QAAQ,GAAG,OAAO,GAAG;UAAQ;QAChD,CAAC;MACH,CAAC,CACH,CAAC;IACH,CAAC,MAAM;MACLjC,aAAa,CAACe,IAAI,CAAC;MACnBb,kBAAkB,CAAC,IAAI,CAAC;MACxBhB,QAAQ,CAAE0C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRA,CAAC,CAAC7D,EAAE,KAAK8C,IAAI,CAAC9C,EAAE,GACZ;QAAE,GAAG6D,CAAC;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAiB;MAAE,CAAC,GAC7C;QAAE,GAAGF,CAAC;QAAEC,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO;MAAE,CACxC,CACF,CAAC;MACD3C,QAAQ,CAAEgB,GAAG,IACXA,GAAG,CAACwB,GAAG,CAAEV,IAAI,KAAM;QACjB,GAAGA,IAAI;QACPgB,QAAQ,EAAE,KAAK;QACfJ,KAAK,EAAE;UAAEK,MAAM,EAAE;QAAQ;MAC3B,CAAC,CAAC,CACJ,CAAC;IACH;EACF,CAAC;EAED,oBACEzE,OAAA;IACE0E,SAAS,EAAC,iBAAiB;IAC3BN,KAAK,EAAE;MAAEO,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE5C7E,OAAA;MAAK0E,SAAS,EAAC,OAAO;MAACN,KAAK,EAAE;QAAEQ,MAAM,EAAE;MAAO,CAAE;MAAAC,QAAA,gBAC/C7E,OAAA;QAAK0E,SAAS,EAAC,MAAM;QAAAG,QAAA,eACnB7E,OAAA;UAAA6E,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACNjF,OAAA,CAACP,SAAS;QACRU,SAAS,EAAEA,SAAU;QACrBmB,KAAK,EAAEA,KAAK,CAAC4C,GAAG,CAAEd,IAAI,KAAM;UAC1B,GAAGA,IAAI;UACP5C,IAAI,EAAE;YACJ,GAAG4C,IAAI,CAAC5C,IAAI;YACZ0E,WAAW,EAAEtB;UACf;QACF,CAAC,CAAC,CAAE;QACJnC,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,aAAc;QAC7BG,aAAa,EAAEA,aAAc;QAC7Ba,SAAS,EAAEA,SAAU;QACrB2C,OAAO;QACPnE,cAAc,EAAEA,cAAe;QAC/BoD,KAAK,EAAE;UAAEgB,KAAK,EAAE,MAAM;UAAER,MAAM,EAAE;QAAM;QACtC;MAAA;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjF,OAAA;MACE0E,SAAS,EAAC,OAAO;MACjBN,KAAK,EAAE;QAAEnD,OAAO,EAAE,MAAM;QAAEoE,UAAU,EAAE;MAAiB,CAAE;MAAAR,QAAA,EAExD7C,YAAY,gBACXhC,OAAA,CAAAE,SAAA;QAAA2E,QAAA,gBACE7E,OAAA;UAAA6E,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtBjF,OAAA;UAAK0E,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACzB7E,OAAA;YAAOsF,OAAO,EAAC,YAAY;YAAAT,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxCjF,OAAA;YACEO,IAAI,EAAC,MAAM;YACXD,EAAE,EAAC,YAAY;YACfoE,SAAS,EAAC,cAAc;YACxBa,KAAK,EAAEvD,YAAY,CAACxB,IAAI,CAACC,KAAM;YAC/B+E,QAAQ,EAAGC,CAAC,IACVlE,QAAQ,CAAE0C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEd,IAAI,IACXA,IAAI,CAAC9C,EAAE,KAAK0B,YAAY,CAAC1B,EAAE,GACvB;cACE,GAAG8C,IAAI;cACP5C,IAAI,EAAE;gBAAE,GAAG4C,IAAI,CAAC5C,IAAI;gBAAEC,KAAK,EAAEgF,CAAC,CAAC1E,MAAM,CAACwE;cAAM;YAC9C,CAAC,GACDnC,IACN,CACF;UACD;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjF,OAAA;UAAK0E,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACzB7E,OAAA;YAAOsF,OAAO,EAAC,iBAAiB;YAAAT,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDjF,OAAA;YACEM,EAAE,EAAC,iBAAiB;YACpBoE,SAAS,EAAC,cAAc;YACxBgB,WAAW,EAAC,2BAA2B;YACvCH,KAAK,EAAEvD,YAAY,CAACxB,IAAI,CAACmF;UAAY;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNjF,OAAA;UAAK0E,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACzB7E,OAAA;YAAOsF,OAAO,EAAC,eAAe;YAAAT,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxDjF,OAAA;YACEO,IAAI,EAAC,MAAM;YACXD,EAAE,EAAC,eAAe;YAClBoE,SAAS,EAAC,cAAc;YACxBa,KAAK,EAAEvD,YAAY,CAACxB,IAAI,CAACC,KAAM;YAC/BmF,QAAQ;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,eACN,CAAC,gBAEHjF,OAAA;QAAA6E,QAAA,EAAK;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IACvB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNjF,OAAA,CAACH,KAAK;MAACgG,MAAM,EAAE3D,WAAY;MAAC4D,cAAc,EAAEA,CAAA,KAAM3D,cAAc,CAAC,KAAK,CAAE;MAAA0C,QAAA,gBACtE7E,OAAA;QAAK0E,SAAS,EAAC,cAAc;QAAAG,QAAA,gBAC3B7E,OAAA;UAAI0E,SAAS,EAAC,aAAa;UAAAG,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzCjF,OAAA;UACEO,IAAI,EAAC,QAAQ;UACbmE,SAAS,EAAC,OAAO;UACjBqB,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,KAAK,CAAE;UAAA0C,QAAA,eAErC7E,OAAA;YAAA6E,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNjF,OAAA;QAAK0E,SAAS,EAAC,YAAY;QAAAG,QAAA,eACzB7E,OAAA;UAAK0E,SAAS,EAAC,YAAY;UAAAG,QAAA,gBACzB7E,OAAA;YAAOsF,OAAO,EAAC,cAAc;YAAAT,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpDjF,OAAA;YACEO,IAAI,EAAC,MAAM;YACXD,EAAE,EAAC,cAAc;YACjBoE,SAAS,EAAC,cAAc;YACxBgB,WAAW,EAAC,gBAAgB;YAC5BH,KAAK,EAAEzD,YAAa;YACpB0D,QAAQ,EAAGC,CAAC,IAAK1D,eAAe,CAAC0D,CAAC,CAAC1E,MAAM,CAACwE,KAAK;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNjF,OAAA;QAAK0E,SAAS,EAAC,cAAc;QAAAG,QAAA,eAC3B7E,OAAA;UACEO,IAAI,EAAC,QAAQ;UACbmE,SAAS,EAAC,mBAAmB;UAC7BqB,OAAO,EAAEA,CAAA,KAAM5D,cAAc,CAAC,KAAK,CAAE;UAAA0C,QAAA,EACtC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAC5D,EAAA,CAhNQF,sBAAsB;EAAA,QACYxB,aAAa,EACbC,aAAa;AAAA;AAAAoG,EAAA,GAF/C7E,sBAAsB;AAkN/B,eAAeA,sBAAsB;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}