{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { ReactFlowProvider, addEdge, Controls, Background } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport 'react-flow-renderer/dist/theme-default.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Alert;\nconst initialElements = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Information System'\n  },\n  position: {\n    x: 250,\n    y: 0\n  }\n}, {\n  id: '2',\n  data: {\n    label: 'Stakeholder'\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: '3',\n  data: {\n    label: 'Infrastructure'\n  },\n  position: {\n    x: 400,\n    y: 100\n  }\n}, {\n  id: 'e1-2',\n  source: '1',\n  target: '2',\n  type: 'default',\n  animated: false,\n  style: {\n    stroke: '#000',\n    strokeWidth: 1,\n    strokeDasharray: '5,5'\n  }\n}, {\n  id: 'e1-3',\n  source: '1',\n  target: '3',\n  type: 'default',\n  animated: false,\n  style: {\n    stroke: '#000',\n    strokeWidth: 1,\n    strokeDasharray: '5,5'\n  }\n}];\nconst getNodeColor = (node, selectedNode, hoveredNode) => {\n  if (node.id === (selectedNode === null || selectedNode === void 0 ? void 0 : selectedNode.id)) return '#00f'; // Blue for selected node\n  if (node.id === (hoveredNode === null || hoveredNode === void 0 ? void 0 : hoveredNode.id)) return '#0f0'; // Green for hovered node\n  return '#fff';\n};\nconst CommunicationPage = () => {\n  _s();\n  const [elements, setElements] = useState(initialElements);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [isAddingFlow, setIsAddingFlow] = useState(false);\n  const onConnect = params => setElements(els => addEdge({\n    ...params,\n    type: 'smoothstep',\n    animated: true,\n    style: {\n      stroke: 'green'\n    }\n  }, els));\n  const onNodeMouseEnter = (_event, node) => {\n    if (isAddingFlow) {\n      setHoveredNode(node);\n    }\n  };\n  const onNodeMouseLeave = () => setHoveredNode(null);\n  const onNodeClick = (_event, node) => {\n    if (isAddingFlow) {\n      if (node.id !== selectedNode.id) {\n        const newEdge = {\n          id: `e${selectedNode.id}-${node.id}`,\n          source: selectedNode.id,\n          target: node.id,\n          animated: true,\n          style: {\n            stroke: 'green'\n          }\n        };\n        setElements(els => addEdge(newEdge, els));\n        setIsAddingFlow(false);\n        setSelectedNode(null);\n      }\n    } else {\n      setSelectedNode(node);\n      setIsAddingFlow(true);\n    }\n  };\n  const nodeTypes = {\n    special: ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n        elements: elements,\n        onConnect: onConnect,\n        nodeTypes: nodeTypes,\n        onNodeMouseEnter: onNodeMouseEnter,\n        onNodeMouseLeave: onNodeMouseLeave,\n        onNodeClick: onNodeClick,\n        snapToGrid: true,\n        snapGrid: [15, 15],\n        children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), isAddingFlow && /*#__PURE__*/_jsxDEV(Alert, {\n        message: \"Click another holon to add an information flow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunicationPage, \"D841HxHFBmIz+kOtrABB5SBUWTs=\");\n_c2 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","ReactFlow","ReactFlowProvider","addEdge","Controls","Background","jsxDEV","_jsxDEV","Alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","initialElements","id","type","data","label","position","x","y","source","target","animated","style","stroke","strokeWidth","strokeDasharray","getNodeColor","node","selectedNode","hoveredNode","CommunicationPage","_s","elements","setElements","setSelectedNode","setHoveredNode","isAddingFlow","setIsAddingFlow","onConnect","params","els","onNodeMouseEnter","_event","onNodeMouseLeave","onNodeClick","newEdge","nodeTypes","special","height","snapToGrid","snapGrid","color","gap","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  Controls,\r\n  Background,\r\n} from 'react-flow-renderer';\r\nimport 'react-flow-renderer/dist/style.css';\r\nimport 'react-flow-renderer/dist/theme-default.css';\r\nimport './styles.css';\r\n\r\nconst Alert = ({ message }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst initialElements = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'Information System' },\r\n    position: { x: 250, y: 0 },\r\n  },\r\n  {\r\n    id: '2',\r\n    data: { label: 'Stakeholder' },\r\n    position: { x: 100, y: 100 },\r\n  },\r\n  {\r\n    id: '3',\r\n    data: { label: 'Infrastructure' },\r\n    position: { x: 400, y: 100 },\r\n  },\r\n  {\r\n    id: 'e1-2',\r\n    source: '1',\r\n    target: '2',\r\n    type: 'default',\r\n    animated: false,\r\n    style: { stroke: '#000', strokeWidth: 1, strokeDasharray: '5,5' },\r\n  },\r\n  {\r\n    id: 'e1-3',\r\n    source: '1',\r\n    target: '3',\r\n    type: 'default',\r\n    animated: false,\r\n    style: { stroke: '#000', strokeWidth: 1, strokeDasharray: '5,5' },\r\n  },\r\n];\r\n\r\nconst getNodeColor = (node, selectedNode, hoveredNode) => {\r\n  if (node.id === selectedNode?.id) return '#00f'; // Blue for selected node\r\n  if (node.id === hoveredNode?.id) return '#0f0'; // Green for hovered node\r\n  return '#fff';\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n  const [elements, setElements] = useState(initialElements);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [hoveredNode, setHoveredNode] = useState(null);\r\n  const [isAddingFlow, setIsAddingFlow] = useState(false);\r\n\r\n  const onConnect = (params) =>\r\n    setElements((els) =>\r\n      addEdge(\r\n        { ...params, type: 'smoothstep', animated: true, style: { stroke: 'green' } },\r\n        els\r\n      )\r\n    );\r\n\r\n  const onNodeMouseEnter = (_event, node) => {\r\n    if (isAddingFlow) {\r\n      setHoveredNode(node);\r\n    }\r\n  };\r\n  const onNodeMouseLeave = () => setHoveredNode(null);\r\n  const onNodeClick = (_event, node) => {\r\n    if (isAddingFlow) {\r\n      if (node.id !== selectedNode.id) {\r\n        const newEdge = {\r\n          id: `e${selectedNode.id}-${node.id}`,\r\n          source: selectedNode.id,\r\n          target: node.id,\r\n          animated: true,\r\n          style: { stroke: 'green' },\r\n        };\r\n        setElements((els) => addEdge(newEdge, els));\r\n        setIsAddingFlow(false);\r\n        setSelectedNode(null);\r\n      }\r\n    } else {\r\n      setSelectedNode(node);\r\n      setIsAddingFlow(true);\r\n    }\r\n  };\r\n\r\n  const nodeTypes = {\r\n    special: ({ data }) => (\r\n      <div className=\"node\">\r\n        {data.label}\r\n      </div>\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 600 }}>\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          onConnect={onConnect}\r\n          nodeTypes={nodeTypes}\r\n          onNodeMouseEnter={onNodeMouseEnter}\r\n          onNodeMouseLeave={onNodeMouseLeave}\r\n          onNodeClick={onNodeClick}\r\n          snapToGrid={true}\r\n          snapGrid={[15, 15]}\r\n        >\r\n          <Controls />\r\n          <Background color=\"#aaa\" gap={16} />\r\n        </ReactFlow>\r\n        {isAddingFlow && <Alert message=\"Click another holon to add an information flow.\" />}\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}