{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree } from 'react-tree-graph';\nimport 'react-tree-graph/dist/style.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Convert nodes to the structure expected by react-tree-graph\n  const data = {\n    name: 'Information System',\n    children: [{\n      name: 'Stakeholder',\n      children: []\n    }, {\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n\n  // Function to handle node selection\n  const handleNodeSelect = node => {\n    setSelectedNode(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: data,\n        height: 400,\n        width: 600,\n        animated: true,\n        svgProps: {\n          className: 'custom'\n        },\n        nodeProps: {\n          onClick: node => handleNodeSelect(node)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"details-view\",\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Node Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedNode.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a node to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RIsWM+4oUpuhWd1/4LbQUcoZ1hw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Tree","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedNode","setSelectedNode","data","name","children","handleNodeSelect","node","className","height","width","animated","svgProps","nodeProps","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree } from 'react-tree-graph';\n\nimport 'react-tree-graph/dist/style.css'\nimport './styles.css';\n\nconst App = () => {\n  const [selectedNode, setSelectedNode] = useState(null);\n\n  // Convert nodes to the structure expected by react-tree-graph\n  const data = {\n    name: 'Information System',\n    children: [{\n      name: 'Stakeholder',\n      children: []\n    }, {\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n\n  // Function to handle node selection\n  const handleNodeSelect = (node) => {\n    setSelectedNode(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"tree-container\">\n        <Tree\n          data={data}\n          height={400}\n          width={600}\n          animated\n          svgProps={{\n            className: 'custom'\n          }}\n          nodeProps={{\n            onClick: node => handleNodeSelect(node),\n          }}\n        />\n      </div>\n      <div className=\"details-view\">\n        {selectedNode ? (\n          <>\n            <h2>Node Details</h2>\n            <p>Name: {selectedNode.name}</p>\n            {/* Additional details here */}\n          </>\n        ) : (\n          <p>Select a node to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,iCAAiC;AACxC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMU,IAAI,GAAG;IACXC,IAAI,EAAE,oBAAoB;IAC1BC,QAAQ,EAAE,CAAC;MACTD,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE;IACZ,CAAC,EAAE;MACDD,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCL,eAAe,CAACK,IAAI,CAAC;EACvB,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAH,QAAA,gBAC5BT,OAAA;MAAKY,SAAS,EAAC,gBAAgB;MAAAH,QAAA,eAC7BT,OAAA,CAACF,IAAI;QACHS,IAAI,EAAEA,IAAK;QACXM,MAAM,EAAE,GAAI;QACZC,KAAK,EAAE,GAAI;QACXC,QAAQ;QACRC,QAAQ,EAAE;UACRJ,SAAS,EAAE;QACb,CAAE;QACFK,SAAS,EAAE;UACTC,OAAO,EAAEP,IAAI,IAAID,gBAAgB,CAACC,IAAI;QACxC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAAAH,QAAA,EAC1BJ,YAAY,gBACXL,OAAA,CAAAE,SAAA;QAAAO,QAAA,gBACET,OAAA;UAAAS,QAAA,EAAI;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBtB,OAAA;UAAAS,QAAA,GAAG,QAAM,EAACJ,YAAY,CAACG,IAAI;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,eAEhC,CAAC,gBAEHtB,OAAA;QAAAS,QAAA,EAAG;MAA6B;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACpC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjDID,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAmDT,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}