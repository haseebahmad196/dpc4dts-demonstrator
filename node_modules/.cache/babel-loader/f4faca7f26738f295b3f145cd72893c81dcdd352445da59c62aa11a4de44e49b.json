{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\n// Assuming Holon component adjusted for organizational chart context\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAddChild(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemoveNode(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// App component incorporating the organizational chart\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Function to add a child node\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    // This is a simplified way to update the tree structure\n    // For a complex tree, you would need a recursive function to find the parent node and update its children\n    const updatedNodes = {\n      ...nodes\n    }; // Deep copy might be necessary depending on your state structure\n    updatedNodes.children.push({\n      id: `${parentNode.id}-${updatedNodes.children.length}`,\n      name: childName,\n      children: []\n    });\n    setNodes(updatedNodes);\n  };\n\n  // Function to remove a node\n  const onRemoveNode = nodeId => {\n    // Similar to add, implement logic to remove a node by its id\n    console.log(\"Remove node not implemented\", nodeId);\n  };\n\n  // Recursive function to render nodes\n  const renderNodes = node => /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(Holon, {\n      node: node,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: setSelectedHolon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 22\n    }, this),\n    children: node.children.map(child => renderNodes(child))\n  }, node.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: renderNodes(nodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Description: \\\"Dynamic description not implemented\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"N66WkNuQdpmQI9RDYNnLtkATaqE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","className","children","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","_c","App","_s","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","childName","prompt","updatedNodes","push","length","nodeId","console","log","renderNodes","label","map","child","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\n// Assuming Holon component adjusted for organizational chart context\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode }) => {\n  return (\n    <div className=\"holon\">\n      <div className=\"holon-details\" onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAddChild(node); }}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemoveNode(node.id); }}>x</button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// App component incorporating the organizational chart\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    children: [],\n  });\n\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Function to add a child node\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    // This is a simplified way to update the tree structure\n    // For a complex tree, you would need a recursive function to find the parent node and update its children\n    const updatedNodes = { ...nodes }; // Deep copy might be necessary depending on your state structure\n    updatedNodes.children.push({\n      id: `${parentNode.id}-${updatedNodes.children.length}`,\n      name: childName,\n      children: [],\n    });\n\n    setNodes(updatedNodes);\n  };\n\n  // Function to remove a node\n  const onRemoveNode = (nodeId) => {\n    // Similar to add, implement logic to remove a node by its id\n    console.log(\"Remove node not implemented\", nodeId);\n  };\n\n  // Recursive function to render nodes\n  const renderNodes = (node) => (\n    <TreeNode label={<Holon node={node} onAddChild={onAddChild} onRemoveNode={onRemoveNode} onSelectNode={setSelectedHolon} />} key={node.id}>\n      {node.children.map((child) => renderNodes(child))}\n    </TreeNode>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        {renderNodes(nodes)}\n      </Tree>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: \"Dynamic description not implemented\"</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}