{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\n\n// Initial setup of the information system\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialHolon = {\n  id: 'root',\n  name: 'Information System',\n  description: 'The top-level information system.',\n  children: [{\n    id: 'stakeholder',\n    name: 'Stakeholder',\n    description: 'Represents an entity with interest in the system.',\n    children: []\n  }, {\n    id: 'infrastructure',\n    name: 'Infrastructure',\n    description: 'Underlying technical structure of the system.',\n    children: []\n  }],\n  level: 0\n};\nconst HolonNode = ({\n  holon,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `holon holon-level-${holon.level}`,\n    onClick: () => onSelect(holon),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: holon.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), holon.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: holon.children.map(child => /*#__PURE__*/_jsxDEV(HolonNode, {\n        holon: child,\n        onSelect: onSelect\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = HolonNode;\nconst DetailView = ({\n  holon\n}) => {\n  if (!holon) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail-view\",\n    children: \"No Selection\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 22\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detail-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Holon Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", holon.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", holon.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DetailView;\nfunction App() {\n  _s();\n  const [system, setSystem] = useState([initialHolon]); // Adjust based on your application's requirements\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Placeholder functions for holon manipulation\n  const addHolon = parentHolon => {\n    // Implement adding logic\n  };\n  const removeHolon = holonId => {\n    // Implement removal logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: system.map(holon => /*#__PURE__*/_jsxDEV(HolonNode, {\n        holon: holon,\n        onSelect: setSelectedHolon\n      }, holon.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DetailView, {\n      holon: selectedHolon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"m88ThoezDk3TFOWt+7yfX/VGmfo=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"HolonNode\");\n$RefreshReg$(_c2, \"DetailView\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialHolon","id","name","description","children","level","HolonNode","holon","onSelect","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","child","_c","DetailView","_c2","App","_s","system","setSystem","selectedHolon","setSelectedHolon","addHolon","parentHolon","removeHolon","holonId","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Initial setup of the information system\nconst initialHolon = {\n  id: 'root',\n  name: 'Information System',\n  description: 'The top-level information system.',\n  children: [\n    {\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'Represents an entity with interest in the system.',\n      children: [],\n    },\n    {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Underlying technical structure of the system.',\n      children: [],\n    },\n  ],\n  level: 0,\n};\n\nconst HolonNode = ({ holon, onSelect }) => {\n  return (\n    <div className={`holon holon-level-${holon.level}`} onClick={() => onSelect(holon)}>\n      <div className=\"holon-details\">\n        <div className=\"name\">{holon.name}</div>\n        {/* Placeholder for buttons; implement adding/removing logic */}\n      </div>\n      {holon.children.length > 0 && (\n        <div className=\"children\">\n          {holon.children.map((child) => (\n            <HolonNode key={child.id} holon={child} onSelect={onSelect} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst DetailView = ({ holon }) => {\n  if (!holon) return <div className=\"detail-view\">No Selection</div>;\n\n  return (\n    <div className=\"detail-view\">\n      <h2>Holon Details</h2>\n      <p>Name: {holon.name}</p>\n      <p>Description: {holon.description}</p>\n      {/* Implement form inputs for editing if required */}\n    </div>\n  );\n};\n\nfunction App() {\n  const [system, setSystem] = useState([initialHolon]); // Adjust based on your application's requirements\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Placeholder functions for holon manipulation\n  const addHolon = (parentHolon) => {\n    // Implement adding logic\n  };\n  \n  const removeHolon = (holonId) => {\n    // Implement removal logic\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"left-panel\">\n        {system.map(holon => (\n          <HolonNode key={holon.id} holon={holon} onSelect={setSelectedHolon} />\n        ))}\n      </div>\n      <DetailView holon={selectedHolon} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}