{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles.css'; // Import the updated CSS file\n\n// Generic Node Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NodeComponent = ({\n  name,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      className: \"add-button\",\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onRemove,\n      className: \"remove-button\",\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n// App Component\n_c = NodeComponent;\nconst App = () => {\n  _s();\n  // State for managing lists\n  const [stakeholderList, setStakeholderList] = React.useState([]);\n  const [infrastructureList, setInfrastructureList] = React.useState([]);\n\n  // Handlers for adding/removing nodes\n  const addNode = (type, name) => {\n    if (type === 'stakeholder') {\n      setStakeholderList([...stakeholderList, name]);\n    } else if (type === 'infrastructure') {\n      setInfrastructureList([...infrastructureList, name]);\n    }\n  };\n  const removeNode = (type, index) => {\n    let updatedList = type === 'stakeholder' ? [...stakeholderList] : [...infrastructureList];\n    updatedList.splice(index, 1);\n    if (type === 'stakeholder') {\n      setStakeholderList(updatedList);\n    } else if (type === 'infrastructure') {\n      setInfrastructureList(updatedList);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"information-system-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Information System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stakeholder-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stakeholders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), stakeholderList.map((stakeholder, index) => /*#__PURE__*/_jsxDEV(NodeComponent, {\n        name: stakeholder,\n        onRemove: () => removeNode('stakeholder', index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode('stakeholder', 'New Stakeholder'),\n        className: \"add-button\",\n        children: \"Add Stakeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infrastructure-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), infrastructureList.map((infrastructure, index) => /*#__PURE__*/_jsxDEV(NodeComponent, {\n        name: infrastructure,\n        onRemove: () => removeNode('infrastructure', index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNode('infrastructure', 'New Infrastructure'),\n        className: \"add-button\",\n        children: \"Add Infrastructure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Snn2+Mm4JXvI2OUFtCQSD5PeVDA=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NodeComponent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NodeComponent","name","onAdd","onRemove","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","App","_s","stakeholderList","setStakeholderList","useState","infrastructureList","setInfrastructureList","addNode","type","removeNode","index","updatedList","splice","map","stakeholder","infrastructure","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React from 'react';\nimport './styles.css'; // Import the updated CSS file\n\n// Generic Node Component\nconst NodeComponent = ({ name, onAdd, onRemove }) => {\n  return (\n    <div className=\"node-container\">\n      <h2>{name}</h2>\n      <button onClick={onAdd} className=\"add-button\">+</button>\n      <button onClick={onRemove} className=\"remove-button\">x</button>\n    </div>\n  );\n};\n\n// App Component\nconst App = () => {\n  // State for managing lists\n  const [stakeholderList, setStakeholderList] = React.useState([]);\n  const [infrastructureList, setInfrastructureList] = React.useState([]);\n\n  // Handlers for adding/removing nodes\n  const addNode = (type, name) => {\n    if (type === 'stakeholder') {\n      setStakeholderList([...stakeholderList, name]);\n    } else if (type === 'infrastructure') {\n      setInfrastructureList([...infrastructureList, name]);\n    }\n  };\n\n  const removeNode = (type, index) => {\n    let updatedList = type === 'stakeholder' ? [...stakeholderList] : [...infrastructureList];\n    updatedList.splice(index, 1);\n    if (type === 'stakeholder') {\n      setStakeholderList(updatedList);\n    } else if (type === 'infrastructure') {\n      setInfrastructureList(updatedList);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Information System Node */}\n      <div className=\"information-system-container\">\n        <h2>Information System</h2>\n      </div>\n      \n      {/* Stakeholder Nodes */}\n      <div className=\"stakeholder-box\">\n        <h2>Stakeholders</h2>\n        {stakeholderList.map((stakeholder, index) => (\n          <NodeComponent\n            key={index}\n            name={stakeholder}\n            onRemove={() => removeNode('stakeholder', index)}\n          />\n        ))}\n        <button onClick={() => addNode('stakeholder', 'New Stakeholder')} className=\"add-button\">Add Stakeholder</button>\n      </div>\n      \n      {/* Infrastructure Nodes */}\n      <div className=\"infrastructure-box\">\n        <h2>Infrastructure</h2>\n        {infrastructureList.map((infrastructure, index) => (\n          <NodeComponent\n            key={index}\n            name={infrastructure}\n            onRemove={() => removeNode('infrastructure', index)}\n          />\n        ))}\n        <button onClick={() => addNode('infrastructure', 'New Infrastructure')} className=\"add-button\">Add Infrastructure</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}