{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Alert;\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected,\n  selectedHolonId,\n  setSelectedHolonId,\n  hoveredHolonId,\n  setHoveredHolonId,\n  originHolonId,\n  setOriginHolonId,\n  showAddSign,\n  setShowAddSign,\n  toggleAddMessage\n}) => {\n  _s();\n  const holonRef = useRef(null);\n  const handleNodeClick = () => {\n    setSelectedHolonId(node.id);\n    setShowAddSign(true);\n    toggleAddMessage(false);\n  };\n  const handleAddClick = e => {\n    e.stopPropagation();\n    setOriginHolonId(node.id);\n    setShowAddSign(false);\n    toggleAddMessage(true);\n  };\n  const handleMouseEnter = () => {\n    setHoveredHolonId(node.id);\n  };\n  const handleMouseLeave = () => {\n    setHoveredHolonId(null);\n  };\n  const selected = isSelected(node);\n  const isHovered = hoveredHolonId === node.id && originHolonId && originHolonId !== node.id;\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''}`,\n      onClick: handleNodeClick,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      ref: holonRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), showAddSign && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddClick,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      selectedHolonId: selectedHolonId,\n      setSelectedHolonId: setSelectedHolonId,\n      hoveredHolonId: hoveredHolonId,\n      setHoveredHolonId: setHoveredHolonId,\n      originHolonId: originHolonId,\n      setOriginHolonId: setOriginHolonId,\n      showAddSign: showAddSign,\n      setShowAddSign: setShowAddSign,\n      toggleAddMessage: toggleAddMessage\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }, this)), isHovered && /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"green-line\",\n      children: /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: \"0\",\n        y1: \"0\",\n        x2: \"100%\",\n        y2: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Holon, \"1gnAYF8/5CpVF8IG63hAwKjM52o=\");\n_c2 = Holon;\nconst CommunicationPage = () => {\n  _s2();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n  const [selectedHolonId, setSelectedHolonId] = useState(null);\n  const [hoveredHolonId, setHoveredHolonId] = useState(null);\n  const [originHolonId, setOriginHolonId] = useState(null);\n  const [showAddSign, setShowAddSign] = useState(true);\n  const [showAddMessage, setShowAddMessage] = useState(false);\n  const [lineCoordinates, setLineCoordinates] = useState({\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0\n  });\n  const toggleAddMessage = value => {\n    setShowAddMessage(value);\n  };\n  const handleSelectNode = node => {\n    setSelectedHolonId(node.id);\n    setShowAddSign(true);\n  };\n  const isSelected = node => selectedHolonId === node.id;\n  useEffect(() => {\n    const originElement = document.getElementById(`holon-${originHolonId}`);\n    const hoveredElement = document.getElementById(`holon-${hoveredHolonId}`);\n    if (originElement && hoveredElement) {\n      const originRect = originElement.getBoundingClientRect();\n      const hoveredRect = hoveredElement.getBoundingClientRect();\n      setLineCoordinates({\n        x1: originRect.x + originRect.width / 2,\n        y1: originRect.y + originRect.height / 2,\n        x2: hoveredRect.x + hoveredRect.width / 2,\n        y2: hoveredRect.y + hoveredRect.height / 2\n      });\n    }\n  }, [originHolonId, hoveredHolonId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: initialNodes,\n          onSelectNode: handleSelectNode,\n          isSelected: isSelected,\n          selectedHolonId: selectedHolonId,\n          setSelectedHolonId: setSelectedHolonId,\n          hoveredHolonId: hoveredHolonId,\n          setHoveredHolonId: setHoveredHolonId,\n          originHolonId: originHolonId,\n          setOriginHolonId: setOriginHolonId,\n          showAddSign: showAddSign,\n          setShowAddSign: setShowAddSign,\n          toggleAddMessage: toggleAddMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), originHolonId && hoveredHolonId && originHolonId !== hoveredHolonId && /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"green-line\",\n        children: /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: lineCoordinates.x1,\n          y1: lineCoordinates.y1,\n          x2: lineCoordinates.x2,\n          y2: lineCoordinates.y2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), showAddMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Click another holon to add an information flow.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n_s2(CommunicationPage, \"1Sp2n71+EhAHSVmvhjUkjMP7h0w=\");\n_c3 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Holon\");\n$RefreshReg$(_c3, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Tree","TreeNode","jsxDEV","_jsxDEV","Alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Holon","node","onSelectNode","isSelected","selectedHolonId","setSelectedHolonId","hoveredHolonId","setHoveredHolonId","originHolonId","setOriginHolonId","showAddSign","setShowAddSign","toggleAddMessage","_s","holonRef","handleNodeClick","id","handleAddClick","e","stopPropagation","handleMouseEnter","handleMouseLeave","selected","isHovered","label","onClick","onMouseEnter","onMouseLeave","ref","name","map","child","x1","y1","x2","y2","_c2","CommunicationPage","_s2","initialNodes","showAddMessage","setShowAddMessage","lineCoordinates","setLineCoordinates","value","handleSelectNode","originElement","document","getElementById","hoveredElement","originRect","getBoundingClientRect","hoveredRect","x","width","y","height","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport './styles.css';\r\n\r\nconst Alert = ({ message }) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Holon = ({ node, onSelectNode, isSelected, selectedHolonId, setSelectedHolonId, hoveredHolonId, setHoveredHolonId, originHolonId, setOriginHolonId, showAddSign, setShowAddSign, toggleAddMessage }) => {\r\n    const holonRef = useRef(null);\r\n\r\n    const handleNodeClick = () => {\r\n        setSelectedHolonId(node.id);\r\n        setShowAddSign(true);\r\n        toggleAddMessage(false);\r\n    };\r\n\r\n    const handleAddClick = (e) => {\r\n        e.stopPropagation();\r\n        setOriginHolonId(node.id);\r\n        setShowAddSign(false);\r\n        toggleAddMessage(true);\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n        setHoveredHolonId(node.id);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoveredHolonId(null);\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n    const isHovered = hoveredHolonId === node.id && originHolonId && originHolonId !== node.id;\r\n\r\n    return (\r\n        <TreeNode\r\n            label={\r\n                <div\r\n                    className={`tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''}`}\r\n                    onClick={handleNodeClick}\r\n                    onMouseEnter={handleMouseEnter}\r\n                    onMouseLeave={handleMouseLeave}\r\n                    ref={holonRef}\r\n                >\r\n                    <div className=\"name\">{node.name}</div>\r\n                    {showAddSign && (\r\n                        <div className=\"buttons\">\r\n                            <button className=\"add-button\" onClick={handleAddClick}>\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        >\r\n            {node.children &&\r\n                node.children.map((child) => (\r\n                    <Holon\r\n                        key={child.id}\r\n                        node={child}\r\n                        onSelectNode={onSelectNode}\r\n                        isSelected={isSelected}\r\n                        selectedHolonId={selectedHolonId}\r\n                        setSelectedHolonId={setSelectedHolonId}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        originHolonId={originHolonId}\r\n                        setOriginHolonId={setOriginHolonId}\r\n                        showAddSign={showAddSign}\r\n                        setShowAddSign={setShowAddSign}\r\n                        toggleAddMessage={toggleAddMessage}\r\n                    />\r\n                ))}\r\n            {isHovered && (\r\n                <svg className=\"green-line\">\r\n                    <line\r\n                        x1=\"0\"\r\n                        y1=\"0\"\r\n                        x2=\"100%\"\r\n                        y2=\"100%\"\r\n                    />\r\n                </svg>\r\n            )}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n    const initialNodes = {\r\n        id: 'root',\r\n        name: 'Information System',\r\n        children: [\r\n            {\r\n                id: 'Stakeholder',\r\n                name: 'Stakeholder',\r\n                children: [],\r\n            },\r\n            {\r\n                id: 'Infrastructure',\r\n                name: 'Infrastructure',\r\n                children: [],\r\n            }\r\n        ],\r\n    };\r\n\r\n    const [selectedHolonId, setSelectedHolonId] = useState(null);\r\n    const [hoveredHolonId, setHoveredHolonId] = useState(null);\r\n    const [originHolonId, setOriginHolonId] = useState(null);\r\n    const [showAddSign, setShowAddSign] = useState(true);\r\n    const [showAddMessage, setShowAddMessage] = useState(false);\r\n    const [lineCoordinates, setLineCoordinates] = useState({ x1: 0, y1: 0, x2: 0, y2: 0 });\r\n\r\n    const toggleAddMessage = (value) => {\r\n        setShowAddMessage(value);\r\n    };\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedHolonId(node.id);\r\n        setShowAddSign(true);\r\n    };\r\n\r\n    const isSelected = (node) => selectedHolonId === node.id;\r\n\r\n    useEffect(() => {\r\n        const originElement = document.getElementById(`holon-${originHolonId}`);\r\n        const hoveredElement = document.getElementById(`holon-${hoveredHolonId}`);\r\n\r\n        if (originElement && hoveredElement) {\r\n            const originRect = originElement.getBoundingClientRect();\r\n            const hoveredRect = hoveredElement.getBoundingClientRect();\r\n\r\n            setLineCoordinates({\r\n                x1: originRect.x + originRect.width / 2,\r\n                y1: originRect.y + originRect.height / 2,\r\n                x2: hoveredRect.x + hoveredRect.width / 2,\r\n                y2: hoveredRect.y + hoveredRect.height / 2,\r\n            });\r\n        }\r\n    }, [originHolonId, hoveredHolonId]);\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"content-area\">\r\n                <Tree>\r\n                    <Holon\r\n                        node={initialNodes}\r\n                        onSelectNode={handleSelectNode}\r\n                        isSelected={isSelected}\r\n                        selectedHolonId={selectedHolonId}\r\n                        setSelectedHolonId={setSelectedHolonId}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        originHolonId={originHolonId}\r\n                        setOriginHolonId={setOriginHolonId}\r\n                        showAddSign={showAddSign}\r\n                        setShowAddSign={setShowAddSign}\r\n                        toggleAddMessage={toggleAddMessage}\r\n                    />\r\n                </Tree>\r\n                {originHolonId && hoveredHolonId && originHolonId !== hoveredHolonId && (\r\n                    <svg className=\"green-line\">\r\n                        <line\r\n                            x1={lineCoordinates.x1}\r\n                            y1={lineCoordinates.y1}\r\n                            x2={lineCoordinates.x2}\r\n                            y2={lineCoordinates.y2}\r\n                        />\r\n                    </svg>\r\n                )}\r\n            </div>\r\n            {showAddMessage && <Alert message=\"Click another holon to add an information flow.\" />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}