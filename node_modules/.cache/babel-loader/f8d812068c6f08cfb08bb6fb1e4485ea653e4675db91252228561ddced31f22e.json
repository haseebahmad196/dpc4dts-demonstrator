{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TreeNode } from 'react-organizational-chart';\nimport './App.css';\n\n// Define the Holon component to be used within the TreeNode component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelect,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    onClick: () => onSelect(node),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          onAdd(node.id);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => {\n          e.stopPropagation();\n          onRemove(node.id);\n        },\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: node.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [{\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system.',\n      children: []\n    }, {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n      children: []\n    }]\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Functions to add, remove, and select nodes go here\n\n  const renderTree = node => /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(Holon, {\n      node: node,\n      onSelect: setSelectedHolon,\n      onAdd: addChild,\n      onRemove: removeChild\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 22\n    }, this),\n    children: node.children.map(child => renderTree(child))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  // Add and remove child functions implementation\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"organizational-chart\",\n      children: renderTree(nodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"yU95mGvY6k6Nf8lmN9FFpDIZj7w=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onSelect","onAdd","onRemove","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","description","_c","App","_s","nodes","setNodes","selectedHolon","setSelectedHolon","renderTree","label","addChild","removeChild","map","child","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TreeNode } from 'react-organizational-chart';\nimport './App.css';\n\n// Define the Holon component to be used within the TreeNode component\nconst Holon = ({ node, onSelect, onAdd, onRemove }) => {\n  return (\n    <div className=\"holon\" onClick={() => onSelect(node)}>\n      <div className=\"name\">{node.name}</div>\n      <div className=\"buttons\">\n        <button onClick={(e) => { e.stopPropagation(); onAdd(node.id); }}>+</button>\n        {node.id !== 'root' && (\n          <button onClick={(e) => { e.stopPropagation(); onRemove(node.id); }}>x</button>\n        )}\n      </div>\n      <div className=\"description\">{node.description}</div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [\n      {\n        id: 'stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system.',\n        children: [],\n      },\n      {\n        id: 'infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n        children: [],\n      },\n    ],\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Functions to add, remove, and select nodes go here\n\n  const renderTree = (node) => (\n    <TreeNode label={<Holon node={node} onSelect={setSelectedHolon} onAdd={addChild} onRemove={removeChild} />}>\n      {node.children.map(child => renderTree(child))}\n    </TreeNode>\n  );\n\n  // Add and remove child functions implementation\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"organizational-chart\">\n        {renderTree(nodes)}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon && (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description}</p>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}