{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAdd,\n  onRemove,\n  onSelect\n}) => {\n  // Prevents the propagation of the click event to avoid unintended behavior\n  const handleAdd = e => {\n    e.stopPropagation();\n    onAdd(node);\n  };\n  const handleRemove = e => {\n    e.stopPropagation();\n    onRemove(node.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    onClick: () => onSelect(node),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: handleAdd,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: handleRemove,\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAdd = parent => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const newNode = {\n      id: `node-${new Date().getTime()}`,\n      // Unique ID for the new node\n      name: childName,\n      children: []\n    };\n    const addNodeRecursively = (currentNode, parentId) => {\n      if (currentNode.id === parentId) {\n        currentNode.children = [...currentNode.children, newNode];\n        return true; // Node added\n      }\n      return currentNode.children.some(child => addNodeRecursively(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n  };\n  const onRemove = nodeId => {\n    const removeNodeRecursively = currentNodes => {\n      return currentNodes.filter(node => {\n        if (node.id === nodeId) return false; // Node to be removed\n        node.children = removeNodeRecursively(node.children);\n        return true;\n      });\n    };\n    const newNodes = {\n      ...nodes\n    };\n    newNodes.children = removeNodeRecursively(newNodes.children);\n    setNodes(newNodes);\n  };\n  const renderTreeNodes = node => /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(Holon, {\n      node: node,\n      onAdd: onAdd,\n      onRemove: onRemove,\n      onSelect: setSelectedHolon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this),\n    children: node.children.map(child => renderTreeNodes(child))\n  }, node.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: renderTreeNodes(nodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description || \"No description provided.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qScw58K74+jlxVKRX4c+rDMX2KU=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAdd","onRemove","onSelect","handleAdd","e","stopPropagation","handleRemove","id","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","parent","childName","prompt","newNode","Date","getTime","addNodeRecursively","currentNode","parentId","some","child","newNodes","nodeId","removeNodeRecursively","currentNodes","filter","renderTreeNodes","label","map","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './App.css';\n\nconst Holon = ({ node, onAdd, onRemove, onSelect }) => {\n  // Prevents the propagation of the click event to avoid unintended behavior\n  const handleAdd = (e) => {\n    e.stopPropagation();\n    onAdd(node);\n  };\n\n  const handleRemove = (e) => {\n    e.stopPropagation();\n    onRemove(node.id);\n  };\n\n  return (\n    <div className=\"holon\" onClick={() => onSelect(node)}>\n      <div className=\"name\">{node.name}</div>\n      <div className=\"buttons\">\n        <button className=\"add-button\" onClick={handleAdd}>+</button>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={handleRemove}>x</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAdd = (parent) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const newNode = {\n      id: `node-${new Date().getTime()}`, // Unique ID for the new node\n      name: childName,\n      children: []\n    };\n\n    const addNodeRecursively = (currentNode, parentId) => {\n      if (currentNode.id === parentId) {\n        currentNode.children = [...currentNode.children, newNode];\n        return true; // Node added\n      }\n\n      return currentNode.children.some(child => addNodeRecursively(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n  };\n\n  const onRemove = (nodeId) => {\n    const removeNodeRecursively = (currentNodes) => {\n      return currentNodes.filter(node => {\n        if (node.id === nodeId) return false; // Node to be removed\n        node.children = removeNodeRecursively(node.children);\n        return true;\n      });\n    };\n\n    const newNodes = { ...nodes };\n    newNodes.children = removeNodeRecursively(newNodes.children);\n    setNodes(newNodes);\n  };\n\n  const renderTreeNodes = (node) => (\n    <TreeNode label={<Holon node={node} onAdd={onAdd} onRemove={onRemove} onSelect={setSelectedHolon} />} key={node.id}>\n      {node.children.map(child => renderTreeNodes(child))}\n    </TreeNode>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        {renderTreeNodes(nodes)}\n      </Tree>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description || \"No description provided.\"}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}