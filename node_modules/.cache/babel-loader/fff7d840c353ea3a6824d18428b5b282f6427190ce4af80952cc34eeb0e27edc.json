{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport \"./styles.css\";\nimport CommunicationReactFlow from \"./CommunicationReactFlow\";\nimport InfrastructureReactFlow from \"./InfraStructureReactFlow\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\n\n// Default nodes with descriptions\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initNodes = [{\n  id: \"1\",\n  type: \"customNode\",\n  data: {\n    label: \"Information System\",\n    level: 0,\n    description: \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\"\n  },\n  position: {\n    x: 0,\n    y: 0\n  }\n}, {\n  id: \"2\",\n  type: \"customNode\",\n  data: {\n    label: \"Stakeholder\",\n    level: 1,\n    description: \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\"\n  },\n  position: {\n    x: 100,\n    y: 100\n  }\n}, {\n  id: \"3\",\n  type: \"customNode\",\n  data: {\n    label: \"Infrastructure\",\n    level: 1,\n    description: \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\"\n  },\n  position: {\n    x: -100,\n    y: 100\n  }\n}];\nconst initEdges = [{\n  id: \"e1-2\",\n  source: \"1\",\n  target: \"2\"\n}, {\n  id: \"e1-3\",\n  source: \"1\",\n  target: \"3\"\n}];\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 mb-2 border ${selected ? \"tree-label selected\" : \"tree-label\"} rounded`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          className: \"me-1\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  selectedNode\n}) => {\n  const isSelected = node => selectedNode && node.id === selectedNode.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      lineStyle: \"dashed\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StructurePage;\nconst App = () => {\n  _s();\n  var _selectedNode$data, _selectedNode$data2;\n  const initialNodes = {\n    id: \"root\",\n    name: \"Information System\",\n    description: \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\",\n    children: [{\n      id: \"Stakeholder\",\n      name: \"Stakeholder\",\n      description: \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\",\n      children: []\n    }, {\n      id: \"Infrastructure\",\n      name: \"Infrastructure\",\n      description: \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\",\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeType, setNodeType] = useState(\"\");\n  const [nodeName, setNodeName] = useState(\"\");\n  const [activeStep, setActiveStep] = useState(1);\n  const [reactFlowNodes, setReactFlowNodes, onNodesChange] = useNodesState(initNodes);\n  const [reactFlowEdges, setReactFlowEdges, onEdgesChange] = useEdgesState(initEdges);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNodeName(\"\");\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedNode(parentNode);\n    setNodeType(\"child\");\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedNode(null);\n  };\n  const addNewRoot = () => {\n    setSelectedNode(nodes);\n    setNodeType(\"parent\");\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedNode.id}-${Math.random()}`,\n      name: nodeName,\n      data: {\n        label: nodeName\n      },\n      children: []\n    };\n    if (nodeType === \"child\") {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedNode.id);\n      setNodes(newNodes);\n    } else if (nodeType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedNode]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step me-3 ${activeStep === 1 ? \"active\" : \"\"}`,\n        onClick: () => setActiveStep(1),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 1 ? \"bg-primary\" : \"bg-secondary\"}`,\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ms-2 fw-bold ${activeStep === 1 ? \"text-primary\" : \"text-secondary\"}`,\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 2 ? \"active\" : \"\"}`,\n        onClick: () => setActiveStep(2),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 2 ? \"bg-primary\" : \"bg-secondary\"}`,\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ms-2 fw-bold ${activeStep === 2 ? \"text-primary\" : \"text-secondary\"}`,\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: activeStep === 1 ? /*#__PURE__*/_jsxDEV(InfrastructureReactFlow, {\n          nodes: reactFlowNodes,\n          edges: reactFlowEdges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          setNodes: setReactFlowNodes,\n          setEdges: setReactFlowEdges,\n          setSelectedNode: setSelectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CommunicationReactFlow, {\n          nodes: reactFlowNodes,\n          edges: reactFlowEdges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          setNodes: setReactFlowNodes,\n          setEdges: setReactFlowEdges,\n          setSelectedNode: setSelectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), \" \", ((_selectedNode$data = selectedNode.data) === null || _selectedNode$data === void 0 ? void 0 : _selectedNode$data.label) || selectedNode.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), \" \", ((_selectedNode$data2 = selectedNode.data) === null || _selectedNode$data2 === void 0 ? void 0 : _selectedNode$data2.description) || selectedNode.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Node Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"nodeType\",\n          value: nodeType,\n          onChange: value => handleNodeTypeSelection(value),\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"child\",\n            variant: \"outline-primary\",\n            children: \"Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"parent\",\n            variant: \"outline-primary\",\n            children: \"Parent Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), nodeType && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name for the Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          disabled: !nodeType,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RkCrFU0CxLCL26SEw6Ba6npi8ng=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","Button","Modal","Form","ToggleButton","ToggleButtonGroup","CommunicationReactFlow","InfrastructureReactFlow","ReactFlow","addEdge","useNodesState","useEdgesState","jsxDEV","_jsxDEV","Fragment","_Fragment","initNodes","id","type","data","label","level","description","position","x","y","initEdges","source","target","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","map","child","_c","StructurePage","nodes","selectedNode","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","App","_s","_selectedNode$data","_selectedNode$data2","initialNodes","setNodes","setSelectedNode","showModal","setShowModal","nodeType","setNodeType","nodeName","setNodeName","activeStep","setActiveStep","reactFlowNodes","setReactFlowNodes","onNodesChange","reactFlowEdges","setReactFlowEdges","onEdgesChange","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","addNewRoot","handleNodeTypeSelection","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","style","cursor","width","height","edges","setEdges","show","onHide","Header","closeButton","Title","Body","value","onChange","Group","controlId","Label","Control","placeholder","Footer","disabled","_c3","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tree, TreeNode } from \"react-organizational-chart\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport \"./styles.css\";\r\nimport CommunicationReactFlow from \"./CommunicationReactFlow\";\r\nimport InfrastructureReactFlow from \"./InfraStructureReactFlow\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\n\r\n// Default nodes with descriptions\r\nconst initNodes = [\r\n  {\r\n    id: \"1\",\r\n    type: \"customNode\",\r\n    data: {\r\n      label: \"Information System\",\r\n      level: 0,\r\n      description:\r\n        \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\",\r\n    },\r\n    position: { x: 0, y: 0 },\r\n  },\r\n  {\r\n    id: \"2\",\r\n    type: \"customNode\",\r\n    data: {\r\n      label: \"Stakeholder\",\r\n      level: 1,\r\n      description:\r\n        \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\",\r\n    },\r\n    position: { x: 100, y: 100 },\r\n  },\r\n  {\r\n    id: \"3\",\r\n    type: \"customNode\",\r\n    data: {\r\n      label: \"Infrastructure\",\r\n      level: 1,\r\n      description:\r\n        \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\",\r\n    },\r\n    position: { x: -100, y: 100 },\r\n  },\r\n];\r\n\r\nconst initEdges = [\r\n  { id: \"e1-2\", source: \"1\", target: \"2\" },\r\n  { id: \"e1-3\", source: \"1\", target: \"3\" },\r\n];\r\n\r\nconst Holon = ({\r\n  node,\r\n  onAddChild,\r\n  onRemoveNode,\r\n  onSelectNode,\r\n  isSelected,\r\n}) => {\r\n  const handleActionClick = (e, action) => {\r\n    e.stopPropagation();\r\n    action();\r\n  };\r\n\r\n  const selected = isSelected(node);\r\n\r\n  return (\r\n    <TreeNode\r\n      label={\r\n        <div\r\n          className={`p-2 mb-2 border ${\r\n            selected ? \"tree-label selected\" : \"tree-label\"\r\n          } rounded`}\r\n          onClick={() => onSelectNode(node)}\r\n        >\r\n          <div>{node.name}</div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              className=\"me-1\"\r\n              onClick={(e) => handleActionClick(e, () => onAddChild(node))}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      {node.children &&\r\n        node.children.map((child) => (\r\n          <Holon\r\n            key={child.id}\r\n            node={child}\r\n            onAddChild={onAddChild}\r\n            onRemoveNode={onRemoveNode}\r\n            onSelectNode={onSelectNode}\r\n            isSelected={isSelected}\r\n          />\r\n        ))}\r\n    </TreeNode>\r\n  );\r\n};\r\n\r\nconst StructurePage = ({\r\n  nodes,\r\n  onAddChild,\r\n  onRemoveNode,\r\n  onSelectNode,\r\n  selectedNode,\r\n}) => {\r\n  const isSelected = (node) => selectedNode && node.id === selectedNode.id;\r\n\r\n  return (\r\n    <div>\r\n      <Tree\r\n        lineWidth={\"2px\"}\r\n        lineColor={\"blue\"}\r\n        lineBorderRadius={\"5px\"}\r\n        lineStyle={\"dashed\"}\r\n      >\r\n        <Holon\r\n          node={nodes}\r\n          onAddChild={onAddChild}\r\n          onRemoveNode={onRemoveNode}\r\n          onSelectNode={onSelectNode}\r\n          isSelected={isSelected}\r\n        />\r\n      </Tree>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const initialNodes = {\r\n    id: \"root\",\r\n    name: \"Information System\",\r\n    description:\r\n      \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\",\r\n    children: [\r\n      {\r\n        id: \"Stakeholder\",\r\n        name: \"Stakeholder\",\r\n        description:\r\n          \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\",\r\n        children: [],\r\n      },\r\n      {\r\n        id: \"Infrastructure\",\r\n        name: \"Infrastructure\",\r\n        description:\r\n          \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\",\r\n        children: [],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [nodeType, setNodeType] = useState(\"\");\r\n  const [nodeName, setNodeName] = useState(\"\");\r\n  const [activeStep, setActiveStep] = useState(1);\r\n  const [reactFlowNodes, setReactFlowNodes, onNodesChange] = useNodesState(initNodes);\r\n  const [reactFlowEdges, setReactFlowEdges, onEdgesChange] = useEdgesState(initEdges);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n    setNodeName(\"\");\r\n  };\r\n\r\n  const handleModalShow = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onAddChild = (parentNode) => {\r\n    setSelectedNode(parentNode);\r\n    setNodeType(\"child\");\r\n    handleModalShow();\r\n  };\r\n\r\n  const onRemoveNode = (nodeId) => {\r\n    const removeNode = (nodes, nodeIdToRemove) => {\r\n      if (nodes.id === nodeIdToRemove) {\r\n        return null;\r\n      }\r\n      nodes.children = nodes.children.filter(\r\n        (child) => child.id !== nodeIdToRemove\r\n      );\r\n      nodes.children.forEach((child) => removeNode(child, nodeIdToRemove));\r\n      return nodes;\r\n    };\r\n\r\n    const newNodes = removeNode({ ...nodes }, nodeId);\r\n    setNodes(newNodes);\r\n    setSelectedNode(null);\r\n  };\r\n\r\n  const addNewRoot = () => {\r\n    setSelectedNode(nodes);\r\n    setNodeType(\"parent\");\r\n    handleModalShow();\r\n  };\r\n\r\n  const handleNodeTypeSelection = (type) => {\r\n    setNodeType(type);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const newNode = {\r\n      id: `${selectedNode.id}-${Math.random()}`,\r\n      name: nodeName,\r\n      data: {\r\n        label: nodeName,\r\n      },\r\n      children: [],\r\n    };\r\n    if (nodeType === \"child\") {\r\n      const addNode = (nodes, parentId) => {\r\n        if (nodes.id === parentId) {\r\n          nodes.children.push(newNode);\r\n          return;\r\n        }\r\n        nodes.children.forEach((child) => addNode(child, parentId));\r\n      };\r\n\r\n      const newNodes = { ...nodes };\r\n      addNode(newNodes, selectedNode.id);\r\n      setNodes(newNodes);\r\n    } else if (nodeType === \"parent\") {\r\n      const newParent = {\r\n        id: `root-${Math.random()}`,\r\n        name: nodeName,\r\n        children: [selectedNode],\r\n      };\r\n      setNodes(newParent);\r\n    }\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Header Section with Styling */}\r\n      <div className=\"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\">\r\n        <div\r\n          className={`step me-3 ${activeStep === 1 ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveStep(1)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <div\r\n            className={`step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${\r\n              activeStep === 1 ? \"bg-primary\" : \"bg-secondary\"\r\n            }`}\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          >\r\n            1\r\n          </div>\r\n          <div\r\n            className={`ms-2 fw-bold ${\r\n              activeStep === 1 ? \"text-primary\" : \"text-secondary\"\r\n            }`}\r\n          >\r\n            Structure\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`step ${activeStep === 2 ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveStep(2)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <div\r\n            className={`step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${\r\n              activeStep === 2 ? \"bg-primary\" : \"bg-secondary\"\r\n            }`}\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          >\r\n            2\r\n          </div>\r\n          <div\r\n            className={`ms-2 fw-bold ${\r\n              activeStep === 2 ? \"text-primary\" : \"text-secondary\"\r\n            }`}\r\n          >\r\n            Communication\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Section */}\r\n      <div className=\"row p-3\">\r\n        <div className=\"col-md-8\">\r\n          {activeStep === 1 ? (\r\n            <InfrastructureReactFlow\r\n              nodes={reactFlowNodes}\r\n              edges={reactFlowEdges}\r\n              onNodesChange={onNodesChange}\r\n              onEdgesChange={onEdgesChange}\r\n              setNodes={setReactFlowNodes}\r\n              setEdges={setReactFlowEdges}\r\n              setSelectedNode={setSelectedNode}\r\n            />\r\n          ) : (\r\n            <CommunicationReactFlow\r\n              nodes={reactFlowNodes}\r\n              edges={reactFlowEdges}\r\n              onNodesChange={onNodesChange}\r\n              onEdgesChange={onEdgesChange}\r\n              setNodes={setReactFlowNodes}\r\n              setEdges={setReactFlowEdges}\r\n              setSelectedNode={setSelectedNode}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h2>Holon Details</h2>\r\n          {selectedNode ? (\r\n            <>\r\n              <p>\r\n                <strong>Name:</strong> {selectedNode.data?.label || selectedNode.name}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong>{\" \"}\r\n                {selectedNode.data?.description || selectedNode.description || \"No description available.\"}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <p>No Selection</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for Adding Nodes */}\r\n      <Modal show={showModal} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Select Node Type</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ToggleButtonGroup\r\n            type=\"radio\"\r\n            name=\"nodeType\"\r\n            value={nodeType}\r\n            onChange={(value) => handleNodeTypeSelection(value)}\r\n            className=\"mb-3\"\r\n          >\r\n            <ToggleButton value=\"child\" variant=\"outline-primary\">\r\n              Child Node\r\n            </ToggleButton>\r\n            <ToggleButton value=\"parent\" variant=\"outline-primary\">\r\n              Parent Node\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          {nodeType && (\r\n            <Form.Group controlId=\"formNodeName\">\r\n              <Form.Label>Enter the name for the Node</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={nodeName}\r\n                onChange={(e) => setNodeName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit} disabled={!nodeType}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}