{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, MarkerType } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNode, setDestinationNode] = useState();\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [selectedInformationFlow, setSelectedInformationFlow] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [disableAdd, setDisableAdd] = useState(false);\n  const [resetFlow, setResetFlow] = useState(false);\n  const [isAlertModalOpen, setIsAlertModalOpen] = useState(false); // New state for alert modal\n  const [alertMessage, setAlertMessage] = useState(\"\"); // New state for alert message\n\n  const [informationFlows, setInformationFlows] = useState([]);\n  const [selectedInformationFlows, setSelectedInformationFlows] = useState([]);\n  const [selectedFlowShow, setSelectedFlowShow] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const handleNodeClick = (event, nodeData) => {\n    const clickedNode = nodes.find(n => n.id === nodeData.id) || nodeData;\n    setSelectedNode(clickedNode);\n    if (enableInformationFlow) {\n      setResetFlow(false);\n      if (!sourceNode) {\n        setSourceNode(clickedNode);\n        setNodes(nds => nds.map(n => n.id === clickedNode.id ? {\n          ...n,\n          style: {\n            border: \"2px solid blue\"\n          }\n        } : n));\n      } else if (sourceNode.id !== clickedNode.id) {\n        const levelTolerance = 15;\n        if (Math.abs(sourceNode.position.y - clickedNode.position.y) > levelTolerance) {\n          // Show Bootstrap-styled alert modal\n          setAlertMessage(\"Source and destination nodes must be on the same level.\");\n          setIsAlertModalOpen(true);\n          return;\n        }\n\n        // Rest of the logic for adding information flow...\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      width: \"98vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isAlertModalOpen,\n      onRequestClose: () => setIsAlertModalOpen(false),\n      style: {\n        overlay: {\n          backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n        },\n        content: {\n          top: \"50%\",\n          left: \"50%\",\n          right: \"auto\",\n          bottom: \"auto\",\n          marginRight: \"-50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: \"400px\",\n          height: \"auto\",\n          padding: \"20px\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\"\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Alert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsAlertModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setIsAlertModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"36bgwBpQVif1Yhdy648sl5QS/wI=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","ReactFlow","addEdge","useNodesState","useEdgesState","MarkerType","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sourceNode","setSourceNode","destinationNode","setDestinationNode","selectedNode","setSelectedNode","selectedInformationFlow","setSelectedInformationFlow","isModalOpen","setIsModalOpen","enableInformationFlow","setEnableInformationFlow","newNodeLabel","setNewNodeLabel","disableAdd","setDisableAdd","resetFlow","setResetFlow","isAlertModalOpen","setIsAlertModalOpen","alertMessage","setAlertMessage","informationFlows","setInformationFlows","selectedInformationFlows","setSelectedInformationFlows","selectedFlowShow","setSelectedFlowShow","onConnect","params","eds","handleNodeClick","event","nodeData","clickedNode","find","n","id","nds","map","style","border","levelTolerance","Math","abs","position","y","className","display","height","width","children","isOpen","onRequestClose","overlay","backgroundColor","content","top","left","right","bottom","marginRight","transform","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNode, setDestinationNode] = useState();\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [selectedInformationFlow, setSelectedInformationFlow] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [disableAdd, setDisableAdd] = useState(false);\r\n  const [resetFlow, setResetFlow] = useState(false);\r\n  const [isAlertModalOpen, setIsAlertModalOpen] = useState(false); // New state for alert modal\r\n  const [alertMessage, setAlertMessage] = useState(\"\"); // New state for alert message\r\n\r\n  const [informationFlows, setInformationFlows] = useState([]);\r\n  const [selectedInformationFlows, setSelectedInformationFlows] = useState([]);\r\n  const [selectedFlowShow, setSelectedFlowShow] = useState(false);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const handleNodeClick = (event, nodeData) => {\r\n    const clickedNode = nodes.find((n) => n.id === nodeData.id) || nodeData;\r\n    setSelectedNode(clickedNode);\r\n\r\n    if (enableInformationFlow) {\r\n      setResetFlow(false);\r\n      if (!sourceNode) {\r\n        setSourceNode(clickedNode);\r\n        setNodes((nds) =>\r\n          nds.map((n) =>\r\n            n.id === clickedNode.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n          )\r\n        );\r\n      } else if (sourceNode.id !== clickedNode.id) {\r\n        const levelTolerance = 15;\r\n        if (Math.abs(sourceNode.position.y - clickedNode.position.y) > levelTolerance) {\r\n          // Show Bootstrap-styled alert modal\r\n          setAlertMessage(\"Source and destination nodes must be on the same level.\");\r\n          setIsAlertModalOpen(true);\r\n          return;\r\n        }\r\n\r\n        // Rest of the logic for adding information flow...\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\", width: \"98vw\" }}\r\n    >\r\n      {/* Existing JSX code... */}\r\n\r\n      {/* Bootstrap-styled Alert Modal */}\r\n      <Modal\r\n        isOpen={isAlertModalOpen}\r\n        onRequestClose={() => setIsAlertModalOpen(false)}\r\n        style={{\r\n          overlay: {\r\n            backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n          content: {\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            right: \"auto\",\r\n            bottom: \"auto\",\r\n            marginRight: \"-50%\",\r\n            transform: \"translate(-50%, -50%)\",\r\n            width: \"400px\",\r\n            height: \"auto\",\r\n            padding: \"20px\",\r\n            borderRadius: \"8px\",\r\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\r\n          },\r\n        }}\r\n      >\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">Alert</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsAlertModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <p>{alertMessage}</p>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setIsAlertModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}