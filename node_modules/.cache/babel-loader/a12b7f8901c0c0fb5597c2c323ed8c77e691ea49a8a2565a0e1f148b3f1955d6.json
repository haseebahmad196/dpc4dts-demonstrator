{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null); // 'child' or 'parent'\n\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const handleAddNode = type => {\n    setModalType(type);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    // Handle adding child or parent node based on modalType\n    const nodeName = prompt(`Enter the name of the ${modalType === 'child' ? 'child' : 'parent'} node:`);\n    if (!nodeName) return;\n    if (modalType === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (modalType === 'parent') {\n      addNewRoot(node, nodeName);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => handleAddNode('child')),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalType === 'child' ? 'Add Child Node' : 'Add Parent Node'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Enter the name of the \", modalType === 'child' ? 'child' : 'parent', \" node:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nodeName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleConfirmModal,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Holon, \"Qp5vb2jcwSSqkKHSjZEhfahBaMo=\");\n_c = Holon;\nconst App = () => {\n  _s2();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = (parentNode, isRoot = false, nodeName) => {\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const addNewRoot = (parentNode, nodeName) => {\n    const newParent = {\n      id: `root-${Math.random()}`,\n      name: nodeName,\n      children: [parentNode]\n    };\n    setNodes(newParent);\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: isSelected,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","_s","showModal","setShowModal","modalType","setModalType","handleActionClick","e","action","stopPropagation","selected","handleAddNode","type","handleCloseModal","handleConfirmModal","nodeName","prompt","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","show","onHide","Header","closeButton","Title","Body","Footer","variant","_c","App","_s2","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","isRoot","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newParent","nodeId","removeNode","nodeIdToRemove","filter","console","log","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [modalType, setModalType] = useState(null); // 'child' or 'parent'\n\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  const handleAddNode = (type) => {\n    setModalType(type);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    // Handle adding child or parent node based on modalType\n    const nodeName = prompt(`Enter the name of the ${modalType === 'child' ? 'child' : 'parent'} node:`);\n    if (!nodeName) return;\n\n    if (modalType === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (modalType === 'parent') {\n      addNewRoot(node, nodeName);\n    }\n  };\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => handleAddNode('child'))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n          addNewRoot={addNewRoot}\n        />\n      ))}\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>{modalType === 'child' ? 'Add Child Node' : 'Add Parent Node'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>Enter the name of the {modalType === 'child' ? 'child' : 'parent'} node:</p>\n          <input type=\"text\" id=\"nodeName\" />\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmModal}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode, isRoot = false, nodeName) => {\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const addNewRoot = (parentNode, nodeName) => {\n    const newParent = {\n      id: `root-${Math.random()}`,\n      name: nodeName,\n      children: [parentNode]\n    };\n\n    setNodes(newParent);\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={onSelectNode}\n            isSelected={isSelected}\n            addNewRoot={addNewRoot}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}