{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\StructurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport './styles.css'; // Import custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [isChild, setIsChild] = useState(false);\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const handleAddChild = () => {\n    setIsChild(true);\n    setShowModal(true);\n  };\n  const handleAddParent = () => {\n    setIsChild(false);\n    setShowModal(true);\n  };\n  const handleModalClose = () => {\n    setShowModal(false);\n  };\n  const handleAddClick = () => {\n    setShowModal(true);\n  };\n  const handleNodeClick = () => {\n    onSelectNode(node);\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: handleNodeClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          className: \"me-1\",\n          onClick: e => handleActionClick(e, handleAddChild),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: isChild ? 'Add Child Node' : 'Add Parent Node'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [!isChild && /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: \"Parent Node\",\n          checked: !isChild,\n          onChange: () => setIsChild(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"radio\",\n          label: \"Child Node\",\n          checked: isChild,\n          onChange: () => setIsChild(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => onAddChild(node, isChild),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Holon, \"ZllybWrUQ0nxWXfSK8plbv4CbCc=\");\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        lineStyle: \"dashed\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: node => isSelected && node.id === isSelected.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_c2 = StructurePage;\nexport default StructurePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","Modal","Button","Form","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","_s","showModal","setShowModal","isChild","setIsChild","handleActionClick","e","action","stopPropagation","selected","handleAddChild","handleAddParent","handleModalClose","handleAddClick","handleNodeClick","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","id","show","onHide","Header","closeButton","Title","Body","Check","type","checked","onChange","Footer","map","child","_c","StructurePage","nodes","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/StructurePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport './styles.css'; // Import custom styles\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [isChild, setIsChild] = useState(false);\r\n\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    const handleAddChild = () => {\r\n        setIsChild(true);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleAddParent = () => {\r\n        setIsChild(false);\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n    };\r\n\r\n    const handleAddClick = () => {\r\n        setShowModal(true);\r\n    };\r\n\r\n    const handleNodeClick = () => {\r\n        onSelectNode(node);\r\n    };\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={handleNodeClick}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <Button variant=\"primary\" size=\"sm\" className=\"me-1\" onClick={(e) => handleActionClick(e, handleAddChild)}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </Button>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            <Modal show={showModal} onHide={handleModalClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{isChild ? 'Add Child Node' : 'Add Parent Node'}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {!isChild && (\r\n                        <Form.Check \r\n                            type=\"radio\"\r\n                            label=\"Parent Node\"\r\n                            checked={!isChild}\r\n                            onChange={() => setIsChild(false)}\r\n                        />\r\n                    )}\r\n                    <Form.Check \r\n                        type=\"radio\"\r\n                        label=\"Child Node\"\r\n                        checked={isChild}\r\n                        onChange={() => setIsChild(true)}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleModalClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={() => onAddChild(node, isChild)}>\r\n                        Add\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"tree-container\">\r\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                    <Holon\r\n                        node={nodes}\r\n                        onAddChild={onAddChild}\r\n                        onRemoveNode={onRemoveNode}\r\n                        onSelectNode={onSelectNode}\r\n                        isSelected={(node) => isSelected && node.id === isSelected.id}\r\n                    />\r\n                </Tree>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StructurePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}