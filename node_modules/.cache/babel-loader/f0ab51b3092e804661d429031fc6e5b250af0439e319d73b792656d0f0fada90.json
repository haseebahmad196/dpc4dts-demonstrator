{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\n// Components import\nimport ProcessView from './components/ProcessView';\nimport CanvasView from './components/CanvasView';\nimport ToolsView from './components/ToolsView';\nimport DetailView from './components/DetailView';\n\n// Initial system structure\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialSystem = {\n  id: uuidv4(),\n  name: 'Information System',\n  description: 'The root of the information system.',\n  children: [{\n    id: uuidv4(),\n    name: 'Stakeholder',\n    description: 'A stakeholder in the information system.',\n    children: []\n  }, {\n    id: uuidv4(),\n    name: 'Infrastructure',\n    description: 'The infrastructure of the information system.',\n    children: []\n  }]\n};\nfunction App() {\n  _s();\n  const [system, setSystem] = useState(initialSystem);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Callbacks for manipulating the system\n  const addHolon = useCallback((parentHolonId, newHolonData) => {\n    // Logic to add a holon\n  }, [system]);\n  const removeHolon = useCallback(holonId => {\n    // Logic to remove a holon\n  }, [system]);\n  const updateHolonDetails = useCallback((holonId, updatedDetails) => {\n    // Logic to update holon details\n  }, [system]);\n  const exportSystem = useCallback(() => {\n    // Logic to export system structure as JSON\n  }, [system]);\n  const importSystem = useCallback(importedSystem => {\n    // Logic to import system structure from JSON\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(ProcessView, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CanvasView, {\n        system: system,\n        onSelect: setSelectedHolon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(ToolsView, {\n        exportSystem: exportSystem,\n        importSystem: importSystem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DetailView, {\n        holon: selectedHolon,\n        updateHolonDetails: updateHolonDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zu7I234Q/cpADzSi9l+j+yufnYU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","v4","uuidv4","ProcessView","CanvasView","ToolsView","DetailView","jsxDEV","_jsxDEV","initialSystem","id","name","description","children","App","_s","system","setSystem","selectedHolon","setSelectedHolon","addHolon","parentHolonId","newHolonData","removeHolon","holonId","updateHolonDetails","updatedDetails","exportSystem","importSystem","importedSystem","className","fileName","_jsxFileName","lineNumber","columnNumber","onSelect","holon","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\n// Components import\nimport ProcessView from './components/ProcessView';\nimport CanvasView from './components/CanvasView';\nimport ToolsView from './components/ToolsView';\nimport DetailView from './components/DetailView';\n\n// Initial system structure\nconst initialSystem = {\n  id: uuidv4(),\n  name: 'Information System',\n  description: 'The root of the information system.',\n  children: [\n    {\n      id: uuidv4(),\n      name: 'Stakeholder',\n      description: 'A stakeholder in the information system.',\n      children: [],\n    },\n    {\n      id: uuidv4(),\n      name: 'Infrastructure',\n      description: 'The infrastructure of the information system.',\n      children: [],\n    },\n  ],\n};\n\nfunction App() {\n  const [system, setSystem] = useState(initialSystem);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  // Callbacks for manipulating the system\n  const addHolon = useCallback((parentHolonId, newHolonData) => {\n    // Logic to add a holon\n  }, [system]);\n\n  const removeHolon = useCallback((holonId) => {\n    // Logic to remove a holon\n  }, [system]);\n\n  const updateHolonDetails = useCallback((holonId, updatedDetails) => {\n    // Logic to update holon details\n  }, [system]);\n\n  const exportSystem = useCallback(() => {\n    // Logic to export system structure as JSON\n  }, [system]);\n\n  const importSystem = useCallback((importedSystem) => {\n    // Logic to import system structure from JSON\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"left-panel\">\n        <ProcessView />\n        <CanvasView system={system} onSelect={setSelectedHolon} />\n      </div>\n      <div className=\"right-panel\">\n        <ToolsView exportSystem={exportSystem} importSystem={importSystem} />\n        <DetailView holon={selectedHolon} updateHolonDetails={updateHolonDetails} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}