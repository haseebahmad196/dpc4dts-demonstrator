{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [parentNodeId, setParentNodeId] = useState(\"\");\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNode, setDestinationNode] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [disableAdd, setDisableAdd] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const findPath = (sourceId, targetId) => {\n    const visited = new Set();\n    const queue = [[sourceId]];\n    while (queue.length > 0) {\n      const path = queue.shift();\n      const node = path[path.length - 1];\n      if (node === targetId) {\n        return path;\n      }\n      if (!visited.has(node)) {\n        visited.add(node);\n        edges.filter(edge => edge.source === node || edge.target === node).forEach(edge => {\n          const nextNode = edge.source === node ? edge.target : edge.source;\n          queue.push([...path, nextNode]);\n        });\n      }\n    }\n    return [];\n  };\n  const handleNodeClick = id => {\n    let node = nodes.find(element => element.id == id);\n    console.log(id);\n    console.log(props.nodes);\n    if (!sourceNode) {\n      setSelectedNode(null);\n      setSourceNode(node);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n));\n    } else if (!destinationNode) {\n      setDestinationNode(node);\n      setSelectedNode(node);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid green\"\n        }\n      } : n));\n      const path = findPath(sourceNode.id, node.id);\n      setEdges(eds => eds.map(edge => {\n        const isInPath = path.includes(edge.source) && path.includes(edge.target);\n        return {\n          ...edge,\n          animated: isInPath,\n          style: {\n            stroke: isInPath ? \"green\" : \"black\"\n          }\n        };\n      }));\n    } else {\n      setSourceNode(node);\n      setDestinationNode(null);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : {\n        ...n,\n        style: {\n          border: \"none\"\n        }\n      }));\n      setEdges(eds => eds.map(edge => ({\n        ...edge,\n        animated: false,\n        style: {\n          stroke: \"black\"\n        }\n      })));\n    }\n  };\n  const addButtonClicked = id => {\n    let node = nodes.find(element => element.id == id);\n    console.log(id);\n    console.log(props.nodes);\n    if (!destinationNode && sourceNode) {\n      setDestinationNode(node);\n      setSelectedNode(node);\n      setDisableAdd(true);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid green\"\n        }\n      } : n));\n      const path = findPath(sourceNode.id, node.id);\n      setEdges(eds => eds.map(edge => {\n        const isInPath = path.includes(edge.source) && path.includes(edge.target);\n        return {\n          ...edge,\n          animated: isInPath,\n          style: {\n            stroke: isInPath ? \"green\" : \"black\"\n          }\n        };\n      }));\n      setAlertMessage(\"\");\n    }\n  };\n  const nodeSelected = (event, nodeData) => {\n    let node = nodes.find(element => element.id == nodeData.id);\n    console.log(nodeData);\n    console.log(node);\n    if (!sourceNode && !destinationNode) {\n      setSourceNode(node);\n      setAlertMessage(\"Please select the destination node.\");\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n));\n\n      // Show the toast message\n      let toastElement = document.getElementById('nodeToast');\n      let toast = new bootstrap.Toast(toastElement);\n      toast.show();\n    }\n  };\n  const resetSelection = () => {\n    setSourceNode(null);\n    setDestinationNode(null);\n    setSelectedNode(null);\n    setNodes(nds => nds.map(n => ({\n      ...n,\n      style: {\n        border: \"none\"\n      }\n    })));\n    setDisableAdd(false);\n    setEdges(eds => eds.map(edge => ({\n      ...edge,\n      animated: false,\n      style: {\n        stroke: \"black\"\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      weight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: resetSelection,\n          children: \"Reset Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            nodeClicked: addButtonClicked,\n            disable: disableAdd\n          }\n        })),\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        onNodeClick: nodeSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      style: {\n        padding: \"10px\",\n        borderLeft: \"1px solid #ccc\"\n      },\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameofNode\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nameofNode\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                label: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"nodeDescription\",\n            className: \"form-control\",\n            style: {\n              height: \"200px\"\n            },\n            placeholder: \"An example description...\",\n            value: selectedNode.data.description || \"\",\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                description: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeInfoFlows\",\n            children: \"Information Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nodeInfoFlows\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Node Selected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), \" \", sourceNode.data.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: sourceNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-primary alert-dismissible fade show\",\n            role: \"alert\",\n            children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"alert\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newNodeLabel\",\n            children: \"New Node Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newNodeLabel\",\n            className: \"form-control\",\n            placeholder: \"New Node Label\",\n            value: newNodeLabel,\n            onChange: e => setNewNodeLabel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setNodes(nds => [...nds, {\n              id: `${nds.length + 1}`,\n              type: \"customNode\",\n              data: {\n                label: newNodeLabel\n              },\n              position: {\n                x: Math.random() * 400,\n                y: Math.random() * 400\n              }\n            }]);\n            setIsModalOpen(false);\n            setNewNodeLabel(\"\");\n          },\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"nodeToast\",\n      className: \"toast align-items-center text-bg-primary border-0\",\n      role: \"alert\",\n      \"aria-live\": \"assertive\",\n      \"aria-atomic\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toast-body\",\n          children: \"Please select the destination node.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close btn-close-white me-2 m-auto\",\n          \"data-bs-dismiss\": \"toast\",\n          \"aria-label\": \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"3l/wp0Y9FFIGR4Xl8zQ4otWF7Lk=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","parentNodeId","setParentNodeId","newNodeLabel","setNewNodeLabel","selectedNode","setSelectedNode","isModalOpen","setIsModalOpen","sourceNode","setSourceNode","destinationNode","setDestinationNode","alertMessage","setAlertMessage","disableAdd","setDisableAdd","onConnect","params","eds","findPath","sourceId","targetId","visited","Set","queue","length","path","shift","node","has","add","filter","edge","source","target","forEach","nextNode","push","handleNodeClick","id","find","element","console","log","nds","map","n","style","border","isInPath","includes","animated","stroke","addButtonClicked","nodeSelected","event","nodeData","toastElement","document","getElementById","toast","bootstrap","Toast","show","resetSelection","className","display","height","weight","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","nodeClicked","disable","fitView","onNodeClick","borderLeft","htmlFor","type","value","label","onChange","e","placeholder","description","readOnly","role","isOpen","onRequestClose","position","x","Math","random","y","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [parentNodeId, setParentNodeId] = useState(\"\");\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNode, setDestinationNode] = useState(null);\r\n  const [alertMessage, setAlertMessage] = useState(\"\")\r\n  const [disableAdd, setDisableAdd] = useState(false);\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n  \r\n\r\n  const findPath = (sourceId, targetId) => {\r\n    const visited = new Set();\r\n    const queue = [[sourceId]];\r\n\r\n    while (queue.length > 0) {\r\n      const path = queue.shift();\r\n      const node = path[path.length - 1];\r\n\r\n      if (node === targetId) {\r\n        return path;\r\n      }\r\n\r\n      if (!visited.has(node)) {\r\n        visited.add(node);\r\n        edges\r\n          .filter((edge) => edge.source === node || edge.target === node)\r\n          .forEach((edge) => {\r\n            const nextNode = edge.source === node ? edge.target : edge.source;\r\n            queue.push([...path, nextNode]);\r\n          });\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const handleNodeClick = (id) => {\r\n    let node = nodes.find((element) => element.id == id);\r\n    console.log(id);\r\n    console.log(props.nodes);\r\n    if (!sourceNode) {\r\n      setSelectedNode(null);\r\n      setSourceNode(node);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n        )\r\n      );\r\n    } else if (!destinationNode) {\r\n      setDestinationNode(node);\r\n      setSelectedNode(node);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid green\" } } : n\r\n        )\r\n      );\r\n      const path = findPath(sourceNode.id, node.id);\r\n      setEdges((eds) =>\r\n        eds.map((edge) => {\r\n          const isInPath =\r\n            path.includes(edge.source) && path.includes(edge.target);\r\n          return {\r\n            ...edge,\r\n            animated: isInPath,\r\n            style: { stroke: isInPath ? \"green\" : \"black\" },\r\n          };\r\n        })\r\n      );\r\n    } else {\r\n      setSourceNode(node);\r\n      setDestinationNode(null);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id\r\n            ? { ...n, style: { border: \"2px solid blue\" } }\r\n            : { ...n, style: { border: \"none\" } }\r\n        )\r\n      );\r\n      setEdges((eds) =>\r\n        eds.map((edge) => ({\r\n          ...edge,\r\n          animated: false,\r\n          style: { stroke: \"black\" },\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const addButtonClicked = (id) => {\r\n    let node = nodes.find((element) => element.id == id);\r\n    console.log(id);\r\n    console.log(props.nodes);\r\n    if (!destinationNode && sourceNode) {\r\n      setDestinationNode(node);\r\n      setSelectedNode(node);\r\n      setDisableAdd(true);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid green\" } } : n\r\n        )\r\n      );\r\n      const path = findPath(sourceNode.id, node.id);\r\n      setEdges((eds) =>\r\n        eds.map((edge) => {\r\n          const isInPath =\r\n            path.includes(edge.source) && path.includes(edge.target);\r\n          return {\r\n            ...edge,\r\n            animated: isInPath,\r\n            style: { stroke: isInPath ? \"green\" : \"black\" },\r\n          };\r\n        })\r\n      );\r\n\r\n      setAlertMessage(\"\")\r\n    }\r\n  };\r\n\r\n  const nodeSelected = (event, nodeData) => {\r\n    let node = nodes.find((element) => element.id == nodeData.id);\r\n    console.log(nodeData);\r\n    console.log(node);\r\n    if (!sourceNode && !destinationNode) {\r\n      setSourceNode(node);\r\n      setAlertMessage(\"Please select the destination node.\")\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n        )\r\n      );\r\n\r\n      // Show the toast message\r\n      let toastElement = document.getElementById('nodeToast');\r\n      let toast = new bootstrap.Toast(toastElement);\r\n      toast.show();\r\n    }\r\n  };\r\n\r\n  const resetSelection = () => {\r\n    setSourceNode(null);\r\n    setDestinationNode(null);\r\n    setSelectedNode(null);\r\n    setNodes((nds) => nds.map((n) => ({ ...n, style: { border: \"none\" } })));\r\n    setDisableAdd(false);\r\n    setEdges((eds) =>\r\n      eds.map((edge) => ({\r\n        ...edge,\r\n        animated: false,\r\n        style: { stroke: \"black\" },\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\", weight:\"100vh\" }}\r\n    >\r\n      <div className=\"col-9\" style={{ height: \"100%\" }}>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h3>Add Node</h3>\r\n          <button className=\"btn btn-secondary\" onClick={resetSelection}>\r\n            Reset Selection\r\n          </button>\r\n        </div>\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes.map((node) => ({\r\n            ...node,\r\n            data: {\r\n              ...node.data,\r\n              nodeClicked: addButtonClicked,\r\n              disable: disableAdd,\r\n            },\r\n          }))}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          onNodeClick={nodeSelected}\r\n        />\r\n        \r\n      </div>\r\n\r\n      <div\r\n        className=\"col-3\"\r\n        style={{ padding: \"10px\", borderLeft: \"1px solid #ccc\"}}\r\n      >\r\n        {selectedNode ? (\r\n          <>\r\n            <h3>Holon Details</h3>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nameofNode\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nameofNode\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, label: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeDescription\">Description</label>\r\n              <textarea\r\n                id=\"nodeDescription\"\r\n                className=\"form-control\"\r\n                style={{ height: \"200px\" }}\r\n                placeholder=\"An example description...\"\r\n                value={selectedNode.data.description || \"\"}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, description: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeInfoFlows\">Information Flows</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nodeInfoFlows\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                readOnly\r\n              />\r\n            </div>\r\n           \r\n            <div className=\"mt-3 alert alert-info\">\r\n              <strong>Node Selected:</strong> {sourceNode.data.label}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n          \r\n          {sourceNode ? <>\r\n            <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n              {alertMessage}\r\n              <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n</div></> : <div>No Selection</div>}\r\n          </>\r\n        )}\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">Add Node</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"newNodeLabel\">New Node Label</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newNodeLabel\"\r\n              className=\"form-control\"\r\n              placeholder=\"New Node Label\"\r\n              value={newNodeLabel}\r\n              onChange={(e) => setNewNodeLabel(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setNodes((nds) => [\r\n                ...nds,\r\n                {\r\n                  id: `${nds.length + 1}`,\r\n                  type: \"customNode\",\r\n                  data: { label: newNodeLabel },\r\n                  position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n                },\r\n              ]);\r\n              setIsModalOpen(false);\r\n              setNewNodeLabel(\"\");\r\n            }}\r\n          >\r\n            Add Node\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n\r\n      <div id=\"nodeToast\" className=\"toast align-items-center text-bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n        <div className=\"d-flex\">\r\n          <div className=\"toast-body\">\r\n            Please select the destination node.\r\n          </div>\r\n          <button type=\"button\" className=\"btn-close btn-close-white me-2 m-auto\" data-bs-dismiss=\"toast\" aria-label=\"Close\"></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}