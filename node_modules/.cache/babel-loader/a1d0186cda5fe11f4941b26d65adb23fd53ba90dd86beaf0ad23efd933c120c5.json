{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected && isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this),\n    onClick: () => onSelectNode && onSelectNode(node),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StructurePage;\nconst CommunicationPage = () => {\n  _s();\n  let {\n    holonId\n  } = useParams();\n  // Placeholder for fetching the selected holon's details based on holonId\n  // This should ideally fetch from the state or context where your holons are managed\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-name\",\n        children: [\"Name: Placeholder Name for \", holonId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-description\",\n        children: [\"Description: Placeholder Description for \", holonId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(CommunicationPage, \"UX6lP1dOrzFm2JagE9bKPPr2QIE=\", false, function () {\n  return [useParams];\n});\n_c3 = CommunicationPage;\nconst App = () => {\n  _s2();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(StructurePage, {\n          nodes: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: setSelectedHolon,\n          isSelected: isSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/communication/:holonId\",\n        element: /*#__PURE__*/_jsxDEV(CommunicationPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");\n$RefreshReg$(_c3, \"CommunicationPage\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Link","useParams","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","map","child","_c","StructurePage","nodes","lineWidth","lineColor","lineBorderRadius","_c2","CommunicationPage","_s","holonId","_c3","App","_s2","initialNodes","setNodes","selectedHolon","setSelectedHolon","parentNode","childName","prompt","newChild","Math","random","addNode","parentId","push","forEach","newNodes","nodeId","removeNode","nodeIdToRemove","filter","path","element","_c4","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Link, useParams } from 'react-router-dom';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected && isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    } onClick={() => onSelectNode && onSelectNode(node)}>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={nodes}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      </Tree>\n    </div>\n  );\n};\n\nconst CommunicationPage = () => {\n  let { holonId } = useParams();\n  // Placeholder for fetching the selected holon's details based on holonId\n  // This should ideally fetch from the state or context where your holons are managed\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"holon-details\">\n        <h2>Holon Details</h2>\n        <p className='holon-details-name'>Name: Placeholder Name for {holonId}</p>\n        <p className='holon-details-description'>Description: Placeholder Description for {holonId}</p>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        children: [],\n      },\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n\n      nodes.children.forEach((child) => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter((child) => child.id !== nodeIdToRemove);\n      nodes.children.forEach((child) => removeNode(child, nodeIdToRemove));\n    };\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={\n          <StructurePage\n            nodes={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={setSelectedHolon}\n            isSelected={isSelected}\n          />\n        } />\n        <Route path=\"/communication/:holonId\" element={<CommunicationPage />} />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}