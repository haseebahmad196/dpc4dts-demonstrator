{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected\n}) => {\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = (parentNode, isRoot = false) => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = prompt('Enter the name of the node:');\n    if (!nodeName) return;\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [parentNode]\n      };\n      setNodes(newParent);\n    }\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: setSelectedHolon,\n          isSelected: isSelected,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onSelectNode","isSelected","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","map","child","id","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","onAddChild","parentNode","isRoot","relationshipType","prompt","nodeName","toLowerCase","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newParent","onRemoveNode","nodeId","removeNode","nodeIdToRemove","filter","addNewRoot","rootName","newRoot","console","log","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onSelectNode, isSelected }) => {\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode, isRoot = false) => {\n    const relationshipType = prompt('Enter \"child\" to add a child node or \"parent\" to add this as a child to a new root:');\n    const nodeName = prompt('Enter the name of the node:');\n\n    if (!nodeName) return;\n\n    if (relationshipType.toLowerCase() === \"child\") {\n      const newChild = {\n        id: `${parentNode.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNode(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (relationshipType.toLowerCase() === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [parentNode]\n      };\n\n      setNodes(newParent);\n    }\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const addNewRoot = () => {\n    const rootName = prompt('Enter the name for the new root:');\n    if (!rootName) return;\n\n    const newRoot = {\n      id: `root-${Math.random()}`,\n      name: rootName,\n      children: [nodes]\n    };\n\n    setNodes(newRoot);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={setSelectedHolon}\n            isSelected={isSelected}\n            addNewRoot={addNewRoot}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}