{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAdd,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAdd(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAdd: onAdd,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAdd = parentNode => {\n    const nodeType = prompt('Add as (1) Child or (2) Parent? Enter 1 or 2:');\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n    const newNode = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === '1') {\n      // Add as child\n      const addNodeAsChild = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children = [...nodes.children, newNode];\n          return true;\n        }\n        return nodes.children.some(child => addNodeAsChild(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNodeAsChild(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (nodeType === '2' && parentNode.id === 'root') {\n      // Add as parent only if root\n      newNode.children = [{\n        ...nodes\n      }];\n      setNodes(newNode);\n    }\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n    if (nodeId === 'root') return; // Prevent root removal for safety\n\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Reset selection when a node is removed\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAdd: onAdd,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-name\",\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-description\",\n        children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jxsC05GNX/HYyDzVyEe6iP+wR0g=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAdd","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","parentNode","nodeType","prompt","nodeName","newNode","Math","random","addNodeAsChild","parentId","some","newNodes","nodeId","removeNode","nodeIdToRemove","filter","forEach","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAdd, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAdd(node))}>+</button>\n        </div>\n        <div className=\"name\">{node.name}</div>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n        )}\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAdd={onAdd} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAdd = (parentNode) => {\n    const nodeType = prompt('Add as (1) Child or (2) Parent? Enter 1 or 2:');\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n\n    const newNode = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    if (nodeType === '1') { // Add as child\n      const addNodeAsChild = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children = [...nodes.children, newNode];\n          return true;\n        }\n        return nodes.children.some(child => addNodeAsChild(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNodeAsChild(newNodes, parentNode.id);\n      setNodes(newNodes);\n    } else if (nodeType === '2' && parentNode.id === 'root') { // Add as parent only if root\n      newNode.children = [{ ...nodes }];\n      setNodes(newNode);\n    }\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n\n    if (nodeId === 'root') return; // Prevent root removal for safety\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Reset selection when a node is removed\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={nodes}\n          onAdd={onAdd}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={setSelectedHolon}\n          isSelected={isSelected}\n        />\n      </Tree>\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n          <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}