{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNodes, setDestinationNodes] = useState([]);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [disableAdd, setDisableAdd] = useState(false);\n  const [resetFlow, setResetFlow] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const findPath = (sourceId, targetId) => {\n    const visited = new Set();\n    const queue = [[sourceId]];\n    while (queue.length > 0) {\n      const path = queue.shift();\n      const node = path[path.length - 1];\n      if (node === targetId) {\n        return path;\n      }\n      if (!visited.has(node)) {\n        visited.add(node);\n        edges.filter(edge => edge.source === node || edge.target === node).forEach(edge => {\n          const nextNode = edge.source === node ? edge.target : edge.source;\n          queue.push([...path, nextNode]);\n        });\n      }\n    }\n    return [];\n  };\n  const handleNodeClick = (event, nodeData) => {\n    const id = nodeData.id;\n    const node = nodes.find(n => n.id === id);\n    setSelectedNode(node);\n    if (enableInformationFlow) {\n      setResetFlow(false);\n      if (!sourceNode) {\n        setSourceNode(node);\n        setNodes(nds => nds.map(n => n.id === node.id ? {\n          ...n,\n          style: {\n            border: \"2px solid blue\"\n          }\n        } : n));\n      } else if (sourceNode.id !== id) {\n        setDestinationNodes(prevDestinations => {\n          if (!prevDestinations.some(dest => dest.id === node.id)) {\n            const newDestinations = [...prevDestinations, node];\n            newDestinations.forEach(destination => {\n              const path = findPath(sourceNode.id, destination.id);\n              setEdges(eds => eds.map(edge => {\n                var _edge$style, _edge$style2;\n                console.log(edge);\n                const isInPath = path.includes(edge.source) && path.includes(edge.target);\n                return {\n                  ...edge,\n                  animated: (edge === null || edge === void 0 ? void 0 : (_edge$style = edge.style) === null || _edge$style === void 0 ? void 0 : _edge$style.stroke) == \"green\" ? true : false,\n                  style: {\n                    stroke: (edge === null || edge === void 0 ? void 0 : (_edge$style2 = edge.style) === null || _edge$style2 === void 0 ? void 0 : _edge$style2.stroke) == \"green\" ? \"green\" : isInPath ? \"green\" : \"black\"\n                  }\n                };\n              }));\n            });\n            return newDestinations;\n          }\n          return prevDestinations;\n        });\n        setNodes(nds => nds.map(n => n.id === node.id ? {\n          ...n,\n          style: {\n            border: \"2px solid green\"\n          }\n        } : n));\n      }\n    }\n  };\n  const resetSelection = () => {\n    setEnableInformationFlow(!enableInformationFlow);\n    if (enableInformationFlow) {\n      setResetFlow(true);\n      setSourceNode(null);\n      setDestinationNodes([]);\n      setSelectedNode(null);\n      setNodes(nds => nds.map(n => ({\n        ...n,\n        style: {\n          border: \"none\"\n        }\n      })));\n      setEdges(eds => eds.map(edge => ({\n        ...edge,\n        animated: false,\n        style: {\n          stroke: \"black\"\n        }\n      })));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !enableInformationFlow ? \"btn btn-danger\" : \"btn btn-success\",\n          onClick: resetSelection,\n          children: \"Add Information Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            disable: disableAdd\n          }\n        })),\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        },\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), sourceNode && destinationNodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"90%\",\n        left: \"20%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 alert alert-danger\",\n        children: \"Select the Destination Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this) : \"\", resetFlow & enableInformationFlow ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"90%\",\n        left: \"20%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 alert alert-danger\",\n        children: \"Select the Source Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      style: {\n        padding: \"10px\",\n        borderLeft: \"1px solid #ccc\"\n      },\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameofNode\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nameofNode\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                label: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"nodeDescription\",\n            className: \"form-control\",\n            style: {\n              height: \"200px\",\n              width: \"400px\"\n            },\n            placeholder: \"An example description...\",\n            value: selectedNode.data.description || \"\",\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                description: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeInfoFlows\",\n            children: \"Information Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nodeInfoFlows\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Node Selected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), \" \", selectedNode.data.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: enableInformationFlow && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lead\",\n            children: \"Selected Information Flow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), enableInformationFlow && sourceNode && destinationNodes && destinationNodes.map(element => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 alert alert-success\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [sourceNode.data.label, \" \", \"-->\", \" \", element.data.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this);\n        })]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newNodeLabel\",\n            children: \"New Node Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newNodeLabel\",\n            className: \"form-control\",\n            placeholder: \"New Node Label\",\n            value: newNodeLabel,\n            onChange: e => setNewNodeLabel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setNodes(nds => [...nds, {\n              id: `${nds.length + 1}`,\n              type: \"customNode\",\n              data: {\n                label: newNodeLabel\n              },\n              position: {\n                x: Math.random() * 400,\n                y: Math.random() * 400\n              }\n            }]);\n            setIsModalOpen(false);\n            setNewNodeLabel(\"\");\n          },\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"xtAJPgAL4AK7Br2WtiJ19Jpt5D8=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sourceNode","setSourceNode","destinationNodes","setDestinationNodes","selectedNode","setSelectedNode","isModalOpen","setIsModalOpen","enableInformationFlow","setEnableInformationFlow","newNodeLabel","setNewNodeLabel","disableAdd","setDisableAdd","resetFlow","setResetFlow","onConnect","params","eds","findPath","sourceId","targetId","visited","Set","queue","length","path","shift","node","has","add","filter","edge","source","target","forEach","nextNode","push","handleNodeClick","event","nodeData","id","find","n","nds","map","style","border","prevDestinations","some","dest","newDestinations","destination","_edge$style","_edge$style2","console","log","isInPath","includes","animated","stroke","resetSelection","className","display","height","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","disable","fitView","width","onNodeClick","position","top","left","borderLeft","htmlFor","type","value","label","onChange","e","placeholder","description","readOnly","element","isOpen","onRequestClose","x","Math","random","y","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNodes, setDestinationNodes] = useState([]);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [disableAdd, setDisableAdd] = useState(false);\r\n  const [resetFlow, setResetFlow] = useState(false);\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const findPath = (sourceId, targetId) => {\r\n    const visited = new Set();\r\n    const queue = [[sourceId]];\r\n\r\n    while (queue.length > 0) {\r\n      const path = queue.shift();\r\n      const node = path[path.length - 1];\r\n\r\n      if (node === targetId) {\r\n        return path;\r\n      }\r\n\r\n      if (!visited.has(node)) {\r\n        visited.add(node);\r\n        edges\r\n          .filter((edge) => edge.source === node || edge.target === node)\r\n          .forEach((edge) => {\r\n            const nextNode = edge.source === node ? edge.target : edge.source;\r\n            queue.push([...path, nextNode]);\r\n          });\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const handleNodeClick = (event, nodeData) => {\r\n    const id = nodeData.id;\r\n    const node = nodes.find((n) => n.id === id);\r\n    setSelectedNode(node);\r\n\r\n    if (enableInformationFlow) {\r\n      setResetFlow(false);\r\n      if (!sourceNode) {\r\n        setSourceNode(node);\r\n        setNodes((nds) =>\r\n          nds.map((n) =>\r\n            n.id === node.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n          )\r\n        );\r\n      } else if (sourceNode.id !== id) {\r\n        setDestinationNodes((prevDestinations) => {\r\n          if (!prevDestinations.some((dest) => dest.id === node.id)) {\r\n            const newDestinations = [...prevDestinations, node];\r\n            newDestinations.forEach((destination) => {\r\n              const path = findPath(sourceNode.id, destination.id);\r\n              setEdges((eds) =>\r\n                eds.map((edge) => {\r\n                  console.log(edge);\r\n                  const isInPath =\r\n                    path.includes(edge.source) && path.includes(edge.target);\r\n                  return {\r\n                    ...edge,\r\n                    animated: edge?.style?.stroke == \"green\" ? true : false,\r\n                    style: {\r\n                      stroke:\r\n                        edge?.style?.stroke == \"green\"\r\n                          ? \"green\"\r\n                          : isInPath\r\n                          ? \"green\"\r\n                          : \"black\",\r\n                    },\r\n                  };\r\n                })\r\n              );\r\n            });\r\n            return newDestinations;\r\n          }\r\n          return prevDestinations;\r\n        });\r\n        setNodes((nds) =>\r\n          nds.map((n) =>\r\n            n.id === node.id\r\n              ? { ...n, style: { border: \"2px solid green\" } }\r\n              : n\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const resetSelection = () => {\r\n    setEnableInformationFlow(!enableInformationFlow);\r\n    if (enableInformationFlow) {\r\n      setResetFlow(true);\r\n      setSourceNode(null);\r\n      setDestinationNodes([]);\r\n      setSelectedNode(null);\r\n      setNodes((nds) => nds.map((n) => ({ ...n, style: { border: \"none\" } })));\r\n      setEdges((eds) =>\r\n        eds.map((edge) => ({\r\n          ...edge,\r\n          animated: false,\r\n          style: { stroke: \"black\" },\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\" }}\r\n    >\r\n      <div className=\"col-9\" style={{ height: \"100%\" }}>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h3>Add Node</h3>\r\n          <button\r\n            className={\r\n              !enableInformationFlow ? \"btn btn-danger\" : \"btn btn-success\"\r\n            }\r\n            onClick={resetSelection}\r\n          >\r\n            Add Information Flow\r\n          </button>\r\n        </div>\r\n\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes.map((node) => ({\r\n            ...node,\r\n            data: {\r\n              ...node.data,\r\n              disable: disableAdd,\r\n            },\r\n          }))}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          style={{ width: \"100%\", height: \"90%\" }}\r\n          onNodeClick={handleNodeClick}\r\n        />\r\n      </div>\r\n      {sourceNode && destinationNodes.length === 0 ? (\r\n        <div style={{ position: \"fixed\", top: \"90%\", left: \"20%\" }}>\r\n          <div className=\"mt-3 alert alert-danger\">\r\n            Select the Destination Node\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {resetFlow & enableInformationFlow ? (\r\n        <div style={{ position: \"fixed\", top: \"90%\", left: \"20%\" }}>\r\n          <div className=\"mt-3 alert alert-danger\">Select the Source Node</div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div\r\n        className=\"col-3\"\r\n        style={{ padding: \"10px\", borderLeft: \"1px solid #ccc\" }}\r\n      >\r\n        {selectedNode ? (\r\n          <>\r\n            <h3>Holon Details</h3>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nameofNode\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nameofNode\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, label: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeDescription\">Description</label>\r\n              <textarea\r\n                id=\"nodeDescription\"\r\n                className=\"form-control\"\r\n                style={{ height: \"200px\", width: \"400px\" }}\r\n                placeholder=\"An example description...\"\r\n                value={selectedNode.data.description || \"\"}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, description: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeInfoFlows\">Information Flows</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nodeInfoFlows\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                readOnly\r\n              />\r\n            </div>\r\n            <div className=\"mt-3 alert alert-info\">\r\n              <strong>Node Selected:</strong> {selectedNode.data.label}\r\n            </div>\r\n            <div>\r\n              {enableInformationFlow && (\r\n                <p className=\"lead\">Selected Information Flow</p>\r\n              )}\r\n            </div>\r\n            {enableInformationFlow &&\r\n              sourceNode &&\r\n              destinationNodes &&\r\n              destinationNodes.map((element) => {\r\n                return (\r\n                  <div className=\"mt-3 alert alert-success\">\r\n                    <strong>\r\n                      {sourceNode.data.label} {\"-->\"} {element.data.label}\r\n                    </strong>\r\n                  </div>\r\n                );\r\n              })}\r\n          </>\r\n        ) : (\r\n          <div>No Selection</div>\r\n        )}\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">Add Node</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"newNodeLabel\">New Node Label</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newNodeLabel\"\r\n              className=\"form-control\"\r\n              placeholder=\"New Node Label\"\r\n              value={newNodeLabel}\r\n              onChange={(e) => setNewNodeLabel(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setNodes((nds) => [\r\n                ...nds,\r\n                {\r\n                  id: `${nds.length + 1}`,\r\n                  type: \"customNode\",\r\n                  data: { label: newNodeLabel },\r\n                  position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n                },\r\n              ]);\r\n              setIsModalOpen(false);\r\n              setNewNodeLabel(\"\");\r\n            }}\r\n          >\r\n            Add Node\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}