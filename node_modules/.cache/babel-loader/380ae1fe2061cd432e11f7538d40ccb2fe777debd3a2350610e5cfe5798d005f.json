{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode\n}) => {\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-label\",\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAddChild(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemoveNode(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'This is the root node of our system, representing the entire information system.',\n    children: [{\n      id: '1',\n      name: 'Sub System 1',\n      description: 'Description of Sub System 1',\n      children: []\n    }, {\n      id: '2',\n      name: 'Sub System 2',\n      description: 'Description of Sub System 2',\n      children: []\n    }]\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const newChild = {\n      id: `node-${Math.random()}`,\n      name: childName,\n      description: 'Description not set for ' + childName,\n      children: []\n    };\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        return {\n          ...node,\n          children: [...node.children, newChild]\n        };\n      } else if (node.children) {\n        return {\n          ...node,\n          children: node.children.map(child => addNodeRecursively(child, parentId))\n        };\n      }\n      return node;\n    };\n    setNodes(currentNodes => addNodeRecursively(currentNodes, parentNode.id));\n  };\n  const onRemoveNode = nodeId => {\n    const removeNodeRecursively = (node, nodeIdToRemove) => {\n      node.children = node.children.filter(child => child.id !== nodeIdToRemove).map(child => removeNodeRecursively(child, nodeIdToRemove));\n      return node;\n    };\n    setNodes(currentNodes => removeNodeRecursively({\n      ...currentNodes\n    }, nodeId));\n  };\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"enZXKbzK/3MQur5y8KDbZgTDshg=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","parentNode","childName","prompt","newChild","Math","random","addNodeRecursively","parentId","currentNodes","nodeId","removeNodeRecursively","nodeIdToRemove","filter","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode }) => {\n  return (\n    <TreeNode label={\n      <div className=\"tree-label\" onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAddChild(node); }}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemoveNode(node.id); }}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon key={child.id} node={child} onAddChild={onAddChild} onRemoveNode={onRemoveNode} onSelectNode={onSelectNode} />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'This is the root node of our system, representing the entire information system.',\n    children: [\n      {\n        id: '1',\n        name: 'Sub System 1',\n        description: 'Description of Sub System 1',\n        children: [],\n      },\n      {\n        id: '2',\n        name: 'Sub System 2',\n        description: 'Description of Sub System 2',\n        children: [],\n      },\n    ],\n  });\n\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const newChild = {\n      id: `node-${Math.random()}`,\n      name: childName,\n      description: 'Description not set for ' + childName,\n      children: [],\n    };\n\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        return { ...node, children: [...node.children, newChild] };\n      } else if (node.children) {\n        return { ...node, children: node.children.map(child => addNodeRecursively(child, parentId)) };\n      }\n      return node;\n    };\n\n    setNodes(currentNodes => addNodeRecursively(currentNodes, parentNode.id));\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNodeRecursively = (node, nodeIdToRemove) => {\n      node.children = node.children.filter(child => child.id !== nodeIdToRemove).map(child => removeNodeRecursively(child, nodeIdToRemove));\n      return node;\n    };\n\n    setNodes(currentNodes => removeNodeRecursively({...currentNodes}, nodeId));\n  };\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon node={nodes} onAddChild={onAddChild} onRemoveNode={onRemoveNode} onSelectNode={onSelectNode} />\n      </Tree>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}