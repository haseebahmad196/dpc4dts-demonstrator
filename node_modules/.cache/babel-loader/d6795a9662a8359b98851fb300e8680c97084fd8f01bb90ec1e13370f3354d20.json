{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${isSelected(node) ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this),\n    children: node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'root',\n      name: 'Information System'\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = parentNode => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Deselect if selected node is removed\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","childName","prompt","newChild","Math","random","addNode","parentId","push","forEach","newNodes","nodeId","removeNode","nodeIdToRemove","filter","lineWidth","lineColor","lineBorderRadius","description","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  return (\n    <TreeNode\n      label={\n        <div className={`tree-label ${isSelected(node) ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n          <div className=\"name\">{node.name}</div>\n          <div className=\"buttons\">\n            <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n            {node.id !== 'root' && (\n              <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n            )}\n          </div>\n        </div>\n      }\n    >\n      {node.children.map((child) => (\n        <Holon\n          key={child.id}\n          node={child}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [\n    {\n      id: 'root',\n      name: 'Information System',\n\n    }\n    ]\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName) return;\n\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: childName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n\n      nodes.children.forEach((child) => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      nodes.children = nodes.children.filter((child) => child.id !== nodeIdToRemove);\n      nodes.children.forEach((child) => removeNode(child, nodeIdToRemove));\n    };\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null); // Deselect if selected node is removed\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={nodes}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={setSelectedHolon}\n          isSelected={isSelected}\n        />\n      </Tree>\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p>Name: {selectedHolon.name}</p>\n          <p>Description: {selectedHolon.description || \"No description available.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}