{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelect,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `holon holon-level-${node.level}`,\n    onClick: () => onSelect(node),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAdd(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemove(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n// Assuming this function is defined outside the App component for clarity\n_c = Holon;\nconst flattenNodes = (nodes, level = 0) => {\n  return nodes.reduce((acc, node) => {\n    const newNode = {\n      ...node,\n      level\n    };\n    acc.push(newNode);\n    if (node.children) {\n      acc = acc.concat(flattenNodes(node.children, level + 1));\n    }\n    return acc;\n  }, []);\n};\nconst App = () => {\n  _s();\n  const initialNodes = [\n    // Your initial nodes structure...\n  ];\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3);\n  const selectHolon = node => setSelectedHolon(node);\n\n  // Implement the addChild and removeChild logic as needed\n  // These functions should modify the 'nodes' state appropriately\n\n  const flattenedNodes = flattenNodes(nodes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [flattenedNodes.map(node => /*#__PURE__*/_jsxDEV(Holon, {\n      node: node,\n      onSelect: selectHolon,\n      onAdd: () => {},\n      onRemove: () => {},\n      level: node.level\n    }, node.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Description: \", selectedHolon.description || \"No description provided.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eh5Luxwah1wuZpSRkKCTlMNdUFE=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Holon","node","onSelect","onAdd","onRemove","className","level","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","_c","flattenNodes","nodes","reduce","acc","newNode","push","concat","App","_s","initialNodes","setNodes","selectedHolon","setSelectedHolon","idCounter","setIdCounter","selectHolon","flattenedNodes","map","description","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst Holon = ({ node, onSelect, onAdd, onRemove }) => {\n  return (\n    <div className={`holon holon-level-${node.level}`} onClick={() => onSelect(node)}>\n      <div className=\"holon-details\">\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAdd(node); }}>+</button>\n          <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemove(node.id); }}>x</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Assuming this function is defined outside the App component for clarity\nconst flattenNodes = (nodes, level = 0) => {\n  return nodes.reduce((acc, node) => {\n    const newNode = { ...node, level };\n    acc.push(newNode);\n    if (node.children) {\n      acc = acc.concat(flattenNodes(node.children, level + 1));\n    }\n    return acc;\n  }, []);\n};\n\nconst App = () => {\n  const initialNodes = [\n    // Your initial nodes structure...\n  ];\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3);\n\n  const selectHolon = (node) => setSelectedHolon(node);\n\n  // Implement the addChild and removeChild logic as needed\n  // These functions should modify the 'nodes' state appropriately\n\n  const flattenedNodes = flattenNodes(nodes);\n\n  return (\n    <div className=\"app-container\">\n      {flattenedNodes.map(node => (\n        <Holon\n          key={node.id}\n          node={node}\n          onSelect={selectHolon}\n          onAdd={() => {}}\n          onRemove={() => {}}\n          level={node.level}\n        />\n      ))}\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p>Name: {selectedHolon.name}</p>\n          <p>Description: {selectedHolon.description || \"No description provided.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}