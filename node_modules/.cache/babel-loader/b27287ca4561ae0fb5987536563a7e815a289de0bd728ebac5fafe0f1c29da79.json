{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onSelect,\n  onAdd,\n  onRemove,\n  level = 0\n}) => {\n  // Conditionally render the \"Add\" button for non-root nodes\n  const addButton = level > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"add-sibling-button\",\n    onClick: e => {\n      e.stopPropagation();\n      onAdd(node, true);\n    },\n    children: \"Add Sibling\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      onClick: () => onSelect(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onAdd(node);\n          },\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), addButton, /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => {\n            e.stopPropagation();\n            onRemove(node.id);\n          },\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), node.children && node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"children\",\n      children: node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n        node: child,\n        onSelect: onSelect,\n        onAdd: onAdd,\n        onRemove: onRemove,\n        level: level + 1\n      }, child.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [{\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n      children: []\n    }]\n  }]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3); // Adjusted to account for the initial stakeholder and infrastructure nodes\n\n  const selectHolon = selectedNode => {\n    setSelectedHolon(selectedNode);\n  };\n  const addChild = parentName => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n    setNodes(prevNodes => {\n      const newId = `node-${idCounter}`;\n      setIdCounter(idCounter + 1);\n      const addNodeRecursively = (nodes, parentName, childName, newId) => {\n        return nodes.map(node => {\n          if (node.name === parentName) {\n            const newNode = {\n              id: newId,\n              name: childName,\n              description: '',\n              children: []\n            };\n            return {\n              ...node,\n              children: [...node.children, newNode]\n            };\n          } else if (node.children.length) {\n            return {\n              ...node,\n              children: addNodeRecursively(node.children, parentName, childName, newId)\n            };\n          }\n          return node;\n        });\n      };\n      return addNodeRecursively(prevNodes, parentName, childName, newId);\n    });\n  };\n  const removeChild = nodeName => {\n    setNodes(prevNodes => removeNodeRecursively(prevNodes, nodeName));\n  };\n  const removeNodeRecursively = (nodes, nodeName) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== nodeName) {\n        const filteredChildren = removeNodeRecursively(node.children, nodeName);\n        acc.push({\n          ...node,\n          children: filteredChildren\n        });\n        return acc;\n      }\n      return acc;\n    }, []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holons-container\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes[0],\n        onSelect: selectHolon,\n        onAdd: addChild,\n        onRemove: removeChild\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description || \"No description provided.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"M+apAhZFO2IiOxYGTPdKEHke3To=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onSelect","onAdd","onRemove","level","addButton","className","onClick","e","stopPropagation","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","length","map","child","_c","App","_s","nodes","setNodes","description","selectedHolon","setSelectedHolon","idCounter","setIdCounter","selectHolon","selectedNode","addChild","parentName","childName","prompt","trim","alert","prevNodes","newId","addNodeRecursively","newNode","removeChild","nodeName","removeNodeRecursively","reduce","acc","filteredChildren","push","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst Holon = ({ node, onSelect, onAdd, onRemove, level = 0 }) => {\n  // Conditionally render the \"Add\" button for non-root nodes\n  const addButton = level > 0 ? (\n    <button className=\"add-sibling-button\" onClick={(e) => { e.stopPropagation(); onAdd(node, true); }}>Add Sibling</button>\n  ) : null;\n\n  return (\n    <div className=\"holon\">\n      <div className=\"holon-details\" onClick={() => onSelect(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAdd(node); }}>+</button>\n          {addButton}\n          <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemove(node.id); }}>x</button>\n        </div>\n      </div>\n      {node.children && node.children.length > 0 && (\n        <div className=\"children\">\n          {node.children.map(child => (\n            <Holon key={child.id} node={child} onSelect={onSelect} onAdd={onAdd} onRemove={onRemove} level={level + 1} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState([\n    {\n      id: 'root',\n      name: 'Information System',\n      description: 'An Information System is a set of components for collecting, storing, and processing data.',\n      children: [\n        {\n          id: 'stakeholder',\n          name: 'Stakeholder',\n          description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n          children: [],\n        },\n        {\n          id: 'infrastructure',\n          name: 'Infrastructure',\n          description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n          children: [],\n        }\n      ],\n    }\n  ]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(3); // Adjusted to account for the initial stakeholder and infrastructure nodes\n\n  const selectHolon = (selectedNode) => {\n    setSelectedHolon(selectedNode);\n  };\n\n  const addChild = (parentName) => {\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n\n    setNodes((prevNodes) => {\n      const newId = `node-${idCounter}`;\n      setIdCounter(idCounter + 1);\n\n      const addNodeRecursively = (nodes, parentName, childName, newId) => {\n        return nodes.map(node => {\n          if (node.name === parentName) {\n            const newNode = {\n              id: newId,\n              name: childName,\n              description: '',\n              children: []\n            };\n            return { ...node, children: [...node.children, newNode] };\n          } else if (node.children.length) {\n            return { ...node, children: addNodeRecursively(node.children, parentName, childName, newId) };\n          }\n          return node;\n        });\n      };\n\n      return addNodeRecursively(prevNodes, parentName, childName, newId);\n    });\n  };\n\n  const removeChild = (nodeName) => {\n    setNodes(prevNodes => removeNodeRecursively(prevNodes, nodeName));\n  };\n\n  const removeNodeRecursively = (nodes, nodeName) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== nodeName) {\n        const filteredChildren = removeNodeRecursively(node.children, nodeName);\n        acc.push({ ...node, children: filteredChildren });\n        return acc;\n      }\n      return acc;\n    }, []);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"holons-container\">\n        <Holon node={nodes[0]} onSelect={selectHolon} onAdd={addChild} onRemove={removeChild} />\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description || \"No description provided.\"}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}