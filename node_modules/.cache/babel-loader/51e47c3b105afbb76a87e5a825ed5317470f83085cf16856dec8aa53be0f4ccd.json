{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Tree, TreeNode } from \"react-organizational-chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Form from \"react-bootstrap/Form\";\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\nimport \"./styles.css\";\nimport CommunicationReactFlow from \"./CommunicationReactFlow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initNodes = [{\n  id: \"1a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 1\"\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}, {\n  id: \"2a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 2\"\n  },\n  position: {\n    x: 100,\n    y: 120\n  }\n}, {\n  id: \"3a\",\n  type: \"customNode\",\n  data: {\n    label: \"Node 3\"\n  },\n  position: {\n    x: 400,\n    y: 120\n  }\n}];\nconst initEdges = [{\n  id: \"e1-2\",\n  source: \"1a\",\n  target: \"2a\"\n}, {\n  id: \"e1-3\",\n  source: \"1a\",\n  target: \"3a\"\n}];\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 mb-2 border ${selected ? \"tree-label selected\" : \"tree-label\"} rounded`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          className: \"me-1\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  selectedNode\n}) => {\n  const isSelected = node => selectedNode && node.id === selectedNode.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      lineStyle: \"dashed\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode,\n        isSelected: isSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StructurePage;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: \"root\",\n    name: \"Information System\",\n    description: \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\",\n    children: [{\n      id: \"Stakeholder\",\n      name: \"Stakeholder\",\n      description: \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\",\n      children: []\n    }, {\n      id: \"Infrastructure\",\n      name: \"Infrastructure\",\n      description: \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\",\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeType, setNodeType] = useState(\"\");\n  const [nodeName, setNodeName] = useState(\"\");\n  const [activeStep, setActiveStep] = useState(1);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNodeName(\"\");\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedNode(parentNode);\n    setNodeType(\"child\");\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedNode(null);\n  };\n  const addNewRoot = () => {\n    setSelectedNode(nodes);\n    setNodeType(\"parent\");\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedNode.id}-${Math.random()}`,\n      name: nodeName,\n      data: {\n        label: nodeName\n      },\n      children: []\n    };\n    if (nodeType === \"child\") {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedNode.id);\n      setNodes(newNodes);\n    } else if (nodeType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedNode]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step me-3 ${activeStep === 1 ? \"active\" : \"\"}`,\n        onClick: () => setActiveStep(1),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 1 ? \"bg-primary\" : \"bg-secondary\"}`,\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ms-2 fw-bold ${activeStep === 1 ? \"text-primary\" : \"text-secondary\"}`,\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 2 ? \"active\" : \"\"}`,\n        onClick: () => setActiveStep(2),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 2 ? \"bg-primary\" : \"bg-secondary\"}`,\n          style: {\n            width: \"30px\",\n            height: \"30px\"\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ms-2 fw-bold ${activeStep === 2 ? \"text-primary\" : \"text-secondary\"}`,\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: activeStep === 1 ? /*#__PURE__*/_jsxDEV(StructurePage, {\n          nodes: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: setSelectedNode,\n          selectedNode: selectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CommunicationReactFlow, {\n          initNodes: initNodes,\n          initEdges: initEdges\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), \" \", selectedNode.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), \" \", selectedNode.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Node Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"nodeType\",\n          value: nodeType,\n          onChange: value => handleNodeTypeSelection(value),\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"child\",\n            variant: \"outline-primary\",\n            children: \"Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"parent\",\n            variant: \"outline-primary\",\n            children: \"Parent Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), nodeType && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name for the Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Name\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          disabled: !nodeType,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8K9dcqsnufTozxU03ISn6Qkjl/0=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","Button","Modal","Form","ToggleButton","ToggleButtonGroup","CommunicationReactFlow","jsxDEV","_jsxDEV","Fragment","_Fragment","initNodes","id","type","data","label","position","x","y","initEdges","source","target","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","map","child","_c","StructurePage","nodes","selectedNode","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","App","_s","initialNodes","description","setNodes","setSelectedNode","showModal","setShowModal","nodeType","setNodeType","nodeName","setNodeName","activeStep","setActiveStep","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","addNewRoot","handleNodeTypeSelection","handleSubmit","newNode","Math","random","addNode","parentId","push","newParent","style","cursor","width","height","show","onHide","Header","closeButton","Title","Body","value","onChange","Group","controlId","Label","Control","placeholder","Footer","disabled","_c3","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tree, TreeNode } from \"react-organizational-chart\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport \"./styles.css\";\r\nimport CommunicationReactFlow from \"./CommunicationReactFlow\";\r\n\r\nconst initNodes = [\r\n  {\r\n    id: \"1a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 1\" },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n  {\r\n    id: \"2a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 2\" },\r\n    position: { x: 100, y: 120 },\r\n  },\r\n  {\r\n    id: \"3a\",\r\n    type: \"customNode\",\r\n    data: { label: \"Node 3\" },\r\n    position: { x: 400, y: 120 },\r\n  },\r\n];\r\n\r\nconst initEdges = [\r\n  { id: \"e1-2\", source: \"1a\", target: \"2a\" },\r\n  { id: \"e1-3\", source: \"1a\", target: \"3a\" },\r\n];\r\n\r\nconst Holon = ({\r\n  node,\r\n  onAddChild,\r\n  onRemoveNode,\r\n  onSelectNode,\r\n  isSelected,\r\n}) => {\r\n  const handleActionClick = (e, action) => {\r\n    e.stopPropagation();\r\n    action();\r\n  };\r\n\r\n  const selected = isSelected(node);\r\n\r\n  return (\r\n    <TreeNode\r\n      label={\r\n        <div\r\n          className={`p-2 mb-2 border ${\r\n            selected ? \"tree-label selected\" : \"tree-label\"\r\n          } rounded`}\r\n          onClick={() => onSelectNode(node)}\r\n        >\r\n          <div>{node.name}</div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <Button\r\n              variant=\"primary\"\r\n              size=\"sm\"\r\n              className=\"me-1\"\r\n              onClick={(e) => handleActionClick(e, () => onAddChild(node))}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} />\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      }\r\n    >\r\n      {node.children &&\r\n        node.children.map((child) => (\r\n          <Holon\r\n            key={child.id}\r\n            node={child}\r\n            onAddChild={onAddChild}\r\n            onRemoveNode={onRemoveNode}\r\n            onSelectNode={onSelectNode}\r\n            isSelected={isSelected}\r\n          />\r\n        ))}\r\n    </TreeNode>\r\n  );\r\n};\r\n\r\nconst StructurePage = ({\r\n  nodes,\r\n  onAddChild,\r\n  onRemoveNode,\r\n  onSelectNode,\r\n  selectedNode,\r\n}) => {\r\n  const isSelected = (node) => selectedNode && node.id === selectedNode.id;\r\n\r\n  return (\r\n    <div>\r\n      <Tree\r\n        lineWidth={\"2px\"}\r\n        lineColor={\"blue\"}\r\n        lineBorderRadius={\"5px\"}\r\n        lineStyle={\"dashed\"}\r\n      >\r\n        <Holon\r\n          node={nodes}\r\n          onAddChild={onAddChild}\r\n          onRemoveNode={onRemoveNode}\r\n          onSelectNode={onSelectNode}\r\n          isSelected={isSelected}\r\n        />\r\n      </Tree>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const initialNodes = {\r\n    id: \"root\",\r\n    name: \"Information System\",\r\n    description:\r\n      \"An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.\",\r\n    children: [\r\n      {\r\n        id: \"Stakeholder\",\r\n        name: \"Stakeholder\",\r\n        description:\r\n          \"A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.\",\r\n        children: [],\r\n      },\r\n      {\r\n        id: \"Infrastructure\",\r\n        name: \"Infrastructure\",\r\n        description:\r\n          \"Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.\",\r\n        children: [],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const [nodes, setNodes] = useState(initialNodes);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [nodeType, setNodeType] = useState(\"\");\r\n  const [nodeName, setNodeName] = useState(\"\");\r\n  const [activeStep, setActiveStep] = useState(1);\r\n\r\n  const handleModalClose = () => {\r\n    setShowModal(false);\r\n    setNodeName(\"\");\r\n  };\r\n\r\n  const handleModalShow = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  const onAddChild = (parentNode) => {\r\n    setSelectedNode(parentNode);\r\n    setNodeType(\"child\");\r\n    handleModalShow();\r\n  };\r\n\r\n  const onRemoveNode = (nodeId) => {\r\n    const removeNode = (nodes, nodeIdToRemove) => {\r\n      if (nodes.id === nodeIdToRemove) {\r\n        return null;\r\n      }\r\n      nodes.children = nodes.children.filter(\r\n        (child) => child.id !== nodeIdToRemove\r\n      );\r\n      nodes.children.forEach((child) => removeNode(child, nodeIdToRemove));\r\n      return nodes;\r\n    };\r\n\r\n    const newNodes = removeNode({ ...nodes }, nodeId);\r\n    setNodes(newNodes);\r\n    setSelectedNode(null);\r\n  };\r\n\r\n  const addNewRoot = () => {\r\n    setSelectedNode(nodes);\r\n    setNodeType(\"parent\");\r\n    handleModalShow();\r\n  };\r\n\r\n  const handleNodeTypeSelection = (type) => {\r\n    setNodeType(type);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const newNode = {\r\n      id: `${selectedNode.id}-${Math.random()}`,\r\n      name: nodeName,\r\n      data: {\r\n        label: nodeName,\r\n      },\r\n      children: [],\r\n    };\r\n    if (nodeType === \"child\") {\r\n      const addNode = (nodes, parentId) => {\r\n        if (nodes.id === parentId) {\r\n          nodes.children.push(newNode);\r\n          return;\r\n        }\r\n        nodes.children.forEach((child) => addNode(child, parentId));\r\n      };\r\n\r\n      const newNodes = { ...nodes };\r\n      addNode(newNodes, selectedNode.id);\r\n      setNodes(newNodes);\r\n    } else if (nodeType === \"parent\") {\r\n      const newParent = {\r\n        id: `root-${Math.random()}`,\r\n        name: nodeName,\r\n        children: [selectedNode],\r\n      };\r\n      setNodes(newParent);\r\n    }\r\n    handleModalClose();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* Header Section with Styling */}\r\n      <div className=\"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\">\r\n        <div\r\n          className={`step me-3 ${activeStep === 1 ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveStep(1)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <div\r\n            className={`step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${\r\n              activeStep === 1 ? \"bg-primary\" : \"bg-secondary\"\r\n            }`}\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          >\r\n            1\r\n          </div>\r\n          <div\r\n            className={`ms-2 fw-bold ${\r\n              activeStep === 1 ? \"text-primary\" : \"text-secondary\"\r\n            }`}\r\n          >\r\n            Structure\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`step ${activeStep === 2 ? \"active\" : \"\"}`}\r\n          onClick={() => setActiveStep(2)}\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <div\r\n            className={`step-circle text-white rounded-circle d-flex justify-content-center align-items-center ${\r\n              activeStep === 2 ? \"bg-primary\" : \"bg-secondary\"\r\n            }`}\r\n            style={{ width: \"30px\", height: \"30px\" }}\r\n          >\r\n            2\r\n          </div>\r\n          <div\r\n            className={`ms-2 fw-bold ${\r\n              activeStep === 2 ? \"text-primary\" : \"text-secondary\"\r\n            }`}\r\n          >\r\n            Communication\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content Section */}\r\n      <div className=\"row p-3\">\r\n        <div className=\"col-md-8\">\r\n          {activeStep === 1 ? (\r\n            <StructurePage\r\n              nodes={nodes}\r\n              onAddChild={onAddChild}\r\n              onRemoveNode={onRemoveNode}\r\n              onSelectNode={setSelectedNode}\r\n              selectedNode={selectedNode}\r\n            />\r\n          ) : (\r\n            <CommunicationReactFlow\r\n              initNodes={initNodes}\r\n              initEdges={initEdges}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <h2>Holon Details</h2>\r\n          {selectedNode ? (\r\n            <>\r\n              <p>\r\n                <strong>Name:</strong> {selectedNode.name}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong>{\" \"}\r\n                {selectedNode.description || \"No description available.\"}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <p>No Selection</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Modal for Adding Nodes */}\r\n      <Modal show={showModal} onHide={handleModalClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Select Node Type</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <ToggleButtonGroup\r\n            type=\"radio\"\r\n            name=\"nodeType\"\r\n            value={nodeType}\r\n            onChange={(value) => handleNodeTypeSelection(value)}\r\n            className=\"mb-3\"\r\n          >\r\n            <ToggleButton value=\"child\" variant=\"outline-primary\">\r\n              Child Node\r\n            </ToggleButton>\r\n            <ToggleButton value=\"parent\" variant=\"outline-primary\">\r\n              Parent Node\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          {nodeType && (\r\n            <Form.Group controlId=\"formNodeName\">\r\n              <Form.Label>Enter the name for the Node</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                value={nodeName}\r\n                onChange={(e) => setNodeName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleModalClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmit} disabled={!nodeType}>\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}