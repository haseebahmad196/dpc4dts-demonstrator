{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  name,\n  onSelect,\n  onAdd,\n  onRemove\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    onClick: () => onSelect(name),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-button\",\n      onClick: e => onAdd(e, name),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"remove-button\",\n      onClick: e => onRemove(e, name),\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState([{\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: []\n  }]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(1); // Keep track of IDs to ensure uniqueness\n\n  const selectHolon = name => {\n    const holon = findNode(nodes, name);\n    setSelectedHolon(holon);\n  };\n  const addChild = (e, parentName) => {\n    e.stopPropagation(); // Prevent triggering onSelect when adding\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n    setNodes(currentNodes => {\n      // Function to add a node recursively\n      const addNodeRecursively = (nodes, parentName) => {\n        return nodes.map(node => {\n          if (node.name === parentName) {\n            // Only check for existing child names under this parent\n            if (node.children.some(child => child.name === childName)) {\n              alert('A node with this name already exists under this parent.');\n              return node; // Exit if the name already exists\n            }\n            const newId = `node-${idCounter}`; // Generate a unique ID\n            setIdCounter(idCounter + 1); // Increment for the next unique ID\n            const newNode = {\n              id: newId,\n              name: childName,\n              description: '',\n              // Placeholder description\n              children: [] // This new node can also have children\n            };\n            // Add the new node to the children of the current node\n            return {\n              ...node,\n              children: [...node.children, newNode]\n            };\n          }\n          // If the node has children, recurse into them\n          if (node.children.length) {\n            return {\n              ...node,\n              children: addNodeRecursively(node.children, parentName)\n            };\n          }\n          return node; // Return the node unchanged if no conditions are met\n        });\n      };\n      return addNodeRecursively(currentNodes, parentName);\n    });\n  };\n  const removeChild = (e, nodeName) => {\n    e.stopPropagation(); // Prevent onSelect from being triggered\n    setNodes(currentNodes => removeNodeRecursively(currentNodes, nodeName));\n  };\n  const findNode = (nodes, name) => nodes.reduce((acc, node) => {\n    if (acc) return acc;\n    if (node.name === name) return node;\n    return findNode(node.children, name);\n  }, null);\n  const removeNodeRecursively = (nodes, name) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== name) {\n        const filteredChildren = node.children ? removeNodeRecursively(node.children, name) : [];\n        acc.push({\n          ...node,\n          children: filteredChildren\n        });\n        return acc;\n      }\n      return acc; // If the node is the one to remove, don't add it to the accumulator\n    }, []);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holons-container\",\n      children: nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Holon, {\n          name: node.name,\n          onSelect: selectHolon,\n          onAdd: addChild,\n          onRemove: removeChild\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), node.children.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"children\",\n          children: node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n            name: child.name,\n            onSelect: selectHolon,\n            onAdd: e => addChild(e, child.name),\n            onRemove: e => removeChild(e, child.name)\n          }, child.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IS19g7sbv+0rOod2+fAvv8l6u3w=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","name","onSelect","onAdd","onRemove","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","_c","App","_s","nodes","setNodes","id","description","selectedHolon","setSelectedHolon","idCounter","setIdCounter","selectHolon","holon","findNode","addChild","parentName","stopPropagation","childName","prompt","trim","alert","currentNodes","addNodeRecursively","map","node","some","child","newId","newNode","length","removeChild","nodeName","removeNodeRecursively","reduce","acc","filteredChildren","push","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nconst Holon = ({ name, onSelect, onAdd, onRemove }) => {\n  return (\n    <div className=\"holon\" onClick={() => onSelect(name)}>\n      <div className=\"name\">{name}</div>\n      <button className=\"add-button\" onClick={(e) => onAdd(e, name)}>+</button>\n      <button className=\"remove-button\" onClick={(e) => onRemove(e, name)}>x</button>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [nodes, setNodes] = useState([\n    {\n      id: 'root',\n      name: 'Information System',\n      description: 'An Information System is a set of components for collecting, storing, and processing data.',\n      children: [],\n    }\n  ]);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [idCounter, setIdCounter] = useState(1); // Keep track of IDs to ensure uniqueness\n\n  const selectHolon = (name) => {\n    const holon = findNode(nodes, name);\n    setSelectedHolon(holon);\n  };\n\n  const addChild = (e, parentName) => {\n    e.stopPropagation(); // Prevent triggering onSelect when adding\n    const childName = prompt('Enter the name of the child:');\n    if (!childName || childName.trim() === '') {\n      alert('Please enter a valid name for the child.');\n      return;\n    }\n\n    setNodes((currentNodes) => {\n      // Function to add a node recursively\n      const addNodeRecursively = (nodes, parentName) => {\n        return nodes.map(node => {\n          if (node.name === parentName) {\n            // Only check for existing child names under this parent\n            if (node.children.some(child => child.name === childName)) {\n              alert('A node with this name already exists under this parent.');\n              return node; // Exit if the name already exists\n            }\n            const newId = `node-${idCounter}`; // Generate a unique ID\n            setIdCounter(idCounter + 1); // Increment for the next unique ID\n            const newNode = {\n              id: newId,\n              name: childName,\n              description: '', // Placeholder description\n              children: [] // This new node can also have children\n            };\n            // Add the new node to the children of the current node\n            return {...node, children: [...node.children, newNode]};\n          }\n          // If the node has children, recurse into them\n          if (node.children.length) {\n            return {...node, children: addNodeRecursively(node.children, parentName)};\n          }\n          return node; // Return the node unchanged if no conditions are met\n        });\n      };\n\n      return addNodeRecursively(currentNodes, parentName);\n    });\n};\n\n\n  const removeChild = (e, nodeName) => {\n    e.stopPropagation(); // Prevent onSelect from being triggered\n    setNodes(currentNodes => removeNodeRecursively(currentNodes, nodeName));\n  };\n\n  const findNode = (nodes, name) => nodes.reduce((acc, node) => {\n    if (acc) return acc;\n    if (node.name === name) return node;\n    return findNode(node.children, name);\n  }, null);\n\n  const removeNodeRecursively = (nodes, name) => {\n    return nodes.reduce((acc, node) => {\n      if (node.name !== name) {\n        const filteredChildren = node.children ? removeNodeRecursively(node.children, name) : [];\n        acc.push({ ...node, children: filteredChildren });\n        return acc;\n      }\n      return acc; // If the node is the one to remove, don't add it to the accumulator\n    }, []);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"holons-container\">\n        {nodes.map(node => (\n          <div key={node.id}>\n            <Holon\n              name={node.name}\n              onSelect={selectHolon}\n              onAdd={addChild}\n              onRemove={removeChild}\n            />\n            {node.children.length > 0 && (\n              <div className=\"children\">\n                {node.children.map(child => (\n                  <Holon\n                    key={child.id}\n                    name={child.name}\n                    onSelect={selectHolon}\n                    onAdd={(e) => addChild(e, child.name)}\n                    onRemove={(e) => removeChild(e, child.name)}\n                  />\n                ))}\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}