{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeName, setNodeName] = useState(\"\");\n  const [relationshipType, setRelationshipType] = useState(\"\");\n  const handleModalClose = () => setShowModal(false);\n  const handleModalShow = () => setShowModal(true);\n  const onAddChild = parentNode => {\n    setRelationshipType('child');\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n  const addNewRoot = () => {\n    setRelationshipType('parent');\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  const handleSubmit = () => {\n    if (!nodeName) return;\n    handleModalClose();\n    if (relationshipType === \"child\") {\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (relationshipType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [nodes]\n      };\n      setNodes(newParent);\n    }\n    setNodeName(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step active\",\n        onClick: () => console.log(\"Go to Step 1\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        onClick: () => console.log(\"Go to Step 2\"),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: isSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-name\",\n            children: [\"Name: \", selectedHolon.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"holon-details-description\",\n            children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Enter Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: relationshipType === 'child' ? 'Enter \"child\" node name' : 'Enter \"parent\" node name'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rRfR+pKuZblYknhGgtGn2iErN04=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","nodeName","setNodeName","relationshipType","setRelationshipType","handleModalClose","handleModalShow","parentNode","addNewRoot","nodeId","removeNode","nodeIdToRemove","filter","forEach","newNodes","handleSubmit","newChild","Math","random","addNode","parentId","push","newParent","console","log","lineWidth","lineColor","lineBorderRadius","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","type","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon\n          key={child.id}\n          node={child}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeName, setNodeName] = useState(\"\");\n  const [relationshipType, setRelationshipType] = useState(\"\");\n\n  const handleModalClose = () => setShowModal(false);\n  const handleModalShow = () => setShowModal(true);\n\n  const onAddChild = (parentNode) => {\n    setRelationshipType('child');\n    setSelectedHolon(parentNode);\n    handleModalShow();\n  };\n\n  const addNewRoot = () => {\n    setRelationshipType('parent');\n    handleModalShow();\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null; // Can't remove root\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n\n    const newNodes = removeNode({ ...nodes }, nodeId);\n    setNodes(newNodes);\n    setSelectedHolon(null);\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const handleSubmit = () => {\n    if (!nodeName) return;\n    handleModalClose();\n    if (relationshipType === \"child\") {\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n\n      const newNodes = { ...nodes };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (relationshipType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [nodes]\n      };\n      setNodes(newParent);\n    }\n    setNodeName(\"\");\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step active\" onClick={() => console.log(\"Go to Step 1\")}>\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Structure</div>\n        </div>\n        <div className=\"step\" onClick={() => console.log(\"Go to Step 2\")}>\n          <div className=\"step-circle\">2</div>\n          <div className=\"step-label\">Communication</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onRemoveNode={onRemoveNode}\n            onSelectNode={onSelectNode}\n            isSelected={isSelected}\n          />\n        </Tree>\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          {selectedHolon ? (\n            <>\n              <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n              <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n            </>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n      </div>\n      <Modal show={showModal} onHide={handleModalClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Enter Details</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form>\n              <Form.Group controlId=\"formNodeName\">\n                <Form.Label>{relationshipType === 'child' ? 'Enter \"child\" node name' : 'Enter \"parent\" node name'}</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={e => setNodeName(e.target.value)} />\n              </Form.Group>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleModalClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Save Changes\n            </Button>\n          </Modal.Footer>\n        </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}