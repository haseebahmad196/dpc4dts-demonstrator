{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes || []);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges || []);\n  const [sourceNodes, setSourceNodes] = useState([]);\n  const [destinationNode, setDestinationNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [disableAdd, setDisableAdd] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n  const findPath = (sourceId, targetId) => {\n    const visited = new Set();\n    const queue = [[sourceId]];\n    while (queue.length > 0) {\n      const path = queue.shift();\n      const node = path[path.length - 1];\n      if (node === targetId) {\n        return path;\n      }\n      if (!visited.has(node)) {\n        visited.add(node);\n        edges.filter(edge => edge.source === node || edge.target === node).forEach(edge => {\n          const nextNode = edge.source === node ? edge.target : edge.source;\n          queue.push([...path, nextNode]);\n        });\n      }\n    }\n    return [];\n  };\n  const handleNodeClick = (event, node) => {\n    if (sourceNodes.length === 0 || sourceNodes.length < 3) {\n      setSourceNodes(prev => [...prev, node]);\n      setNodes(nds => nds.map(n => sourceNodes.map(sn => sn.id).includes(n.id) ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n));\n    } else if (!destinationNode) {\n      setDestinationNode(node);\n      setSelectedNode(node);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid green\"\n        }\n      } : n));\n      sourceNodes.forEach((sourceNode, index) => {\n        const path = findPath(sourceNode.id, node.id);\n        const color = [\"green\", \"red\", \"blue\"][index % 3];\n        setEdges(eds => eds.map(edge => {\n          const isInPath = path.includes(edge.source) && path.includes(edge.target);\n          return {\n            ...edge,\n            animated: isInPath,\n            style: {\n              stroke: isInPath ? color : \"black\"\n            }\n          };\n        }));\n      });\n    } else {\n      setSourceNodes([node]);\n      setDestinationNode(null);\n      setNodes(nds => nds.map(n => n.id === node.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : {\n        ...n,\n        style: {\n          border: \"none\"\n        }\n      }));\n      setEdges(eds => eds.map(edge => ({\n        ...edge,\n        animated: false,\n        style: {\n          stroke: \"black\"\n        }\n      })));\n    }\n  };\n  const resetSelection = () => {\n    setSourceNodes([]);\n    setDestinationNode(null);\n    setSelectedNode(null);\n    setNodes(nds => nds.map(n => ({\n      ...n,\n      style: {\n        border: \"none\"\n      }\n    })));\n    setDisableAdd(false);\n    setEdges(eds => eds.map(edge => ({\n      ...edge,\n      animated: false,\n      style: {\n        stroke: \"black\"\n      }\n    })));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      weight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-9\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: resetSelection,\n          children: \"Reset Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes.map(node => ({\n          ...node,\n          data: {\n            ...node.data,\n            nodeClicked: handleNodeClick,\n            disable: disableAdd\n          }\n        })),\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-3\",\n      style: {\n        padding: \"10px\",\n        borderLeft: \"1px solid #ccc\"\n      },\n      children: selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nameofNode\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nameofNode\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                label: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeDescription\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"nodeDescription\",\n            className: \"form-control\",\n            style: {\n              height: \"200px\"\n            },\n            placeholder: \"An example description...\",\n            value: selectedNode.data.description || \"\",\n            onChange: e => setNodes(nds => nds.map(node => node.id === selectedNode.id ? {\n              ...node,\n              data: {\n                ...node.data,\n                description: e.target.value\n              }\n            } : node))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nodeInfoFlows\",\n            children: \"Information Flows\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nodeInfoFlows\",\n            className: \"form-control\",\n            value: selectedNode.data.label,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 alert alert-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Node Selected:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), \" \", selectedNode.data.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: sourceNodes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-primary alert-dismissible fade show\",\n          role: \"alert\",\n          children: [alertMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"close\",\n            \"data-dismiss\": \"alert\",\n            \"aria-label\": \"Close\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: () => setIsModalOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"modal-title\",\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"close\",\n          onClick: () => setIsModalOpen(false),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"newNodeLabel\",\n            children: \"New Node Label\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"newNodeLabel\",\n            className: \"form-control\",\n            placeholder: \"New Node Label\",\n            value: newNodeLabel,\n            onChange: e => setNewNodeLabel(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => setIsModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-primary\",\n          onClick: () => {\n            setNodes(nds => [...nds, {\n              id: `${nds.length + 1}`,\n              type: \"customNode\",\n              data: {\n                label: newNodeLabel\n              },\n              position: {\n                x: Math.random() * 400,\n                y: Math.random() * 400\n              }\n            }]);\n            setIsModalOpen(false);\n            setNewNodeLabel(\"\");\n          },\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"in6mGWpsJETTuDNFNgc6ejJL78E=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","Fragment","_Fragment","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sourceNodes","setSourceNodes","destinationNode","setDestinationNode","selectedNode","setSelectedNode","isModalOpen","setIsModalOpen","newNodeLabel","setNewNodeLabel","alertMessage","setAlertMessage","disableAdd","setDisableAdd","onConnect","params","eds","findPath","sourceId","targetId","visited","Set","queue","length","path","shift","node","has","add","filter","edge","source","target","forEach","nextNode","push","handleNodeClick","event","prev","nds","map","n","sn","id","includes","style","border","sourceNode","index","color","isInPath","animated","stroke","resetSelection","className","display","height","weight","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","data","nodeClicked","disable","fitView","onNodeClick","borderLeft","htmlFor","type","value","label","onChange","e","placeholder","description","readOnly","role","isOpen","onRequestClose","position","x","Math","random","y","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, { addEdge, useNodesState, useEdgesState } from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes || []);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges || []);\r\n  const [sourceNodes, setSourceNodes] = useState([]);\r\n  const [destinationNode, setDestinationNode] = useState(null);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [newNodeLabel, setNewNodeLabel] = useState(\"\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const [disableAdd, setDisableAdd] = useState(false);\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  const findPath = (sourceId, targetId) => {\r\n    const visited = new Set();\r\n    const queue = [[sourceId]];\r\n\r\n    while (queue.length > 0) {\r\n      const path = queue.shift();\r\n      const node = path[path.length - 1];\r\n\r\n      if (node === targetId) {\r\n        return path;\r\n      }\r\n\r\n      if (!visited.has(node)) {\r\n        visited.add(node);\r\n        edges\r\n          .filter((edge) => edge.source === node || edge.target === node)\r\n          .forEach((edge) => {\r\n            const nextNode = edge.source === node ? edge.target : edge.source;\r\n            queue.push([...path, nextNode]);\r\n          });\r\n      }\r\n    }\r\n    return [];\r\n  };\r\n\r\n  const handleNodeClick = (event, node) => {\r\n    if (sourceNodes.length === 0 || sourceNodes.length < 3) {\r\n      setSourceNodes((prev) => [...prev, node]);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          sourceNodes.map((sn) => sn.id).includes(n.id)\r\n            ? { ...n, style: { border: \"2px solid blue\" } }\r\n            : n.id === node.id\r\n            ? { ...n, style: { border: \"2px solid blue\" } }\r\n            : n\r\n        )\r\n      );\r\n    } else if (!destinationNode) {\r\n      setDestinationNode(node);\r\n      setSelectedNode(node);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id ? { ...n, style: { border: \"2px solid green\" } } : n\r\n        )\r\n      );\r\n      sourceNodes.forEach((sourceNode, index) => {\r\n        const path = findPath(sourceNode.id, node.id);\r\n        const color = [\"green\", \"red\", \"blue\"][index % 3];\r\n        setEdges((eds) =>\r\n          eds.map((edge) => {\r\n            const isInPath =\r\n              path.includes(edge.source) && path.includes(edge.target);\r\n            return {\r\n              ...edge,\r\n              animated: isInPath,\r\n              style: { stroke: isInPath ? color : \"black\" },\r\n            };\r\n          })\r\n        );\r\n      });\r\n    } else {\r\n      setSourceNodes([node]);\r\n      setDestinationNode(null);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === node.id\r\n            ? { ...n, style: { border: \"2px solid blue\" } }\r\n            : { ...n, style: { border: \"none\" } }\r\n        )\r\n      );\r\n      setEdges((eds) =>\r\n        eds.map((edge) => ({\r\n          ...edge,\r\n          animated: false,\r\n          style: { stroke: \"black\" },\r\n        }))\r\n      );\r\n    }\r\n  };\r\n\r\n  const resetSelection = () => {\r\n    setSourceNodes([]);\r\n    setDestinationNode(null);\r\n    setSelectedNode(null);\r\n    setNodes((nds) => nds.map((n) => ({ ...n, style: { border: \"none\" } })));\r\n    setDisableAdd(false);\r\n    setEdges((eds) =>\r\n      eds.map((edge) => ({\r\n        ...edge,\r\n        animated: false,\r\n        style: { stroke: \"black\" },\r\n      }))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container-fluid\"\r\n      style={{ display: \"flex\", height: \"100vh\", weight: \"100vh\" }}\r\n    >\r\n      <div className=\"col-9\" style={{ height: \"100%\" }}>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <h3>Add Node</h3>\r\n          <button className=\"btn btn-secondary\" onClick={resetSelection}>\r\n            Reset Selection\r\n          </button>\r\n        </div>\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes.map((node) => ({\r\n            ...node,\r\n            data: {\r\n              ...node.data,\r\n              nodeClicked: handleNodeClick,\r\n              disable: disableAdd,\r\n            },\r\n          }))}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          onNodeClick={handleNodeClick}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        className=\"col-3\"\r\n        style={{ padding: \"10px\", borderLeft: \"1px solid #ccc\" }}\r\n      >\r\n        {selectedNode ? (\r\n          <>\r\n            <h3>Holon Details</h3>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nameofNode\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nameofNode\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, label: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeDescription\">Description</label>\r\n              <textarea\r\n                id=\"nodeDescription\"\r\n                className=\"form-control\"\r\n                style={{ height: \"200px\" }}\r\n                placeholder=\"An example description...\"\r\n                value={selectedNode.data.description || \"\"}\r\n                onChange={(e) =>\r\n                  setNodes((nds) =>\r\n                    nds.map((node) =>\r\n                      node.id === selectedNode.id\r\n                        ? {\r\n                            ...node,\r\n                            data: { ...node.data, description: e.target.value },\r\n                          }\r\n                        : node\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            </div>\r\n            <div className=\"form-group mb-3\">\r\n              <label htmlFor=\"nodeInfoFlows\">Information Flows</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nodeInfoFlows\"\r\n                className=\"form-control\"\r\n                value={selectedNode.data.label}\r\n                readOnly\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-3 alert alert-info\">\r\n              <strong>Node Selected:</strong> {selectedNode.data.label}\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {sourceNodes.length > 0 ? (\r\n              <div className=\"alert alert-primary alert-dismissible fade show\" role=\"alert\">\r\n                {alertMessage}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"alert\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div>No Selection</div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n      <Modal isOpen={isModalOpen} onRequestClose={() => setIsModalOpen(false)}>\r\n        <div className=\"modal-header\">\r\n          <h5 className=\"modal-title\">Add Node</h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"close\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            <span>&times;</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-body\">\r\n          <div className=\"form-group mb-3\">\r\n            <label htmlFor=\"newNodeLabel\">New Node Label</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"newNodeLabel\"\r\n              className=\"form-control\"\r\n              placeholder=\"New Node Label\"\r\n              value={newNodeLabel}\r\n              onChange={(e) => setNewNodeLabel(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary\"\r\n            onClick={() => setIsModalOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            onClick={() => {\r\n              setNodes((nds) => [\r\n                ...nds,\r\n                {\r\n                  id: `${nds.length + 1}`,\r\n                  type: \"customNode\",\r\n                  data: { label: newNodeLabel },\r\n                  position: { x: Math.random() * 400, y: Math.random() * 400 },\r\n                },\r\n              ]);\r\n              setIsModalOpen(false);\r\n              setNewNodeLabel(\"\");\r\n            }}\r\n          >\r\n            Add Node\r\n          </button>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,IAAIC,OAAO,EAAEC,aAAa,EAAEC,aAAa,QAAQ,WAAW;AAC5E,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAO,0BAA0B;AACjC,OAAO,sCAAsC;AAC7C,OAAO,cAAc;AACrB,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAG;EAChBC,UAAU,EAAEN;AACd,CAAC;AAED,MAAMO,cAAc,GAAG;EAAEC,OAAO,EAAE;AAAI,CAAC;AAEvCT,KAAK,CAACU,aAAa,CAAC,OAAO,CAAC;AAE5B,SAASC,sBAAsBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGlB,aAAa,CAACc,KAAK,CAACE,KAAK,IAAI,EAAE,CAAC;EACzE,MAAM,CAACG,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGpB,aAAa,CAACa,KAAK,CAACK,KAAK,IAAI,EAAE,CAAC;EACzE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC+B,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACqC,UAAU,EAAEC,aAAa,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMuC,SAAS,GAAGxC,WAAW,CAC1ByC,MAAM,IAAKjB,QAAQ,CAAEkB,GAAG,IAAKvC,OAAO,CAACsC,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAAClB,QAAQ,CACX,CAAC;EAED,MAAMmB,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;IACvC,MAAMC,OAAO,GAAG,IAAIC,GAAG,CAAC,CAAC;IACzB,MAAMC,KAAK,GAAG,CAAC,CAACJ,QAAQ,CAAC,CAAC;IAE1B,OAAOI,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,IAAI,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC;MAC1B,MAAMC,IAAI,GAAGF,IAAI,CAACA,IAAI,CAACD,MAAM,GAAG,CAAC,CAAC;MAElC,IAAIG,IAAI,KAAKP,QAAQ,EAAE;QACrB,OAAOK,IAAI;MACb;MAEA,IAAI,CAACJ,OAAO,CAACO,GAAG,CAACD,IAAI,CAAC,EAAE;QACtBN,OAAO,CAACQ,GAAG,CAACF,IAAI,CAAC;QACjB7B,KAAK,CACFgC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,KAAKL,IAAI,IAAII,IAAI,CAACE,MAAM,KAAKN,IAAI,CAAC,CAC9DO,OAAO,CAAEH,IAAI,IAAK;UACjB,MAAMI,QAAQ,GAAGJ,IAAI,CAACC,MAAM,KAAKL,IAAI,GAAGI,IAAI,CAACE,MAAM,GAAGF,IAAI,CAACC,MAAM;UACjET,KAAK,CAACa,IAAI,CAAC,CAAC,GAAGX,IAAI,EAAEU,QAAQ,CAAC,CAAC;QACjC,CAAC,CAAC;MACN;IACF;IACA,OAAO,EAAE;EACX,CAAC;EAED,MAAME,eAAe,GAAGA,CAACC,KAAK,EAAEX,IAAI,KAAK;IACvC,IAAI1B,WAAW,CAACuB,MAAM,KAAK,CAAC,IAAIvB,WAAW,CAACuB,MAAM,GAAG,CAAC,EAAE;MACtDtB,cAAc,CAAEqC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEZ,IAAI,CAAC,CAAC;MACzC/B,QAAQ,CAAE4C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRzC,WAAW,CAACwC,GAAG,CAAEE,EAAE,IAAKA,EAAE,CAACC,EAAE,CAAC,CAACC,QAAQ,CAACH,CAAC,CAACE,EAAE,CAAC,GACzC;QAAE,GAAGF,CAAC;QAAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAiB;MAAE,CAAC,GAC7CL,CAAC,CAACE,EAAE,KAAKjB,IAAI,CAACiB,EAAE,GAChB;QAAE,GAAGF,CAAC;QAAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAiB;MAAE,CAAC,GAC7CL,CACN,CACF,CAAC;IACH,CAAC,MAAM,IAAI,CAACvC,eAAe,EAAE;MAC3BC,kBAAkB,CAACuB,IAAI,CAAC;MACxBrB,eAAe,CAACqB,IAAI,CAAC;MACrB/B,QAAQ,CAAE4C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRA,CAAC,CAACE,EAAE,KAAKjB,IAAI,CAACiB,EAAE,GAAG;QAAE,GAAGF,CAAC;QAAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAkB;MAAE,CAAC,GAAGL,CACtE,CACF,CAAC;MACDzC,WAAW,CAACiC,OAAO,CAAC,CAACc,UAAU,EAAEC,KAAK,KAAK;QACzC,MAAMxB,IAAI,GAAGP,QAAQ,CAAC8B,UAAU,CAACJ,EAAE,EAAEjB,IAAI,CAACiB,EAAE,CAAC;QAC7C,MAAMM,KAAK,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAACD,KAAK,GAAG,CAAC,CAAC;QACjDlD,QAAQ,CAAEkB,GAAG,IACXA,GAAG,CAACwB,GAAG,CAAEV,IAAI,IAAK;UAChB,MAAMoB,QAAQ,GACZ1B,IAAI,CAACoB,QAAQ,CAACd,IAAI,CAACC,MAAM,CAAC,IAAIP,IAAI,CAACoB,QAAQ,CAACd,IAAI,CAACE,MAAM,CAAC;UAC1D,OAAO;YACL,GAAGF,IAAI;YACPqB,QAAQ,EAAED,QAAQ;YAClBL,KAAK,EAAE;cAAEO,MAAM,EAAEF,QAAQ,GAAGD,KAAK,GAAG;YAAQ;UAC9C,CAAC;QACH,CAAC,CACH,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,MAAM;MACLhD,cAAc,CAAC,CAACyB,IAAI,CAAC,CAAC;MACtBvB,kBAAkB,CAAC,IAAI,CAAC;MACxBR,QAAQ,CAAE4C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEC,CAAC,IACRA,CAAC,CAACE,EAAE,KAAKjB,IAAI,CAACiB,EAAE,GACZ;QAAE,GAAGF,CAAC;QAAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAiB;MAAE,CAAC,GAC7C;QAAE,GAAGL,CAAC;QAAEI,KAAK,EAAE;UAAEC,MAAM,EAAE;QAAO;MAAE,CACxC,CACF,CAAC;MACDhD,QAAQ,CAAEkB,GAAG,IACXA,GAAG,CAACwB,GAAG,CAAEV,IAAI,KAAM;QACjB,GAAGA,IAAI;QACPqB,QAAQ,EAAE,KAAK;QACfN,KAAK,EAAE;UAAEO,MAAM,EAAE;QAAQ;MAC3B,CAAC,CAAC,CACJ,CAAC;IACH;EACF,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BpD,cAAc,CAAC,EAAE,CAAC;IAClBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,eAAe,CAAC,IAAI,CAAC;IACrBV,QAAQ,CAAE4C,GAAG,IAAKA,GAAG,CAACC,GAAG,CAAEC,CAAC,KAAM;MAAE,GAAGA,CAAC;MAAEI,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE,CAAC,CAAC,CAAC,CAAC;IACxEjC,aAAa,CAAC,KAAK,CAAC;IACpBf,QAAQ,CAAEkB,GAAG,IACXA,GAAG,CAACwB,GAAG,CAAEV,IAAI,KAAM;MACjB,GAAGA,IAAI;MACPqB,QAAQ,EAAE,KAAK;MACfN,KAAK,EAAE;QAAEO,MAAM,EAAE;MAAQ;IAC3B,CAAC,CAAC,CACJ,CAAC;EACH,CAAC;EAED,oBACErE,OAAA;IACEuE,SAAS,EAAC,iBAAiB;IAC3BT,KAAK,EAAE;MAAEU,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE7D3E,OAAA;MAAKuE,SAAS,EAAC,OAAO;MAACT,KAAK,EAAE;QAAEW,MAAM,EAAE;MAAO,CAAE;MAAAE,QAAA,gBAC/C3E,OAAA;QAAKuE,SAAS,EAAC,wDAAwD;QAAAI,QAAA,gBACrE3E,OAAA;UAAA2E,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB/E,OAAA;UAAQuE,SAAS,EAAC,mBAAmB;UAACS,OAAO,EAAEV,cAAe;UAAAK,QAAA,EAAC;QAE/D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN/E,OAAA,CAACP,SAAS;QACRU,SAAS,EAAEA,SAAU;QACrBQ,KAAK,EAAEA,KAAK,CAAC8C,GAAG,CAAEd,IAAI,KAAM;UAC1B,GAAGA,IAAI;UACPsC,IAAI,EAAE;YACJ,GAAGtC,IAAI,CAACsC,IAAI;YACZC,WAAW,EAAE7B,eAAe;YAC5B8B,OAAO,EAAEtD;UACX;QACF,CAAC,CAAC,CAAE;QACJf,KAAK,EAAEA,KAAM;QACbD,aAAa,EAAEA,aAAc;QAC7BG,aAAa,EAAEA,aAAc;QAC7Be,SAAS,EAAEA,SAAU;QACrBqD,OAAO;QACP/E,cAAc,EAAEA,cAAe;QAC/BgF,WAAW,EAAEhC;MAAgB;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN/E,OAAA;MACEuE,SAAS,EAAC,OAAO;MACjBT,KAAK,EAAE;QAAExD,OAAO,EAAE,MAAM;QAAEgF,UAAU,EAAE;MAAiB,CAAE;MAAAX,QAAA,EAExDtD,YAAY,gBACXrB,OAAA,CAAAE,SAAA;QAAAyE,QAAA,gBACE3E,OAAA;UAAA2E,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB/E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAI,QAAA,gBAC9B3E,OAAA;YAAOuF,OAAO,EAAC,YAAY;YAAAZ,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxC/E,OAAA;YACEwF,IAAI,EAAC,MAAM;YACX5B,EAAE,EAAC,YAAY;YACfW,SAAS,EAAC,cAAc;YACxBkB,KAAK,EAAEpE,YAAY,CAAC4D,IAAI,CAACS,KAAM;YAC/BC,QAAQ,EAAGC,CAAC,IACVhF,QAAQ,CAAE4C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEd,IAAI,IACXA,IAAI,CAACiB,EAAE,KAAKvC,YAAY,CAACuC,EAAE,GACvB;cACE,GAAGjB,IAAI;cACPsC,IAAI,EAAE;gBAAE,GAAGtC,IAAI,CAACsC,IAAI;gBAAES,KAAK,EAAEE,CAAC,CAAC3C,MAAM,CAACwC;cAAM;YAC9C,CAAC,GACD9C,IACN,CACF;UACD;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAI,QAAA,gBAC9B3E,OAAA;YAAOuF,OAAO,EAAC,iBAAiB;YAAAZ,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD/E,OAAA;YACE4D,EAAE,EAAC,iBAAiB;YACpBW,SAAS,EAAC,cAAc;YACxBT,KAAK,EAAE;cAAEW,MAAM,EAAE;YAAQ,CAAE;YAC3BoB,WAAW,EAAC,2BAA2B;YACvCJ,KAAK,EAAEpE,YAAY,CAAC4D,IAAI,CAACa,WAAW,IAAI,EAAG;YAC3CH,QAAQ,EAAGC,CAAC,IACVhF,QAAQ,CAAE4C,GAAG,IACXA,GAAG,CAACC,GAAG,CAAEd,IAAI,IACXA,IAAI,CAACiB,EAAE,KAAKvC,YAAY,CAACuC,EAAE,GACvB;cACE,GAAGjB,IAAI;cACPsC,IAAI,EAAE;gBAAE,GAAGtC,IAAI,CAACsC,IAAI;gBAAEa,WAAW,EAAEF,CAAC,CAAC3C,MAAM,CAACwC;cAAM;YACpD,CAAC,GACD9C,IACN,CACF;UACD;YAAAiC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAI,QAAA,gBAC9B3E,OAAA;YAAOuF,OAAO,EAAC,eAAe;YAAAZ,QAAA,EAAC;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxD/E,OAAA;YACEwF,IAAI,EAAC,MAAM;YACX5B,EAAE,EAAC,eAAe;YAClBW,SAAS,EAAC,cAAc;YACxBkB,KAAK,EAAEpE,YAAY,CAAC4D,IAAI,CAACS,KAAM;YAC/BK,QAAQ;UAAA;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAEN/E,OAAA;UAAKuE,SAAS,EAAC,uBAAuB;UAAAI,QAAA,gBACpC3E,OAAA;YAAA2E,QAAA,EAAQ;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAAC1D,YAAY,CAAC4D,IAAI,CAACS,KAAK;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA,eACN,CAAC,gBAEH/E,OAAA,CAAAE,SAAA;QAAAyE,QAAA,EACG1D,WAAW,CAACuB,MAAM,GAAG,CAAC,gBACrBxC,OAAA;UAAKuE,SAAS,EAAC,iDAAiD;UAACyB,IAAI,EAAC,OAAO;UAAArB,QAAA,GAC1EhD,YAAY,eACb3B,OAAA;YACEwF,IAAI,EAAC,QAAQ;YACbjB,SAAS,EAAC,OAAO;YACjB,gBAAa,OAAO;YACpB,cAAW,OAAO;YAAAI,QAAA,eAElB3E,OAAA;cAAM,eAAY,MAAM;cAAA2E,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,gBAEN/E,OAAA;UAAA2E,QAAA,EAAK;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK;MACvB,gBACD;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACN/E,OAAA,CAACH,KAAK;MAACoG,MAAM,EAAE1E,WAAY;MAAC2E,cAAc,EAAEA,CAAA,KAAM1E,cAAc,CAAC,KAAK,CAAE;MAAAmD,QAAA,gBACtE3E,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAI,QAAA,gBAC3B3E,OAAA;UAAIuE,SAAS,EAAC,aAAa;UAAAI,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACzC/E,OAAA;UACEwF,IAAI,EAAC,QAAQ;UACbjB,SAAS,EAAC,OAAO;UACjBS,OAAO,EAAEA,CAAA,KAAMxD,cAAc,CAAC,KAAK,CAAE;UAAAmD,QAAA,eAErC3E,OAAA;YAAA2E,QAAA,EAAM;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN/E,OAAA;QAAKuE,SAAS,EAAC,YAAY;QAAAI,QAAA,eACzB3E,OAAA;UAAKuE,SAAS,EAAC,iBAAiB;UAAAI,QAAA,gBAC9B3E,OAAA;YAAOuF,OAAO,EAAC,cAAc;YAAAZ,QAAA,EAAC;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACpD/E,OAAA;YACEwF,IAAI,EAAC,MAAM;YACX5B,EAAE,EAAC,cAAc;YACjBW,SAAS,EAAC,cAAc;YACxBsB,WAAW,EAAC,gBAAgB;YAC5BJ,KAAK,EAAEhE,YAAa;YACpBkE,QAAQ,EAAGC,CAAC,IAAKlE,eAAe,CAACkE,CAAC,CAAC3C,MAAM,CAACwC,KAAK;UAAE;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN/E,OAAA;QAAKuE,SAAS,EAAC,cAAc;QAAAI,QAAA,gBAC3B3E,OAAA;UACEwF,IAAI,EAAC,QAAQ;UACbjB,SAAS,EAAC,mBAAmB;UAC7BS,OAAO,EAAEA,CAAA,KAAMxD,cAAc,CAAC,KAAK,CAAE;UAAAmD,QAAA,EACtC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/E,OAAA;UACEwF,IAAI,EAAC,QAAQ;UACbjB,SAAS,EAAC,iBAAiB;UAC3BS,OAAO,EAAEA,CAAA,KAAM;YACbpE,QAAQ,CAAE4C,GAAG,IAAK,CAChB,GAAGA,GAAG,EACN;cACEI,EAAE,EAAE,GAAGJ,GAAG,CAAChB,MAAM,GAAG,CAAC,EAAE;cACvBgD,IAAI,EAAE,YAAY;cAClBP,IAAI,EAAE;gBAAES,KAAK,EAAEjE;cAAa,CAAC;cAC7B0E,QAAQ,EAAE;gBAAEC,CAAC,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;gBAAEC,CAAC,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;cAAI;YAC7D,CAAC,CACF,CAAC;YACF9E,cAAc,CAAC,KAAK,CAAC;YACrBE,eAAe,CAAC,EAAE,CAAC;UACrB,CAAE;UAAAiD,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACrE,EAAA,CA1RQF,sBAAsB;EAAA,QACYb,aAAa,EACbC,aAAa;AAAA;AAAA4G,EAAA,GAF/ChG,sBAAsB;AA4R/B,eAAeA,sBAAsB;AAAC,IAAAgG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}