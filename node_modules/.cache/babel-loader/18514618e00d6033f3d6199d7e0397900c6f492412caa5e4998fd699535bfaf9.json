{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport ReactFlow, { addEdge, ConnectionLineType, useNodesState, useEdgesState, Background, Controls } from \"reactflow\";\nimport dagre from \"dagre\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: \"1\",\n  position: {\n    x: 0,\n    y: 0\n  },\n  data: {\n    label: \"Product Marketing\"\n  }\n}, {\n  id: \"2\",\n  position: {\n    x: 0,\n    y: 100\n  },\n  data: {\n    label: \"Advertising\"\n  }\n}, {\n  id: \"3a\",\n  position: {\n    x: 0,\n    y: 200\n  },\n  data: {\n    label: \"Amazon Advertising\"\n  }\n}, {\n  id: \"3b\",\n  position: {\n    x: 0,\n    y: 200\n  },\n  data: {\n    label: \"Google Advertising\"\n  }\n}];\nconst initialEdges = [{\n  id: \"e1-2\",\n  source: \"1\",\n  target: \"2\",\n  animated: true\n}, {\n  id: \"e1-3\",\n  source: \"2\",\n  target: \"3a\",\n  animated: true\n}, {\n  id: \"e1-4\",\n  source: \"2\",\n  target: \"3b\",\n  animated: true\n}];\nconst dagreGraph = new dagre.graphlib.Graph();\ndagreGraph.setDefaultEdgeLabel(() => ({}));\nconst nodeWidth = 172;\nconst nodeHeight = 36;\nconst getLayoutedElements = (nodes, edges, direction) => {\n  const isHorizontal = direction === \"LR\";\n  dagreGraph.setGraph({\n    rankdir: direction\n  });\n  nodes.forEach(node => {\n    dagreGraph.setNode(node.id, {\n      width: nodeWidth,\n      height: nodeHeight\n    });\n  });\n  edges.forEach(edge => {\n    dagreGraph.setEdge(edge.source, edge.target);\n  });\n  dagre.layout(dagreGraph);\n  nodes.forEach(node => {\n    const nodeWithPosition = dagreGraph.node(node.id);\n    node.targetPosition = isHorizontal ? \"left\" : \"top\";\n    node.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\n\n    // We are shifting the dagre node position (anchor=center center) to the top left\n    // so it matches the React Flow node anchor point (top left).\n    node.position = {\n      x: nodeWithPosition.x - nodeWidth / 2,\n      y: nodeWithPosition.y - nodeHeight / 2\n    };\n    return node;\n  });\n  return {\n    nodes,\n    edges\n  };\n};\n\n// graph direction options\n// TB - top to bottom\n// BT - bottom to top\n// LR - left to right\n// RL - right to left\nconst direction = \"TB\";\nconst {\n  nodes: layoutedNodes,\n  edges: layoutedEdges\n} = getLayoutedElements(initialNodes, initialEdges, direction);\nconst LayoutFlow = () => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(layoutedNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(layoutedEdges);\n  const onConnect = useCallback(params => setEdges(eds => addEdge({\n    ...params,\n    type: ConnectionLineType.SmoothStep,\n    animated: true\n  }, eds)), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"react-flow-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        connectionLineType: ConnectionLineType.SmoothStep,\n        fitView: true,\n        children: [/*#__PURE__*/_jsxDEV(Controls, {\n          position: \"top-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Background, {\n          color: \"#aaa\",\n          gap: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutFlow, \"mmoxFmHOvuuD77aIm5gUqDEdUKU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = LayoutFlow;\nexport default LayoutFlow;\nvar _c;\n$RefreshReg$(_c, \"LayoutFlow\");","map":{"version":3,"names":["React","useCallback","ReactFlow","addEdge","ConnectionLineType","useNodesState","useEdgesState","Background","Controls","dagre","jsxDEV","_jsxDEV","initialNodes","id","position","x","y","data","label","initialEdges","source","target","animated","dagreGraph","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","nodeHeight","getLayoutedElements","nodes","edges","direction","isHorizontal","setGraph","rankdir","forEach","node","setNode","width","height","edge","setEdge","layout","nodeWithPosition","targetPosition","sourcePosition","layoutedNodes","layoutedEdges","LayoutFlow","_s","setNodes","onNodesChange","setEdges","onEdgesChange","onConnect","params","eds","type","SmoothStep","className","children","style","connectionLineType","fitView","fileName","_jsxFileName","lineNumber","columnNumber","color","gap","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  ConnectionLineType,\n  useNodesState,\n  useEdgesState,\n  Background,\n  Controls,\n} from \"reactflow\";\nimport dagre from \"dagre\";\n\nimport \"reactflow/dist/style.css\";\n\nconst initialNodes = [\n  {\n    id: \"1\",\n    position: { x: 0, y: 0 },\n    data: { label: \"Product Marketing\" },\n  },\n  {\n    id: \"2\",\n    position: { x: 0, y: 100 },\n    data: { label: \"Advertising\" },\n  },\n  {\n    id: \"3a\",\n    position: { x: 0, y: 200 },\n    data: { label: \"Amazon Advertising\" },\n  },\n  {\n    id: \"3b\",\n    position: { x: 0, y: 200 },\n    data: { label: \"Google Advertising\" },\n  },\n];\n\nconst initialEdges = [\n  { id: \"e1-2\", source: \"1\", target: \"2\", animated: true },\n  { id: \"e1-3\", source: \"2\", target: \"3a\", animated: true },\n  { id: \"e1-4\", source: \"2\", target: \"3b\", animated: true },\n];\n\nconst dagreGraph = new dagre.graphlib.Graph();\ndagreGraph.setDefaultEdgeLabel(() => ({}));\n\nconst nodeWidth = 172;\nconst nodeHeight = 36;\n\nconst getLayoutedElements = (nodes, edges, direction) => {\n  const isHorizontal = direction === \"LR\";\n  dagreGraph.setGraph({ rankdir: direction });\n\n  nodes.forEach((node) => {\n    dagreGraph.setNode(node.id, { width: nodeWidth, height: nodeHeight });\n  });\n\n  edges.forEach((edge) => {\n    dagreGraph.setEdge(edge.source, edge.target);\n  });\n\n  dagre.layout(dagreGraph);\n\n  nodes.forEach((node) => {\n    const nodeWithPosition = dagreGraph.node(node.id);\n    node.targetPosition = isHorizontal ? \"left\" : \"top\";\n    node.sourcePosition = isHorizontal ? \"right\" : \"bottom\";\n\n    // We are shifting the dagre node position (anchor=center center) to the top left\n    // so it matches the React Flow node anchor point (top left).\n    node.position = {\n      x: nodeWithPosition.x - nodeWidth / 2,\n      y: nodeWithPosition.y - nodeHeight / 2,\n    };\n\n    return node;\n  });\n\n  return { nodes, edges };\n};\n\n// graph direction options\n// TB - top to bottom\n// BT - bottom to top\n// LR - left to right\n// RL - right to left\nconst direction = \"TB\";\n\nconst { nodes: layoutedNodes, edges: layoutedEdges } = getLayoutedElements(\n  initialNodes,\n  initialEdges,\n  direction\n);\n\nconst LayoutFlow = () => {\n  const [nodes, setNodes, onNodesChange] = useNodesState(layoutedNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(layoutedEdges);\n\n  const onConnect = useCallback(\n    (params) =>\n      setEdges((eds) =>\n        addEdge(\n          { ...params, type: ConnectionLineType.SmoothStep, animated: true },\n          eds\n        )\n      ),\n    []\n  );\n\n  return (\n    <div className=\"react-flow-container\">\n      <div style={{ width: \"100%\", height: \"100%\" }}>\n        <ReactFlow\n          nodes={nodes}\n          edges={edges}\n          onNodesChange={onNodesChange}\n          onEdgesChange={onEdgesChange}\n          onConnect={onConnect}\n          connectionLineType={ConnectionLineType.SmoothStep}\n          fitView\n        >\n          <Controls position=\"top-left\" />\n          <Background color=\"#aaa\" gap={16} />\n        </ReactFlow>\n      </div>\n    </div>\n  );\n};\n\nexport default LayoutFlow;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}