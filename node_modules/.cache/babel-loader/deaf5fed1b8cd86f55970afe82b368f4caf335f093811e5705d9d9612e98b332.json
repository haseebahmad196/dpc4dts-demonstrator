{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\StructurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  addNewRoot\n}) => {\n  _s();\n  const [selectedHolon, setSelectedHolon] = useState(null); // Separate state for selected holon in StructurePage\n\n  const isSelected = node => selectedHolon && selectedHolon.id === node.id;\n  const handleSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"structure-page\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      lineStyle: \"dashed\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: handleSelectNode,\n        isSelected: isSelected,\n        addNewRoot: addNewRoot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"holon-details-name\",\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"holon-details-description\",\n          children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-selection\",\n        children: \"No Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(StructurePage, \"Nn7nM7EeqgW4tP0X7ChwiziNFiM=\");\n_c2 = StructurePage;\nexport default StructurePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","icon","id","map","child","_c","StructurePage","nodes","_s","selectedHolon","setSelectedHolon","handleSelectNode","lineWidth","lineColor","lineBorderRadius","lineStyle","description","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/StructurePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                    <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                    addNewRoot={addNewRoot}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, addNewRoot }) => {\r\n    const [selectedHolon, setSelectedHolon] = useState(null); // Separate state for selected holon in StructurePage\r\n\r\n    const isSelected = (node) => selectedHolon && selectedHolon.id === node.id;\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedHolon(node);\r\n    };\r\n\r\n    return (\r\n        <div className=\"structure-page\">\r\n            <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                <Holon\r\n                    node={nodes}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={handleSelectNode}\r\n                    isSelected={isSelected}\r\n                    addNewRoot={addNewRoot}\r\n                />\r\n            </Tree>\r\n            <div className=\"holon-details\">\r\n                <h2>Holon Details</h2>\r\n                {selectedHolon ? (\r\n                    <>\r\n                        <p className='holon-details-name'>Name: {selectedHolon.name}</p>\r\n                        <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\r\n                    </>\r\n                ) : (\r\n                    <p className='no-selection'>No Selection</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StructurePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}