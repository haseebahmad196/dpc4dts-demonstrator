{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\CommunicationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree } from 'react-organizational-chart'; // Removed TreeNode import\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = Alert;\nconst Holon = ({\n  node,\n  onSelectNode,\n  isSelected,\n  setSelectedHolonIds,\n  hoveredHolonId,\n  setHoveredHolonId,\n  showAddSign,\n  setShowAddSign,\n  showRegulationLine,\n  toggleAddMessage\n}) => {\n  const handleNodeClick = () => {\n    setSelectedHolonIds([node.id]); // Select the Holon\n    setShowAddSign(true); // Show the add signs on all Holons\n    toggleAddMessage(false); // Hide the message\n  };\n  const handleAddClick = e => {\n    e.stopPropagation();\n    setSelectedHolonIds([node.id]); // Select the Holon\n    setShowAddSign(false); // Hide the add signs from all Holons\n    toggleAddMessage(true); // Show the message\n  };\n  const handleMouseEnter = () => {\n    setHoveredHolonId(node.id); // Set the hovered Holon\n  };\n  const handleMouseLeave = () => {\n    setHoveredHolonId(null); // Clear the hovered Holon\n  };\n  const selected = isSelected(node);\n  const isHovered = hoveredHolonId === node.id && !selected; // Prevent green hover effect when selected\n\n  return /*#__PURE__*/_jsxDEV(Tree.TreeNode, {\n    // Changed to Tree.TreeNode\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''}`,\n      onClick: handleNodeClick,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), showAddSign && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: handleAddClick,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      setSelectedHolonIds: setSelectedHolonIds,\n      hoveredHolonId: hoveredHolonId,\n      setHoveredHolonId: setHoveredHolonId,\n      showAddSign: showAddSign // Show add sign on all Holons\n      ,\n      setShowAddSign: setShowAddSign,\n      showRegulationLine: showRegulationLine,\n      toggleAddMessage: toggleAddMessage // Pass down function to toggle the message\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }, this)), showRegulationLine && node.id === 'Information System' && /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: \"50%\",\n      y1: \"50%\",\n      x2: \"50%\",\n      y2: \"100%\",\n      className: \"regulation-channel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this) // Changed to Tree.TreeNode\n  ;\n};\n_c2 = Holon;\nconst CommunicationPage = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n  const [selectedHolonIds, setSelectedHolonIds] = useState([]);\n  const [hoveredHolonId, setHoveredHolonId] = useState(null);\n  const [showAddSign, setShowAddSign] = useState(true);\n  const [showRegulationLine, setShowRegulationLine] = useState(false);\n  const [showAddMessage, setShowAddMessage] = useState(false); // Define showAddMessage state\n\n  const toggleAddMessage = value => {\n    setShowAddMessage(value); // Toggle the message\n  };\n  const handleSelectNode = node => {\n    setSelectedHolonIds([node.id]);\n    setShowAddSign(true); // Show the add signs on all Holons\n  };\n  const isSelected = node => selectedHolonIds.includes(node.id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: showRegulationLine ? \"2px\" : \"4px\",\n        lineColor: showRegulationLine ? \"green\" : \"blue\",\n        lineBorderRadius: \"5px\",\n        lineStyle: \"solid\",\n        children: [/*#__PURE__*/_jsxDEV(Holon, {\n          node: initialNodes,\n          onSelectNode: handleSelectNode,\n          isSelected: isSelected,\n          setSelectedHolonIds: setSelectedHolonIds,\n          hoveredHolonId: hoveredHolonId,\n          setHoveredHolonId: setHoveredHolonId,\n          showAddSign: showAddSign\n          // Show add sign on all Holons\n          ,\n          setShowAddSign: setShowAddSign,\n          showRegulationLine: showRegulationLine,\n          toggleAddMessage: toggleAddMessage // Pass down function to toggle the message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), \"))}\", showRegulationLine && node.id === 'Information System' && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"50%\",\n          y1: \"50%\",\n          x2: \"50%\",\n          y2: \"100%\",\n          className: \"regulation-channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), \" // Removed TreeNode component and replaced with Tree\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), showAddMessage && /*#__PURE__*/_jsxDEV(Alert, {\n      message: \"Click another holon to add an information flow.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(CommunicationPage, \"Z294gsWQRt2WgCVFPoIf8xDipYE=\");\n_c3 = CommunicationPage;\nexport default CommunicationPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Holon\");\n$RefreshReg$(_c3, \"CommunicationPage\");","map":{"version":3,"names":["React","useState","Tree","jsxDEV","_jsxDEV","Alert","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Holon","node","onSelectNode","isSelected","setSelectedHolonIds","hoveredHolonId","setHoveredHolonId","showAddSign","setShowAddSign","showRegulationLine","toggleAddMessage","handleNodeClick","id","handleAddClick","e","stopPropagation","handleMouseEnter","handleMouseLeave","selected","isHovered","TreeNode","label","onClick","onMouseEnter","onMouseLeave","name","map","child","x1","y1","x2","y2","_c2","CommunicationPage","_s","initialNodes","selectedHolonIds","setShowRegulationLine","showAddMessage","setShowAddMessage","value","handleSelectNode","includes","lineWidth","lineColor","lineBorderRadius","lineStyle","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/CommunicationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree } from 'react-organizational-chart'; // Removed TreeNode import\r\nimport './styles.css';\r\n\r\nconst Alert = ({ message }) => {\r\n    return (\r\n        <div className=\"alert\">\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Holon = ({ node, onSelectNode, isSelected, setSelectedHolonIds, hoveredHolonId, setHoveredHolonId, showAddSign, setShowAddSign, showRegulationLine, toggleAddMessage }) => {\r\n    const handleNodeClick = () => {\r\n        setSelectedHolonIds([node.id]); // Select the Holon\r\n        setShowAddSign(true); // Show the add signs on all Holons\r\n        toggleAddMessage(false); // Hide the message\r\n    };\r\n\r\n    const handleAddClick = (e) => {\r\n        e.stopPropagation();\r\n        setSelectedHolonIds([node.id]); // Select the Holon\r\n        setShowAddSign(false); // Hide the add signs from all Holons\r\n        toggleAddMessage(true); // Show the message\r\n    };\r\n\r\n    const handleMouseEnter = () => {\r\n        setHoveredHolonId(node.id); // Set the hovered Holon\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        setHoveredHolonId(null); // Clear the hovered Holon\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n    const isHovered = hoveredHolonId === node.id && !selected; // Prevent green hover effect when selected\r\n\r\n    return (\r\n        <Tree.TreeNode // Changed to Tree.TreeNode\r\n            label={\r\n                <div\r\n                    className={`tree-label ${selected ? 'selected' : ''} ${isHovered ? 'hovered' : ''}`}\r\n                    onClick={handleNodeClick}\r\n                    onMouseEnter={handleMouseEnter}\r\n                    onMouseLeave={handleMouseLeave}\r\n                >\r\n                    <div className=\"name\">{node.name}</div>\r\n                    {showAddSign && (\r\n                        <div className=\"buttons\">\r\n                            <button className=\"add-button\" onClick={handleAddClick}>\r\n                                +\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            }\r\n        >\r\n            {node.children &&\r\n                node.children.map((child) => (\r\n                    <Holon\r\n                        key={child.id}\r\n                        node={child}\r\n                        onSelectNode={onSelectNode}\r\n                        isSelected={isSelected}\r\n                        setSelectedHolonIds={setSelectedHolonIds}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        showAddSign={showAddSign} // Show add sign on all Holons\r\n                        setShowAddSign={setShowAddSign}\r\n                        showRegulationLine={showRegulationLine}\r\n                        toggleAddMessage={toggleAddMessage} // Pass down function to toggle the message\r\n                    />\r\n                ))}\r\n            {showRegulationLine && node.id === 'Information System' && (\r\n                <line x1=\"50%\" y1=\"50%\" x2=\"50%\" y2=\"100%\" className=\"regulation-channel\" />\r\n            )}\r\n        </Tree.TreeNode> // Changed to Tree.TreeNode\r\n    );\r\n};\r\n\r\nconst CommunicationPage = () => {\r\n    const initialNodes = {\r\n        id: 'root',\r\n        name: 'Information System',\r\n        children: [\r\n            {\r\n                id: 'Stakeholder',\r\n                name: 'Stakeholder',\r\n                children: [],\r\n            },\r\n            {\r\n                id: 'Infrastructure',\r\n                name: 'Infrastructure',\r\n                children: [],\r\n            }\r\n        ],\r\n    };\r\n\r\n    const [selectedHolonIds, setSelectedHolonIds] = useState([]);\r\n    const [hoveredHolonId, setHoveredHolonId] = useState(null);\r\n    const [showAddSign, setShowAddSign] = useState(true);\r\n    const [showRegulationLine, setShowRegulationLine] = useState(false);\r\n    const [showAddMessage, setShowAddMessage] = useState(false); // Define showAddMessage state\r\n\r\n    const toggleAddMessage = (value) => {\r\n        setShowAddMessage(value); // Toggle the message\r\n    };\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedHolonIds([node.id]);\r\n        setShowAddSign(true); // Show the add signs on all Holons\r\n    };\r\n\r\n    const isSelected = (node) => selectedHolonIds.includes(node.id);\r\n\r\n    return (\r\n        <div className=\"app-container\">\r\n            <div className=\"content-area\">\r\n                <Tree \r\n                    lineWidth={showRegulationLine ? \"2px\" : \"4px\"} \r\n                    lineColor={showRegulationLine ? \"green\" : \"blue\"} \r\n                    lineBorderRadius={\"5px\"} \r\n                    lineStyle={\"solid\"}\r\n                >\r\n                    <Holon\r\n                        node={initialNodes}\r\n                        onSelectNode={handleSelectNode}\r\n                        isSelected={isSelected}\r\n                        setSelectedHolonIds={setSelectedHolonIds}\r\n                        hoveredHolonId={hoveredHolonId}\r\n                        setHoveredHolonId={setHoveredHolonId}\r\n                        showAddSign={showAddSign}\r\n                        // Show add sign on all Holons\r\n                        setShowAddSign={setShowAddSign}\r\n                        showRegulationLine={showRegulationLine}\r\n                        toggleAddMessage={toggleAddMessage} // Pass down function to toggle the message\r\n                    />\r\n                ))}\r\n            {showRegulationLine && node.id === 'Information System' && (\r\n                <line x1=\"50%\" y1=\"50%\" x2=\"50%\" y2=\"100%\" className=\"regulation-channel\" />\r\n            )}\r\n        </Tree> // Removed TreeNode component and replaced with Tree\r\n    </div>\r\n    {showAddMessage && <Alert message=\"Click another holon to add an information flow.\" />}\r\n</div>\r\n);\r\n};\r\n\r\nexport default CommunicationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}