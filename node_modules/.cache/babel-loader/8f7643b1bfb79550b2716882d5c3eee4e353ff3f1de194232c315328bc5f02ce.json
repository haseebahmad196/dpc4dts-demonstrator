{"ast":null,"code":"var _jsxFileName = \"C:\\\\Em1\\\\Kastel\\\\dpc4dts-demonstrator\\\\src\\\\CommunicationReactFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, MarkerType } from \"reactflow\";\nimport Modal from \"react-modal\";\nimport \"reactflow/dist/style.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\nimport CustomNodeFlow from \"./CustomNodeFlow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNodeFlow\n};\nconst fitViewOptions = {\n  padding: 0.5\n};\nModal.setAppElement(\"#root\");\nfunction CommunicationReactFlow(props) {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\n  const [sourceNode, setSourceNode] = useState(null);\n  const [destinationNode, setDestinationNode] = useState(null);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Function to enable information flow and automatically set the first selected node as source\n  const startInformationFlow = () => {\n    setEnableInformationFlow(true);\n    setSourceNode(null);\n    setDestinationNode(null);\n  };\n  const handleNodeClick = (event, nodeData) => {\n    if (!enableInformationFlow) return;\n    const clickedNode = nodes.find(n => n.id === nodeData.id) || nodeData;\n    if (!sourceNode) {\n      setSourceNode(clickedNode);\n      setNodes(nds => nds.map(n => n.id === clickedNode.id ? {\n        ...n,\n        style: {\n          border: \"2px solid blue\"\n        }\n      } : n));\n    } else if (sourceNode.id !== clickedNode.id) {\n      setDestinationNode(clickedNode);\n      setNodes(nds => nds.map(n => n.id === clickedNode.id ? {\n        ...n,\n        style: {\n          border: \"2px solid green\"\n        }\n      } : n));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      display: \"flex\",\n      height: \"100vh\",\n      width: \"98vw\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-8\",\n      style: {\n        height: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: startInformationFlow,\n          children: \"Add Information Flow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactFlow, {\n        nodeTypes: nodeTypes,\n        nodes: nodes,\n        edges: edges,\n        onNodesChange: onNodesChange,\n        onEdgesChange: onEdgesChange,\n        onConnect: onConnect,\n        fitView: true,\n        fitViewOptions: fitViewOptions,\n        style: {\n          width: \"100%\",\n          height: \"90%\"\n        },\n        onNodeClick: handleNodeClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(CommunicationReactFlow, \"5r5udZ2yiB2ooEO4Qbtzl07mOng=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = CommunicationReactFlow;\nexport default CommunicationReactFlow;\nvar _c;\n$RefreshReg$(_c, \"CommunicationReactFlow\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","addEdge","useNodesState","useEdgesState","MarkerType","Modal","CustomNodeFlow","jsxDEV","_jsxDEV","nodeTypes","customNode","fitViewOptions","padding","setAppElement","CommunicationReactFlow","props","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","sourceNode","setSourceNode","destinationNode","setDestinationNode","selectedNode","setSelectedNode","enableInformationFlow","setEnableInformationFlow","onConnect","params","eds","startInformationFlow","handleNodeClick","event","nodeData","clickedNode","find","n","id","nds","map","style","border","className","display","height","width","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fitView","onNodeClick","_c","$RefreshReg$"],"sources":["C:/Em1/Kastel/dpc4dts-demonstrator/src/CommunicationReactFlow.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  MarkerType,\r\n} from \"reactflow\";\r\nimport Modal from \"react-modal\";\r\nimport \"reactflow/dist/style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport CustomNodeFlow from \"./CustomNodeFlow\";\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNodeFlow,\r\n};\r\n\r\nconst fitViewOptions = { padding: 0.5 };\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction CommunicationReactFlow(props) {\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(props.nodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState(props.edges);\r\n  const [sourceNode, setSourceNode] = useState(null);\r\n  const [destinationNode, setDestinationNode] = useState(null);\r\n  const [selectedNode, setSelectedNode] = useState(null);\r\n  const [enableInformationFlow, setEnableInformationFlow] = useState(false);\r\n\r\n  const onConnect = useCallback(\r\n    (params) => setEdges((eds) => addEdge(params, eds)),\r\n    [setEdges]\r\n  );\r\n\r\n  // Function to enable information flow and automatically set the first selected node as source\r\n  const startInformationFlow = () => {\r\n    setEnableInformationFlow(true);\r\n    setSourceNode(null);\r\n    setDestinationNode(null);\r\n  };\r\n\r\n  const handleNodeClick = (event, nodeData) => {\r\n    if (!enableInformationFlow) return;\r\n\r\n    const clickedNode = nodes.find((n) => n.id === nodeData.id) || nodeData;\r\n    if (!sourceNode) {\r\n      setSourceNode(clickedNode);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === clickedNode.id ? { ...n, style: { border: \"2px solid blue\" } } : n\r\n        )\r\n      );\r\n    } else if (sourceNode.id !== clickedNode.id) {\r\n      setDestinationNode(clickedNode);\r\n      setNodes((nds) =>\r\n        nds.map((n) =>\r\n          n.id === clickedNode.id\r\n            ? { ...n, style: { border: \"2px solid green\" } }\r\n            : n\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\" style={{ display: \"flex\", height: \"100vh\", width: \"98vw\" }}>\r\n      <div className=\"col-8\" style={{ height: \"100%\" }}>\r\n        <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n          <button className={\"btn btn-success\"} onClick={startInformationFlow}>\r\n            Add Information Flow\r\n          </button>\r\n        </div>\r\n\r\n        <ReactFlow\r\n          nodeTypes={nodeTypes}\r\n          nodes={nodes}\r\n          edges={edges}\r\n          onNodesChange={onNodesChange}\r\n          onEdgesChange={onEdgesChange}\r\n          onConnect={onConnect}\r\n          fitView\r\n          fitViewOptions={fitViewOptions}\r\n          style={{ width: \"100%\", height: \"90%\" }}\r\n          onNodeClick={handleNodeClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CommunicationReactFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}