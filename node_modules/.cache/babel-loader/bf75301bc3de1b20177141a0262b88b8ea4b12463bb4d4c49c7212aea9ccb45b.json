{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  const handleAddNode = type => {\n    setRelationshipType(type);\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setRelationshipType('');\n    setNodeName('');\n  };\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    if (!nodeName) return;\n    if (relationshipType.toLowerCase() === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (relationshipType.toLowerCase() === 'parent') {\n      addNewRoot(node, nodeName);\n    }\n    setNodeName('');\n  };\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => handleAddNode('child')),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this),\n    children: [node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      addNewRoot: addNewRoot\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Add \", relationshipType, \" Node\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name of the node:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleConfirmModal,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Holon, \"L35Ay2mxhmzyyiJ/+6oQ6CRZnPE=\");\n_c = Holon;\nconst App = () => {\n  _s2();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAddChild = (parentNode, isRoot = false, nodeName) => {\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n  const addNewRoot = (parentNode, nodeName) => {\n    const newParent = {\n      id: `root-${Math.random()}`,\n      name: nodeName,\n      children: [parentNode]\n    };\n    setNodes({\n      id: 'root',\n      name: 'Information System',\n      children: [newParent]\n    });\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, parentId, nodeId) => {\n      if (nodes.id === parentId) {\n        nodes.children = nodes.children.filter(child => child.id !== nodeId);\n        return;\n      }\n      nodes.children.forEach(child => removeNode(child, parentId, nodeId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNode(newNodes, 'root', nodeId);\n    setNodes(newNodes);\n  };\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  const isSelected = node => {\n    return selectedHolon && selectedHolon.id === node.id;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"steps-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Step 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle active\",\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Step 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"step\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-circle\",\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step-label\",\n          children: \"Step 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"holon-details\",\n        children: selectedHolon ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedHolon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedHolon.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onAddChild(selectedHolon, false),\n            children: \"Add Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-selection\",\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tree, {\n        label: \"Information System\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: isSelected,\n          addNewRoot: addNewRoot\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"31YFXVOmbk0FSScOe6uAY/bmYAY=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","addNewRoot","_s","showModal","setShowModal","relationshipType","setRelationshipType","nodeName","setNodeName","handleActionClick","e","action","stopPropagation","selected","handleAddNode","type","handleCloseModal","handleConfirmModal","toLowerCase","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","show","onHide","Header","closeButton","Title","Body","Group","controlId","Label","Control","value","onChange","target","Footer","variant","_c","App","_s2","initialNodes","description","nodes","setNodes","selectedHolon","setSelectedHolon","parentNode","isRoot","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newParent","nodeId","removeNode","filter","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\n  const [showModal, setShowModal] = useState(false);\n  const [relationshipType, setRelationshipType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  const handleAddNode = (type) => {\n    setRelationshipType(type);\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n    setRelationshipType('');\n    setNodeName('');\n  };\n\n  const handleConfirmModal = () => {\n    setShowModal(false);\n    if (!nodeName) return;\n\n    if (relationshipType.toLowerCase() === 'child') {\n      onAddChild(node, true, nodeName);\n    } else if (relationshipType.toLowerCase() === 'parent') {\n      addNewRoot(node, nodeName);\n    }\n\n    setNodeName('');\n  };\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => handleAddNode('child'))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAddChild={onAddChild} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n          addNewRoot={addNewRoot}\n        />\n      ))}\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add {relationshipType} Node</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"formNodeName\">\n            <Form.Label>Enter the name of the node:</Form.Label>\n            <Form.Control type=\"text\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleConfirmModal}>\n            Add\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAddChild = (parentNode, isRoot = false, nodeName) => {\n    const newChild = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    const addNode = (nodes, parentId) => {\n      if (nodes.id === parentId) {\n        nodes.children.push(newChild);\n        return;\n      }\n\n      nodes.children.forEach(child => addNode(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNode(newNodes, parentNode.id);\n    setNodes(newNodes);\n  };\n\n  const addNewRoot = (parentNode, nodeName) => {\n    const newParent = {\n      id: `root-${Math.random()}`,\n      name: nodeName,\n      children: [parentNode]\n    };\n\n    setNodes({\n      id: 'root',\n      name: 'Information System',\n      children: [newParent],\n    });\n  };\n\n  const onRemoveNode = (nodeId) => {\n    const removeNode = (nodes, parentId, nodeId) => {\n      if (nodes.id === parentId) {\n        nodes.children = nodes.children.filter(child => child.id !== nodeId);\n        return;\n      }\n\n      nodes.children.forEach(child => removeNode(child, parentId, nodeId));\n    };\n\n    const newNodes = { ...nodes };\n    removeNode(newNodes, 'root', nodeId);\n    setNodes(newNodes);\n  };\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const isSelected = (node) => {\n    return selectedHolon && selectedHolon.id === node.id;\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"steps-bar\">\n        <div className=\"step\">\n          <div className=\"step-circle\">1</div>\n          <div className=\"step-label\">Step 1</div>\n        </div>\n        <div className=\"step\">\n          <div className=\"step-circle active\">2</div>\n          <div className=\"step-label\">Step 2</div>\n        </div>\n        <div className=\"step\">\n          <div className=\"step-circle\">3</div>\n          <div className=\"step-label\">Step 3</div>\n        </div>\n      </div>\n      <div className=\"content-area\">\n        <div className=\"holon-details\">\n          {selectedHolon ? (\n            <div>\n              <h2>{selectedHolon.name}</h2>\n              <p>{selectedHolon.description}</p>\n              <button onClick={() => onAddChild(selectedHolon, false)}>Add Child Node</button>\n            </div>\n          ) : (\n            <p className='no-selection'>No Selection</p>\n          )}\n        </div>\n        <Tree label=\"Information System\">\n          <Holon \n            node={nodes} \n            onAddChild={onAddChild} \n            onRemoveNode={onRemoveNode} \n            onSelectNode={onSelectNode} \n            isSelected={isSelected}\n            addNewRoot={addNewRoot}\n          />\n        </Tree>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}