{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAdd,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  isRoot\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action(node, isRoot);\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, onAdd),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: e => handleActionClick(e, onRemoveNode),\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAdd: onAdd,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected,\n      isRoot: false // All children are not root\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [rootNode, setRootNode] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system...',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const onAdd = (parentNode, isRoot) => {\n    if (isRoot) {\n      const nodeType = prompt('Add new node as (1) Child or (2) Parent? Enter 1 or 2:');\n      if (!nodeType) return;\n    }\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n    const newNode = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (!isRoot || nodeType === '1') {\n      parentNode.children.push(newNode);\n      if (isRoot) {\n        setRootNode({\n          ...rootNode\n        });\n      }\n    } else if (isRoot && nodeType === '2') {\n      newNode.children = [parentNode];\n      setRootNode(newNode);\n    }\n  };\n  const onRemoveNode = nodeToRemove => {\n    // Removal logic here (unchanged from your previous logic)\n  };\n  const isSelected = node => selectedHolon && node.id === selectedHolon.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: rootNode,\n        onAdd: onAdd,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: setSelectedHolon,\n        isSelected: isSelected,\n        isRoot: true // Indicate this node is the top-level root\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), selectedHolon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Holon Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-name\",\n        children: [\"Name: \", selectedHolon.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"holon-details-description\",\n        children: [\"Description: \", selectedHolon.description || \"No description available.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QPXNUURpg2otN/DBTaRCqtg9PzM=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Holon","node","onAdd","onRemoveNode","onSelectNode","isSelected","isRoot","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","map","child","_c","App","_s","rootNode","setRootNode","description","selectedHolon","setSelectedHolon","parentNode","nodeType","prompt","nodeName","newNode","Math","random","push","nodeToRemove","lineWidth","lineColor","lineBorderRadius","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './styles.css';\n\nconst Holon = ({ node, onAdd, onRemoveNode, onSelectNode, isSelected, isRoot }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action(node, isRoot);\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, onAdd)}>+</button>\n        </div>\n        <div className=\"name\">{node.name}</div>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={(e) => handleActionClick(e, onRemoveNode)}>x</button>\n        )}\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon \n          key={child.id} \n          node={child} \n          onAdd={onAdd} \n          onRemoveNode={onRemoveNode} \n          onSelectNode={onSelectNode} \n          isSelected={isSelected}\n          isRoot={false} // All children are not root\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const [rootNode, setRootNode] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system...',\n    children: []\n  });\n  const [selectedHolon, setSelectedHolon] = useState(null);\n\n  const onAdd = (parentNode, isRoot) => {\n    if (isRoot) {\n      const nodeType = prompt('Add new node as (1) Child or (2) Parent? Enter 1 or 2:');\n      if (!nodeType) return;\n    }\n\n    const nodeName = prompt('Enter the name of the new holon:');\n    if (!nodeName) return;\n\n    const newNode = {\n      id: `${parentNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n\n    if (!isRoot || nodeType === '1') {\n      parentNode.children.push(newNode);\n      if (isRoot) {\n        setRootNode({ ...rootNode });\n      }\n    } else if (isRoot && nodeType === '2') {\n      newNode.children = [parentNode];\n      setRootNode(newNode);\n    }\n  };\n\n  const onRemoveNode = (nodeToRemove) => {\n    // Removal logic here (unchanged from your previous logic)\n  };\n\n  const isSelected = (node) => selectedHolon && node.id === selectedHolon.id;\n\n  return (\n    <div className=\"app-container\">\n      <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n        <Holon\n          node={rootNode}\n          onAdd={onAdd}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={setSelectedHolon}\n          isSelected={isSelected}\n          isRoot={true} // Indicate this node is the top-level root\n        />\n      </Tree>\n      {selectedHolon && (\n        <div className=\"holon-details\">\n          <h2>Holon Details</h2>\n          <p className='holon-details-name'>Name: {selectedHolon.name}</p>\n          <p className='holon-details-description'>Description: {selectedHolon.description || \"No description available.\"}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}