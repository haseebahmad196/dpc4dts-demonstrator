{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAdd,\n  onRemove,\n  onSelect\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"holon\",\n    onClick: () => onSelect(node),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\",\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-button\",\n        onClick: e => {\n          e.stopPropagation();\n          onAdd(node);\n        },\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        onClick: e => {\n          e.stopPropagation();\n          onRemove(node.id);\n        },\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [{\n      id: 'stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n      children: []\n    }]\n  });\n  const [idCounter, setIdCounter] = useState(3);\n  const onAdd = parent => {\n    const childName = prompt('Enter the name of the child:');\n    const description = 'New child node';\n    if (!childName) return;\n    const newNode = {\n      id: `node-${idCounter}`,\n      name: childName,\n      description,\n      children: []\n    };\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        node.children = [...node.children, newNode];\n        return;\n      }\n      node.children.forEach(child => addNodeRecursively(child, parentId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n    setIdCounter(idCounter + 1);\n  };\n  const onRemove = nodeId => {\n    const removeNodeRecursively = (node, removeId) => {\n      node.children = node.children.filter(child => child.id !== removeId);\n      node.children.forEach(child => removeNodeRecursively(child, removeId));\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNodeRecursively(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n  const onSelect = node => {\n    setSelectedHolon(node);\n  };\n  const renderTreeNodes = node => /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(Holon, {\n      node: node,\n      onAdd: onAdd,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }, this),\n    children: node.children.map(child => renderTreeNodes(child))\n  }, node.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-view\",\n      children: renderTreeNodes(nodes)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holon-details\",\n      children: selectedHolon ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", selectedHolon.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", selectedHolon.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select a holon to see details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rqkTh9zJJWMJsMv32gu45NauKAk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAdd","onRemove","onSelect","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","id","_c","App","_s","nodes","setNodes","description","idCounter","setIdCounter","parent","childName","prompt","newNode","addNodeRecursively","parentId","forEach","child","newNodes","nodeId","removeNodeRecursively","removeId","filter","setSelectedHolon","renderTreeNodes","label","map","selectedHolon","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport './App.css';\n\nconst Holon = ({ node, onAdd, onRemove, onSelect }) => {\n  return (\n    <div className=\"holon\" onClick={() => onSelect(node)}>\n      <div className=\"name\">{node.name}</div>\n      <div className=\"buttons\">\n        <button className=\"add-button\" onClick={(e) => { e.stopPropagation(); onAdd(node); }}>+</button>\n        {node.id !== 'root' && (\n          <button className=\"remove-button\" onClick={(e) => { e.stopPropagation(); onRemove(node.id); }}>x</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    id: 'root',\n    name: 'Information System',\n    description: 'An Information System is a set of components for collecting, storing, and processing data.',\n    children: [\n      {\n        id: 'stakeholder',\n        name: 'Stakeholder',\n        description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n        children: [],\n      },\n      {\n        id: 'infrastructure',\n        name: 'Infrastructure',\n        description: 'Infrastructure is the foundation or framework that supports a system or organization.',\n        children: [],\n      },\n    ],\n  });\n  const [idCounter, setIdCounter] = useState(3);\n\n  const onAdd = (parent) => {\n    const childName = prompt('Enter the name of the child:');\n    const description = 'New child node';\n    if (!childName) return;\n\n    const newNode = {\n      id: `node-${idCounter}`,\n      name: childName,\n      description,\n      children: [],\n    };\n\n    const addNodeRecursively = (node, parentId) => {\n      if (node.id === parentId) {\n        node.children = [...node.children, newNode];\n        return;\n      }\n      node.children.forEach((child) => addNodeRecursively(child, parentId));\n    };\n\n    const newNodes = { ...nodes };\n    addNodeRecursively(newNodes, parent.id);\n    setNodes(newNodes);\n    setIdCounter(idCounter + 1);\n  };\n\n  const onRemove = (nodeId) => {\n    const removeNodeRecursively = (node, removeId) => {\n      node.children = node.children.filter((child) => child.id !== removeId);\n      node.children.forEach((child) => removeNodeRecursively(child, removeId));\n    };\n\n    const newNodes = { ...nodes };\n    removeNodeRecursively(newNodes, nodeId);\n    setNodes(newNodes);\n  };\n  const onSelect = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const renderTreeNodes = (node) => (\n    <TreeNode label={<Holon node={node} onAdd={onAdd} onRemove={onRemove} />} key={node.id}>\n      {node.children.map((child) => renderTreeNodes(child))}\n    </TreeNode>\n  );\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"canvas-view\">\n        {renderTreeNodes(nodes)}\n      </div>\n      <div className=\"holon-details\">\n        {selectedHolon ? (\n          <>\n            <h2>Holon Details</h2>\n            <p>Name: {selectedHolon.name}</p>\n            <p>Description: {selectedHolon.description}</p>\n          </>\n        ) : (\n          <p>Select a holon to see details.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}