{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree } from 'react-tree-graph'; // or { AnimatedTree as Tree }\nimport 'react-tree-graph/dist/style.css';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    name: 'Information System',\n    children: [{\n      name: 'Stakeholder',\n      children: [] // Assuming children can be dynamically added\n    }, {\n      name: 'Infrastructure',\n      children: [] // Assuming children can be dynamically added\n    }]\n  });\n\n  // Function to handle adding a child node (simplified example)\n  const handleAddChild = nodeName => {\n    // Logic to add child node\n    console.log(`Add child to ${nodeName}`); // Implement actual logic\n  };\n\n  // Function to handle node selection (display details)\n  const handleSelectNode = node => {\n    console.log(`Node selected: ${node.name}`); // Implement actual logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        data: nodes,\n        height: 400,\n        width: 600,\n        svgProps: {\n          transform: 'rotate(90)',\n          className: 'custom-tree'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"GgWjChoBoyg+M7f5FmnyuMd4rpg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Tree","jsxDEV","_jsxDEV","App","_s","nodes","setNodes","name","children","handleAddChild","nodeName","console","log","handleSelectNode","node","className","data","height","width","svgProps","transform","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree } from 'react-tree-graph'; // or { AnimatedTree as Tree }\nimport 'react-tree-graph/dist/style.css';\nimport './styles.css';\n\nconst App = () => {\n  const [nodes, setNodes] = useState({\n    name: 'Information System',\n    children: [\n      {\n        name: 'Stakeholder',\n        children: [] // Assuming children can be dynamically added\n      },\n      {\n        name: 'Infrastructure',\n        children: [] // Assuming children can be dynamically added\n      }\n    ]\n  });\n\n  // Function to handle adding a child node (simplified example)\n  const handleAddChild = (nodeName) => {\n    // Logic to add child node\n    console.log(`Add child to ${nodeName}`); // Implement actual logic\n  };\n\n  // Function to handle node selection (display details)\n  const handleSelectNode = (node) => {\n    console.log(`Node selected: ${node.name}`); // Implement actual logic\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"tree-container\">\n        <Tree\n          data={nodes}\n          height={400}\n          width={600}\n          svgProps={{\n            transform: 'rotate(90)',\n            className: 'custom-tree'\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB,CAAC,CAAC;AACzC,OAAO,iCAAiC;AACxC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,IAAI,EAAE,oBAAoB;IAC1BC,QAAQ,EAAE,CACR;MACED,IAAI,EAAE,aAAa;MACnBC,QAAQ,EAAE,EAAE,CAAC;IACf,CAAC,EACD;MACED,IAAI,EAAE,gBAAgB;MACtBC,QAAQ,EAAE,EAAE,CAAC;IACf,CAAC;EAEL,CAAC,CAAC;;EAEF;EACA,MAAMC,cAAc,GAAIC,QAAQ,IAAK;IACnC;IACAC,OAAO,CAACC,GAAG,CAAE,gBAAeF,QAAS,EAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;;EAED;EACA,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;IACjCH,OAAO,CAACC,GAAG,CAAE,kBAAiBE,IAAI,CAACP,IAAK,EAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACEL,OAAA;IAAKa,SAAS,EAAC,eAAe;IAAAP,QAAA,eAC5BN,OAAA;MAAKa,SAAS,EAAC,gBAAgB;MAAAP,QAAA,eAC7BN,OAAA,CAACF,IAAI;QACHgB,IAAI,EAAEX,KAAM;QACZY,MAAM,EAAE,GAAI;QACZC,KAAK,EAAE,GAAI;QACXC,QAAQ,EAAE;UACRC,SAAS,EAAE,YAAY;UACvBL,SAAS,EAAE;QACb;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCID,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA2CT,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}