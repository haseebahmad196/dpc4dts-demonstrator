{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add-button\",\n          onClick: e => handleActionClick(e, () => onAddChild(node)),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), node.id !== 'root' && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"remove-button\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Holon;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1); // Manage modal steps\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1); // Reset modal step to the first step on close\n    setNodeName(''); // Clear node name\n  };\n  const handleModalShow = node => {\n    setSelectedHolon(node);\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    handleModalShow(parentNode);\n  };\n  const onSelectNode = node => {\n    setSelectedHolon(node);\n  };\n  const handleModalNextStep = type => {\n    setNodeType(type);\n    setModalStep(2); // Move to the next step for naming the node\n  };\n  const handleSubmit = () => {\n    handleModalClose();\n    if (nodeType === \"child\") {\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onSelectNode: onSelectNode,\n          isSelected: node => selectedHolon && node.id === selectedHolon.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Add Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [modalStep === 1 && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: 'center',\n            color: '#007bff'\n          },\n          children: \"Press \\\"1\\\" for Child Node, \\\"2\\\" for Parent Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), modalStep === 2 && /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formNodeName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: [\"Enter the name for the \", nodeType === '1' ? 'child' : 'parent', \" node\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Node name\",\n              value: nodeName,\n              onChange: e => setNodeName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [modalStep === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => handleModalNextStep('1'),\n            children: \"Press 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleModalNextStep('2'),\n            children: \"Press 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), modalStep === 2 && /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"P2tezXhB04G3zLATswtfokaGkow=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","Modal","Button","Form","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","id","map","child","_c","App","_s","initialNodes","nodes","setNodes","selectedHolon","setSelectedHolon","showModal","setShowModal","modalStep","setModalStep","nodeType","setNodeType","nodeName","setNodeName","handleModalClose","handleModalShow","parentNode","handleModalNextStep","type","handleSubmit","newChild","Math","random","addNode","parentId","push","forEach","newNodes","newParent","lineWidth","lineColor","lineBorderRadius","show","onHide","Header","closeButton","Title","Body","style","textAlign","color","Group","controlId","Label","Control","placeholder","value","onChange","target","Footer","variant","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport './styles.css';\n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n\n  const selected = isSelected(node);\n\n  return (\n    <TreeNode label={\n      <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\n        <div className=\"name\">{node.name}</div>\n        <div className=\"buttons\">\n          <button className=\"add-button\" onClick={(e) => handleActionClick(e, () => onAddChild(node))}>+</button>\n          {node.id !== 'root' && (\n            <button className=\"remove-button\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>x</button>\n          )}\n        </div>\n      </div>\n    }>\n      {node.children && node.children.map(child => (\n        <Holon\n          key={child.id}\n          node={child}\n          onAddChild={onAddChild}\n          onRemoveNode={onRemoveNode}\n          onSelectNode={onSelectNode}\n          isSelected={isSelected}\n        />\n      ))}\n    </TreeNode>\n  );\n};\n\nconst App = () => {\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    children: [\n      {\n        id: 'Stakeholder',\n        name: 'Stakeholder',\n        children: [],\n      },\n      {\n        id: 'Infrastructure',\n        name: 'Infrastructure',\n        children: [],  \n      }\n    ],\n  };\n\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedHolon, setSelectedHolon] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [modalStep, setModalStep] = useState(1);  // Manage modal steps\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n\n  const handleModalClose = () => {\n    setShowModal(false);\n    setModalStep(1); // Reset modal step to the first step on close\n    setNodeName(''); // Clear node name\n  };\n\n  const handleModalShow = (node) => {\n    setSelectedHolon(node);\n    setShowModal(true);\n  };\n\n  const onAddChild = (parentNode) => {\n    handleModalShow(parentNode);\n  };\n\n  const onSelectNode = (node) => {\n    setSelectedHolon(node);\n  };\n\n  const handleModalNextStep = (type) => {\n    setNodeType(type);\n    setModalStep(2); // Move to the next step for naming the node\n  };\n\n  const handleSubmit = () => {\n    handleModalClose();\n    if (nodeType === \"child\") {\n      const newChild = {\n        id: `${selectedHolon.id}-${Math.random()}`,\n        name: nodeName,\n        children: []\n      };\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newChild);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = { ...nodes };\n      addNode(newNodes, selectedHolon.id);\n      setNodes(newNodes);\n    } else if (nodeType === \"parent\") {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedHolon]\n      };\n      setNodes(newParent);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"content-area\">\n        <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"}>\n          <Holon\n            node={nodes}\n            onAddChild={onAddChild}\n            onSelectNode={onSelectNode}\n            isSelected={(node) => selectedHolon && node.id === selectedHolon.id}\n          />\n        </Tree>\n      </div>\n      <Modal show={showModal} onHide={handleModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add Node</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalStep === 1 && (\n            <p style={{ textAlign: 'center', color: '#007bff' }}>\n              Press \"1\" for Child Node, \"2\" for Parent Node\n            </p>\n          )}\n          {modalStep === 2 && (\n            <Form>\n              <Form.Group controlId=\"formNodeName\">\n                <Form.Label>Enter the name for the {nodeType === '1' ? 'child' : 'parent'} node</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={e => setNodeName(e.target.value)} />\n              </Form.Group>\n            </Form>\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          {modalStep === 1 && (\n            <>\n              <Button variant=\"secondary\" onClick={() => handleModalNextStep('1')}>Press 1</Button>\n              <Button variant=\"primary\" onClick={() => handleModalNextStep('2')}>Press 2</Button>\n            </>\n          )}\n          {modalStep === 2 && (\n            <Button variant=\"primary\" onClick={handleSubmit}>\n              Save Changes\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}