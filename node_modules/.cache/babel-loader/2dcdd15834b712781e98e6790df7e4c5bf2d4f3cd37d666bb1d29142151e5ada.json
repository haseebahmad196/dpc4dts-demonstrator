{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, Position } from 'reactflow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport 'reactflow/dist/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport './styles.css';\nimport CommunicationPage from './CommunicationPage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `p-2 mb-2 border ${selected ? 'tree-label selected' : 'tree-label'} rounded`,\n    onClick: () => onSelectNode(node),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: node.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-end\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"sm\",\n        className: \"me-1\",\n        onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"danger\",\n        size: \"sm\",\n        onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrash\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  selectedNode\n}) => {\n  const isSelected = node => selectedNode && node.id === selectedNode.id;\n  const generateElements = nodes => {\n    const elements = [];\n    const traverse = (node, parent = null) => {\n      elements.push({\n        id: node.id,\n        data: {\n          label: /*#__PURE__*/_jsxDEV(Holon, {\n            node: node,\n            onAddChild: onAddChild,\n            onRemoveNode: onRemoveNode,\n            onSelectNode: onSelectNode,\n            isSelected: isSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 28\n          }, this)\n        },\n        position: {\n          x: Math.random() * 400,\n          y: Math.random() * 400\n        },\n        style: {\n          border: '1px solid #777',\n          padding: '10px'\n        }\n      });\n      if (parent) {\n        elements.push({\n          id: `${parent.id}-${node.id}`,\n          source: parent.id,\n          target: node.id,\n          type: 'smoothstep'\n        });\n      }\n      node.children && node.children.forEach(child => traverse(child, node));\n    };\n    traverse(nodes);\n    return elements;\n  };\n  const elements = generateElements(nodes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      elements: elements,\n      nodesDraggable: false,\n      nodesConnectable: false,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_c2 = StructurePage;\nconst App = () => {\n  _s();\n  const initialNodes = {\n    id: 'root',\n    name: 'Information System',\n    description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n    children: [{\n      id: 'Stakeholder',\n      name: 'Stakeholder',\n      description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n      children: []\n    }, {\n      id: 'Infrastructure',\n      name: 'Infrastructure',\n      description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n      children: []\n    }]\n  };\n  const [nodes, setNodes] = useState(initialNodes);\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [nodeType, setNodeType] = useState('');\n  const [nodeName, setNodeName] = useState('');\n  const [activeStep, setActiveStep] = useState(1);\n  const handleModalClose = () => {\n    setShowModal(false);\n    setNodeName('');\n  };\n  const handleModalShow = () => {\n    setShowModal(true);\n  };\n  const onAddChild = parentNode => {\n    setSelectedNode(parentNode);\n    setNodeType('child');\n    handleModalShow();\n  };\n  const onRemoveNode = nodeId => {\n    const removeNode = (nodes, nodeIdToRemove) => {\n      if (nodes.id === nodeIdToRemove) {\n        return null;\n      }\n      nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n      nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n      return nodes;\n    };\n    const newNodes = removeNode({\n      ...nodes\n    }, nodeId);\n    setNodes(newNodes);\n    setSelectedNode(null);\n  };\n  const addNewRoot = () => {\n    setSelectedNode(nodes);\n    setNodeType('parent');\n    handleModalShow();\n  };\n  const handleNodeTypeSelection = type => {\n    setNodeType(type);\n  };\n  const handleSubmit = () => {\n    const newNode = {\n      id: `${selectedNode.id}-${Math.random()}`,\n      name: nodeName,\n      children: []\n    };\n    if (nodeType === 'child') {\n      const addNode = (nodes, parentId) => {\n        if (nodes.id === parentId) {\n          nodes.children.push(newNode);\n          return;\n        }\n        nodes.children.forEach(child => addNode(child, parentId));\n      };\n      const newNodes = {\n        ...nodes\n      };\n      addNode(newNodes, selectedNode.id);\n      setNodes(newNodes);\n    } else if (nodeType === 'parent') {\n      const newParent = {\n        id: `root-${Math.random()}`,\n        name: nodeName,\n        children: [selectedNode]\n      };\n      setNodes(newParent);\n    }\n    handleModalClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step me-3 ${activeStep === 1 ? 'active' : ''}`,\n        onClick: () => setActiveStep(1),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle bg-secondary text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 1 ? 'bg-primary' : ''}`,\n          style: {\n            width: '30px',\n            height: '30px'\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-2 fw-bold\",\n          children: \"Structure\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `step ${activeStep === 2 ? 'active' : ''}`,\n        onClick: () => setActiveStep(2),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `step-circle bg-secondary text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 2 ? 'bg-primary' : ''}`,\n          style: {\n            width: '30px',\n            height: '30px'\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-2 fw-bold\",\n          children: \"Communication\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: activeStep === 1 ? /*#__PURE__*/_jsxDEV(StructurePage, {\n          nodes: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: setSelectedNode,\n          selectedNode: selectedNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Communication Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 25\n        }, this) // Placeholder for the CommunicationPage component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Holon Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), selectedNode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 32\n            }, this), \" \", selectedNode.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 32\n            }, this), \" \", selectedNode.description || \"No description available.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleModalClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Select Node Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          type: \"radio\",\n          name: \"nodeType\",\n          value: nodeType,\n          onChange: value => handleNodeTypeSelection(value),\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"child\",\n            variant: \"outline-primary\",\n            children: \"Child Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"parent\",\n            variant: \"outline-primary\",\n            children: \"Parent Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), nodeType && /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formNodeName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter the name for the Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Node name\",\n            value: nodeName,\n            onChange: e => setNodeName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleModalClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          disabled: !nodeType,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"0keBHFpaF+wmZUpE+prK7mgJQ9U=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","MiniMap","Controls","Background","Handle","Position","FontAwesomeIcon","faPlus","faTrash","Button","Modal","Form","ToggleButton","ToggleButtonGroup","CommunicationPage","jsxDEV","_jsxDEV","Fragment","_Fragment","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","id","_c","StructurePage","nodes","selectedNode","generateElements","elements","traverse","parent","push","data","label","position","x","Math","random","y","style","border","padding","source","target","type","forEach","child","height","nodesDraggable","nodesConnectable","_c2","App","_s","initialNodes","description","setNodes","setSelectedNode","showModal","setShowModal","nodeType","setNodeType","nodeName","setNodeName","activeStep","setActiveStep","handleModalClose","handleModalShow","parentNode","nodeId","removeNode","nodeIdToRemove","filter","newNodes","addNewRoot","handleNodeTypeSelection","handleSubmit","newNode","addNode","parentId","newParent","width","show","onHide","Header","closeButton","Title","Body","value","onChange","Group","controlId","Label","Control","placeholder","Footer","disabled","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, Handle, Position } from 'reactflow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport 'reactflow/dist/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport './styles.css';\nimport CommunicationPage from './CommunicationPage'; \n\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\n    const handleActionClick = (e, action) => {\n        e.stopPropagation();\n        action();\n    };\n\n    const selected = isSelected(node);\n\n    return (\n        <div className={`p-2 mb-2 border ${selected ? 'tree-label selected' : 'tree-label'} rounded`} onClick={() => onSelectNode(node)}>\n            <div>{node.name}</div>\n            <div className=\"d-flex justify-content-end\">\n                <Button variant=\"primary\" size=\"sm\" className=\"me-1\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\n                    <FontAwesomeIcon icon={faPlus} />\n                </Button>\n                <Button variant=\"danger\" size=\"sm\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\n                    <FontAwesomeIcon icon={faTrash} />\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, selectedNode }) => {\n    const isSelected = (node) => selectedNode && node.id === selectedNode.id;\n\n    const generateElements = (nodes) => {\n        const elements = [];\n\n        const traverse = (node, parent = null) => {\n            elements.push({\n                id: node.id,\n                data: {\n                    label: <Holon\n                        node={node}\n                        onAddChild={onAddChild}\n                        onRemoveNode={onRemoveNode}\n                        onSelectNode={onSelectNode}\n                        isSelected={isSelected}\n                    />\n                },\n                position: { x: Math.random() * 400, y: Math.random() * 400 },\n                style: { border: '1px solid #777', padding: '10px' }\n            });\n\n            if (parent) {\n                elements.push({\n                    id: `${parent.id}-${node.id}`,\n                    source: parent.id,\n                    target: node.id,\n                    type: 'smoothstep'\n                });\n            }\n\n            node.children && node.children.forEach(child => traverse(child, node));\n        };\n\n        traverse(nodes);\n        return elements;\n    };\n\n    const elements = generateElements(nodes);\n\n    return (\n        <div style={{ height: '600px' }}>\n            <ReactFlow elements={elements} nodesDraggable={false} nodesConnectable={false}>\n                <MiniMap />\n                <Controls />\n                <Background />\n            </ReactFlow>\n        </div>\n    );\n};\n\nconst App = () => {\n    const initialNodes = {\n        id: 'root',\n        name: 'Information System',\n        description: 'An information system is an organized combination of people, hardware, software, communication networks, and data resources that collects, transforms, and disseminates information in an organization.',\n        children: [\n            {\n                id: 'Stakeholder',\n                name: 'Stakeholder',\n                description: 'A stakeholder refers to any individual, group, or organization that has an interest or concern in the system, its development, implementation, or outcomes. These stakeholders can be internal or external to the organization implementing the information system. Understanding and managing stakeholders is crucial for the success of an information system project.',\n                children: [],\n            },\n            {\n                id: 'Infrastructure',\n                name: 'Infrastructure',\n                description: 'Infrastructure in the context of information systems refers to the fundamental physical and organizational structures, facilities, and services required for the operation of an information system. This includes hardware, software, networking components, data centers, and the personnel that maintain and manage the system. Effective infrastructure supports the smooth and efficient collection, storage, processing, and dissemination of information.',\n                children: [],\n            }\n        ],\n    };\n\n    const [nodes, setNodes] = useState(initialNodes);\n    const [selectedNode, setSelectedNode] = useState(null);\n    const [showModal, setShowModal] = useState(false);\n    const [nodeType, setNodeType] = useState('');\n    const [nodeName, setNodeName] = useState('');\n    const [activeStep, setActiveStep] = useState(1);\n\n    const handleModalClose = () => {\n        setShowModal(false);\n        setNodeName('');\n    };\n\n    const handleModalShow = () => {\n        setShowModal(true);\n    };\n\n    const onAddChild = (parentNode) => {\n        setSelectedNode(parentNode);\n        setNodeType('child');\n        handleModalShow();\n    };\n\n    const onRemoveNode = (nodeId) => {\n        const removeNode = (nodes, nodeIdToRemove) => {\n            if (nodes.id === nodeIdToRemove) {\n                return null;\n            }\n            nodes.children = nodes.children.filter(child => child.id !== nodeIdToRemove);\n            nodes.children.forEach(child => removeNode(child, nodeIdToRemove));\n            return nodes;\n        };\n\n        const newNodes = removeNode({ ...nodes }, nodeId);\n        setNodes(newNodes);\n        setSelectedNode(null);\n    };\n\n    const addNewRoot = () => {\n        setSelectedNode(nodes);\n        setNodeType('parent');\n        handleModalShow();\n    };\n\n    const handleNodeTypeSelection = (type) => {\n        setNodeType(type);\n    };\n\n    const handleSubmit = () => {\n        const newNode = {\n            id: `${selectedNode.id}-${Math.random()}`,\n            name: nodeName,\n            children: []\n        };\n        if (nodeType === 'child') {\n            const addNode = (nodes, parentId) => {\n                if (nodes.id === parentId) {\n                    nodes.children.push(newNode);\n                    return;\n                }\n                nodes.children.forEach(child => addNode(child, parentId));\n            };\n\n            const newNodes = { ...nodes };\n            addNode(newNodes, selectedNode.id);\n            setNodes(newNodes);\n        } else if (nodeType === 'parent') {\n            const newParent = {\n                id: `root-${Math.random()}`,\n                name: nodeName,\n                children: [selectedNode]\n            };\n            setNodes(newParent);\n        }\n        handleModalClose();\n    };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"d-flex justify-content-start align-items-center p-3 bg-light shadow-sm\">\n                <div className={`step me-3 ${activeStep === 1 ? 'active' : ''}`} onClick={() => setActiveStep(1)}>\n                    <div className={`step-circle bg-secondary text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 1 ? 'bg-primary' : ''}`} style={{ width: '30px', height: '30px' }}>1</div>\n                    <div className=\"ms-2 fw-bold\">Structure</div>\n                </div>\n                <div className={`step ${activeStep === 2 ? 'active' : ''}`} onClick={() => setActiveStep(2)}>\n                    <div className={`step-circle bg-secondary text-white rounded-circle d-flex justify-content-center align-items-center ${activeStep === 2 ? 'bg-primary' : ''}`} style={{ width: '30px', height: '30px' }}>2</div>\n                    <div className=\"ms-2 fw-bold\">Communication</div>\n                </div>\n            </div>\n            <div className=\"row p-3\">\n                <div className=\"col-md-8\">\n                    {activeStep === 1 ? (\n                        <StructurePage\n                            nodes={nodes}\n                            onAddChild={onAddChild}\n                            onRemoveNode={onRemoveNode}\n                            onSelectNode={setSelectedNode}\n                            selectedNode={selectedNode}\n                        />\n                    ) : (\n                        <div>Communication Page</div> // Placeholder for the CommunicationPage component\n                    )}\n                </div>\n                <div className=\"col-md-4\">\n                    <h2>Holon Details</h2>\n                    {selectedNode ? (\n                        <>\n                            <p><strong>Name:</strong> {selectedNode.name}</p>\n                            <p><strong>Description:</strong> {selectedNode.description || \"No description available.\"}</p>\n                        </>\n                    ) : (\n                        <p>No Selection</p>\n                    )}\n                </div>\n            </div>\n            <Modal show={showModal} onHide={handleModalClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Select Node Type</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <ToggleButtonGroup\n                        type=\"radio\"\n                        name=\"nodeType\"\n                        value={nodeType}\n                        onChange={(value) => handleNodeTypeSelection(value)}\n                        className=\"mb-3\"\n                    >\n                        <ToggleButton value=\"child\" variant=\"outline-primary\">Child Node</ToggleButton>\n                        <ToggleButton value=\"parent\" variant=\"outline-primary\">Parent Node</ToggleButton>\n                    </ToggleButtonGroup>\n                    {nodeType && (\n                        <Form.Group controlId=\"formNodeName\">\n                            <Form.Label>Enter the name for the Node</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Node name\" value={nodeName} onChange={(e) => setNodeName(e.target.value)} />\n                        </Form.Group>\n                    )}\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleModalClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleSubmit} disabled={!nodeType}>\n                        Save\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}