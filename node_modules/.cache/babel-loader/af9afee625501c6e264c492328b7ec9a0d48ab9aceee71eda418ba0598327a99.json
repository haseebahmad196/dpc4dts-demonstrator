{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\StructurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `p-2 mb-2 border ${selected ? 'tree-label selected' : 'tree-label'} rounded`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          className: \"me-1\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected,\n  addNewRoot\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      tabIndex: \"0\",\n      className: `btn btn-outline-primary ${isSelected(nodes) ? 'selected' : ''}`,\n      onClick: addNewRoot,\n      children: \"Parent Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      lineWidth: \"2px\",\n      lineColor: \"blue\",\n      lineBorderRadius: \"5px\",\n      lineStyle: \"dashed\",\n      children: /*#__PURE__*/_jsxDEV(Holon, {\n        node: nodes,\n        onAddChild: onAddChild,\n        onRemoveNode: onRemoveNode,\n        onSelectNode: onSelectNode,\n        isSelected: node => isSelected && node.id === isSelected.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c2 = StructurePage;\nconst App = () => {\n  _s();\n  const [nodes, setNodes] = useState({\n    id: 1,\n    name: 'Root Node',\n    children: []\n  });\n  const [selectedNode, setSelectedNode] = useState(null);\n  const handleAddChild = (parentNode, isChild) => {\n    const newNode = {\n      id: Date.now(),\n      name: isChild ? 'New Child Node' : 'New Parent Node',\n      children: []\n    };\n    const addNodeRecursively = node => {\n      if (node.id === parentNode.id) {\n        node.children.push(newNode);\n      } else {\n        node.children.forEach(child => addNodeRecursively(child));\n      }\n    };\n    const newNodes = {\n      ...nodes\n    };\n    addNodeRecursively(newNodes);\n    setNodes(newNodes);\n  };\n  const handleRemoveNode = nodeId => {\n    const removeNodeRecursively = node => {\n      node.children = node.children.filter(child => child.id !== nodeId);\n      node.children.forEach(removeNodeRecursively);\n    };\n    const newNodes = {\n      ...nodes\n    };\n    removeNodeRecursively(newNodes);\n    setNodes(newNodes);\n  };\n  const handleSelectNode = node => {\n    setSelectedNode(node);\n  };\n  const addNewRoot = () => {\n    const newRoot = {\n      id: Date.now(),\n      name: 'New Root Node',\n      children: [nodes]\n    };\n    setNodes(newRoot);\n    setSelectedNode(newRoot);\n  };\n  return /*#__PURE__*/_jsxDEV(StructurePage, {\n    nodes: nodes,\n    onAddChild: handleAddChild,\n    onRemoveNode: handleRemoveNode,\n    onSelectNode: handleSelectNode,\n    isSelected: selectedNode,\n    addNewRoot: addNewRoot\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"/eM25iXjKQ7mS58FxpXYlos6aIs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","Button","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","id","map","child","_c","StructurePage","nodes","addNewRoot","tabIndex","lineWidth","lineColor","lineBorderRadius","lineStyle","_c2","App","_s","setNodes","selectedNode","setSelectedNode","handleAddChild","parentNode","isChild","newNode","Date","now","addNodeRecursively","push","forEach","newNodes","handleRemoveNode","nodeId","removeNodeRecursively","filter","handleSelectNode","newRoot","_c3","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/StructurePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './styles.css';\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`p-2 mb-2 border ${selected ? 'tree-label selected' : 'tree-label'} rounded`} onClick={() => onSelectNode(node)}>\r\n                <div>{node.name}</div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button variant=\"primary\" size=\"sm\" className=\"me-1\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </Button>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, isSelected, addNewRoot }) => {\r\n    return (\r\n        <div>\r\n            <label\r\n                tabIndex=\"0\"\r\n                className={`btn btn-outline-primary ${isSelected(nodes) ? 'selected' : ''}`}\r\n                onClick={addNewRoot}\r\n            >\r\n                Parent Node\r\n            </label>\r\n            <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                <Holon\r\n                    node={nodes}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={(node) => isSelected && node.id === isSelected.id}\r\n                />\r\n            </Tree>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [nodes, setNodes] = useState({\r\n        id: 1,\r\n        name: 'Root Node',\r\n        children: [],\r\n    });\r\n    const [selectedNode, setSelectedNode] = useState(null);\r\n\r\n    const handleAddChild = (parentNode, isChild) => {\r\n        const newNode = {\r\n            id: Date.now(),\r\n            name: isChild ? 'New Child Node' : 'New Parent Node',\r\n            children: [],\r\n        };\r\n\r\n        const addNodeRecursively = (node) => {\r\n            if (node.id === parentNode.id) {\r\n                node.children.push(newNode);\r\n            } else {\r\n                node.children.forEach(child => addNodeRecursively(child));\r\n            }\r\n        };\r\n\r\n        const newNodes = { ...nodes };\r\n        addNodeRecursively(newNodes);\r\n        setNodes(newNodes);\r\n    };\r\n\r\n    const handleRemoveNode = (nodeId) => {\r\n        const removeNodeRecursively = (node) => {\r\n            node.children = node.children.filter(child => child.id !== nodeId);\r\n            node.children.forEach(removeNodeRecursively);\r\n        };\r\n\r\n        const newNodes = { ...nodes };\r\n        removeNodeRecursively(newNodes);\r\n        setNodes(newNodes);\r\n    };\r\n\r\n    const handleSelectNode = (node) => {\r\n        setSelectedNode(node);\r\n    };\r\n\r\n    const addNewRoot = () => {\r\n        const newRoot = {\r\n            id: Date.now(),\r\n            name: 'New Root Node',\r\n            children: [nodes],\r\n        };\r\n        setNodes(newRoot);\r\n        setSelectedNode(newRoot);\r\n    };\r\n\r\n    return (\r\n        <StructurePage\r\n            nodes={nodes}\r\n            onAddChild={handleAddChild}\r\n            onRemoveNode={handleRemoveNode}\r\n            onSelectNode={handleSelectNode}\r\n            isSelected={selectedNode}\r\n            addNewRoot={addNewRoot}\r\n        />\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}