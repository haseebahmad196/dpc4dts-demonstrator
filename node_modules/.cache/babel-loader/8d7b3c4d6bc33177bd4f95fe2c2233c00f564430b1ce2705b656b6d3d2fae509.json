{"ast":null,"code":"var _jsxFileName = \"C:\\\\Documents for a job\\\\Certifications\\\\Meta Frontend\\\\my-react-app\\\\src\\\\StructurePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Tree, TreeNode } from 'react-organizational-chart';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Holon = ({\n  node,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  const handleActionClick = (e, action) => {\n    e.stopPropagation();\n    action();\n  };\n  const selected = isSelected(node);\n  return /*#__PURE__*/_jsxDEV(TreeNode, {\n    label: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `tree-label ${selected ? 'selected' : ''}`,\n      onClick: () => onSelectNode(node),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"name\",\n        children: node.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          size: \"sm\",\n          className: \"me-1\",\n          onClick: e => handleActionClick(e, () => onAddChild(node, true)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          size: \"sm\",\n          onClick: e => handleActionClick(e, () => onRemoveNode(node.id)),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this),\n    children: node.children && node.children.map(child => /*#__PURE__*/_jsxDEV(Holon, {\n      node: child,\n      onAddChild: onAddChild,\n      onRemoveNode: onRemoveNode,\n      onSelectNode: onSelectNode,\n      isSelected: isSelected\n    }, child.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = Holon;\nconst StructurePage = ({\n  nodes,\n  onAddChild,\n  onRemoveNode,\n  onSelectNode,\n  isSelected\n}) => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const handleClose = () => setShowModal(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tree-container\",\n      children: /*#__PURE__*/_jsxDEV(Tree, {\n        lineWidth: \"2px\",\n        lineColor: \"blue\",\n        lineBorderRadius: \"5px\",\n        lineStyle: \"dashed\",\n        children: /*#__PURE__*/_jsxDEV(Holon, {\n          node: nodes,\n          onAddChild: onAddChild,\n          onRemoveNode: onRemoveNode,\n          onSelectNode: onSelectNode,\n          isSelected: node => isSelected && node.id === isSelected.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Modal Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"Additional information or interactions can be placed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(StructurePage, \"uVlnG5KLfXemZk5i5Fl+Cg356FU=\");\n_c2 = StructurePage;\nexport default StructurePage;\nvar _c, _c2;\n$RefreshReg$(_c, \"Holon\");\n$RefreshReg$(_c2, \"StructurePage\");","map":{"version":3,"names":["React","useState","Tree","TreeNode","FontAwesomeIcon","faPlus","faTrash","Modal","Button","jsxDEV","_jsxDEV","Holon","node","onAddChild","onRemoveNode","onSelectNode","isSelected","handleActionClick","e","action","stopPropagation","selected","label","className","onClick","children","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","icon","id","map","child","_c","StructurePage","nodes","_s","showModal","setShowModal","handleClose","lineWidth","lineColor","lineBorderRadius","lineStyle","show","onHide","Header","closeButton","Title","Body","Footer","_c2","$RefreshReg$"],"sources":["C:/Documents for a job/Certifications/Meta Frontend/my-react-app/src/StructurePage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Tree, TreeNode } from 'react-organizational-chart';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Modal, Button } from 'react-bootstrap';\r\n\r\nconst Holon = ({ node, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\r\n    const handleActionClick = (e, action) => {\r\n        e.stopPropagation();\r\n        action();\r\n    };\r\n\r\n    const selected = isSelected(node);\r\n\r\n    return (\r\n        <TreeNode label={\r\n            <div className={`tree-label ${selected ? 'selected' : ''}`} onClick={() => onSelectNode(node)}>\r\n                <div className=\"name\">{node.name}</div>\r\n                <div className=\"buttons\">\r\n                    <Button variant=\"primary\" size=\"sm\" className=\"me-1\" onClick={(e) => handleActionClick(e, () => onAddChild(node, true))}>\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                    </Button>\r\n                    <Button variant=\"danger\" size=\"sm\" onClick={(e) => handleActionClick(e, () => onRemoveNode(node.id))}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }>\r\n            {node.children && node.children.map(child => (\r\n                <Holon\r\n                    key={child.id}\r\n                    node={child}\r\n                    onAddChild={onAddChild}\r\n                    onRemoveNode={onRemoveNode}\r\n                    onSelectNode={onSelectNode}\r\n                    isSelected={isSelected}\r\n                />\r\n            ))}\r\n        </TreeNode>\r\n    );\r\n};\r\n\r\nconst StructurePage = ({ nodes, onAddChild, onRemoveNode, onSelectNode, isSelected }) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const handleClose = () => setShowModal(false);\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <div className=\"tree-container\">\r\n                <Tree lineWidth={\"2px\"} lineColor={\"blue\"} lineBorderRadius={\"5px\"} lineStyle={\"dashed\"}>\r\n                    <Holon\r\n                        node={nodes}\r\n                        onAddChild={onAddChild}\r\n                        onRemoveNode={onRemoveNode}\r\n                        onSelectNode={onSelectNode}\r\n                        isSelected={(node) => isSelected && node.id === isSelected.id}\r\n                    />\r\n                </Tree>\r\n            </div>\r\n\r\n            <Modal show={showModal} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal Title</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Additional information or interactions can be placed here.\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={handleClose}>\r\n                        Save Changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StructurePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}